{"version":3,"sources":["assets/Rolling-1.2s-184px.gif","serviceWorker.js","utils/index.js","api/cache.js","api/spotify.js","components/login.js","config.js","api/player.js","api/index.js","assets/spotify.js","components/menu.js","components/nowPlayingInfo.js","components/timer/index.js","components/timer/timerContainer.js","components/nowPlayingBar.js","assets/loadingImg.js","components/loading.js","components/tracklist.js","components/tracklistHeader.js","pages/playlist.js","components/grid.js","pages/album.js","components/relatedArtists.js","pages/artist.js","components/userWidget.js","components/topBar.js","pages/search.js","constants.js","pages/gridTemplate.js","components/main.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","getSession","isAuthenticated","access_token","localStorage","getItem","token_type","removeItem","console","log","get_device_id","expires_at","JSON","parse","Date","valueOf","orderList","item","arr","key","indexOf","before","newArr","found","forEach","n","i","includes","push","formatTrackDuration","millis","minutes","Math","floor","seconds","toFixed","cache","Cache","axios","interceptors","request","use","method","url","_cached","get","__fromCache","data","adapter","Promise","resolve","status","statusText","headers","config","error","reject","response","params","__cache","set","del","uri","replace","http","api","base_url","parentUri","exec","Object","keys","debug","_url","setupCache","get_user","get_search","query","type","size","get_featured_playlist","country","get_recently_tracks","get_album","id","split","length","get_artists_albums","get_playlist_cover_image","get_playlist_items","get_a_playlist","get_artist_top_tracks","get_artist","get_related_artists","get_new_releases","StyledLogin","styled","div","process","Login","this","props","onLogin","err","Error","className","style","backgroundImage","backgroundSize","clientId","redirectUri","onSuccess","onFailure","scope","href","target","rel","React","Component","previous","lastUri","fetch","play","next","pause","resume","a","uris","queue","map","body","stringify","player","Spotify","Player","playerInstance","name","getOAuthToken","callback","volume","getViewRoute","fetchHome","content","fetchBrowse","fetchCountries","fetchSavedSongs","fetchRecentlyTracks","fetchAlbum","fetchPlaylist","fetchArtist","fetchFollowing","fetchSearchTerm","searchTerm","promises","all","values","artist","album","tracks","getTracksImage","track","items","images","searchFactory","entries","value","message","grid","newReleasesFactory","newReleases","recentlyTracks","user","topArtists","featuredPlaylists","factoryRecentlyTracks","ids","albums","filter","factoryPlaylists","playlists","factoryTopArtists","top_artists","_countries","countries","resolves","labels","index","savedTracksFactory","savedTracks","artists","totalDuration","duration","reduce","total","duration_ms","playlistData","playlist","playlistInfo","playlistCover","image","tableFactory","head","header","total_duration","owner","followers","description","public","table","artistAlbumsFactory","artistAlbums","_albums","album_type","releaseDate","release_date","label","topTracks","relatedArtists","_singles","albumImage","fetchPlaylists","recently","followingFactory","following","getUser","SpotifyLogo","viewBox","fill","d","StyledMenu","Styled","ul","menuItems","icon","aria-hidden","el","Menu","setUri","useState","setPlaylists","useEffect","then","renderList","display_name","data-owner","onClick","StyledNowPlayingInfo","NowPlayingInfo","currentTrack","trackName","albumUri","artistName","artistUri","src","alt","StyledTimer","Timer","count","fixed","TimerContainer","onChangePosition","paused","position","state","setState","timer","cb","start","setTimeout","stop","clearTimeout","undefined","StyledPlayingBar","NowPlaying","barTracking","setBarTracking","prev","disallows","resuming","ev","width","LoadingImg","gif","StyledLoading","Loading","StyledTracklist","Tracklist","hasLimit","limit","copyright","setLimit","filteredItems","setFilteredItems","getArtistTd","hasImage","renderIcon","stopPropagation","setArtist","setAlbum","join","open","placeholder","onChange","toLowerCase","onFilter","StyledHeader","TracklistHeader","isPlaying","setSticky","backgroundPosition","dangerouslySetInnerHTML","__html","getDescription","getSongsLenght","tracksDuration","buttonLabel","StyledPlaylist","Playlist","useContext","SpotifyContext","setTopBar","setData","StyledGrid","Grid","onViewPort","inView","entry","dataset","loaded","renderAlbums","as","data-src","backgroundColor","Fragment","Album","StyledRelatedArtists","RelatedArtists","o","StyledArtist","Artist","StyledUserWidget","UserWidget","product","class","role","StyledtopBar","TopBar","scroll","title","onSearch","search","e","persist","blur","onKeyDown","StyledSearch","Search","StyledGridTemplate","GridTemplate","prevUri","ref","useRef","current","usePrev","Pages","createContext","StyledMain","Main","paramUri","pairs","substring","pos","val","getURLParams","setPlayer","setCurrentTrack","setSearchTerm","setScroll","browser","getPlayingNow","devices","is_active","actions","device","onScroll","scrollTop","addEventListener","script","document","createElement","async","appendChild","appendSDK","setItem","querySelector","home","onSpotifyWebPlaybackSDKReady","addListener","device_id","set_device_id","track_window","current_track","connect","term","Provider","renderView","App","isLogged","setIsLogged","expires_in","setSession","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0bcf976b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rolling-1.2s-184px.f6b49911.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const setSession = ({access_token,token_type,expires_in}) => {\n    const expires_at = new Date().valueOf() + 3600000;\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('expires_at', expires_at);\n    console.log('setsession')\n}\n\nexport const removeSession = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('expires_at');\n    console.log('removesession')\n}\n\nexport const getSession = () => {\n    if(isAuthenticated()) {\n        return {\n            access_token : localStorage.getItem('access_token'),\n            token_type : localStorage.getItem('token_type')\n        }\n    } else {\n        removeSession();\n        return {}\n    }\n}\n\nexport const set_device_id = (device_id) => {\n    console.log('Ready - Device ID - Localstorage', device_id);\n    localStorage.setItem('device_id', device_id);\n}\n\nexport const get_device_id = () => {\n    return localStorage.getItem('device_id')\n}\n\nexport const isAuthenticated = () => {\n    let expires_at = JSON.parse(localStorage.getItem('expires_at'));\n    return expires_at && new Date().valueOf() < expires_at;\n}\n\nexport const orderList = (item,arr) => {\n    const key = arr.indexOf(item)\n    let before = [],newArr = [], found = false;\n    arr.forEach((n,i) => {\n        if(i === key) found = true;\n        if(!found) {\n            before.push(n);\n        } else {\n            if(!newArr.includes(n)) {\n                newArr.push(n);\n            }\n        }\n    });\n\n    before.forEach(i => {\n        newArr.push(i);\n    });\n\n    return newArr;\n}\n\nexport const formatTrackDuration = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n}\n\nexport const delay = async (time) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve,time);\n    })\n}\n\nexport const label = (uri) => {\n    const dict = {\n        home : 'Home',\n        'recently-played' : 'Recently Played'\n    }\n    return dict[uri]\n}\n\nexport const getURLParams = () => {\n    var params= new Object();\n    var query = window.location.search.substring(1);\n    var pairs = query.split('&');\n    for (var i=0; i<pairs.length; i++) {\n        var pos = pairs[i].indexOf('=');\n        if (pos > 0) {\n            var key = pairs[i].substring(0,pos);\n            var val = pairs[i].substring(pos+1);\n            params[key] = val;\n        }\n    }\n    return params;\n}\n","import axios from 'axios'\nimport Cache from 'js-cache'\n\nexport default () => {\n    const cacheable = true,\n        cache = new Cache();\n\n    axios.interceptors.request.use(request => {\n        const blacklist = [\n            'https://api.spotify.com/v1/me/player/currently-playing'\n        ]\n\n        if (request.method === 'get' && cacheable) {\n            let url = request.url;\n\n            const _cached = cache.get(url);\n\n            if (_cached && !blacklist.includes(url)) {\n                _cached.__fromCache = true;\n\n                // console.log(`\"${url}\" served from cache`);\n\n                request.data = _cached;\n\n                // Set the request adapter to send the cached response and prevent the request from actually running\n                request.adapter = () => {\n                    return Promise.resolve({\n                        data: _cached,\n                        status: request.status,\n                        statusText: request.statusText,\n                        headers: request.headers,\n                        config: request,\n                        request: request\n                    });\n                };\n            }\n        }\n\n        return request;\n\n    }, error => Promise.reject(error));\n\n    axios.interceptors.response.use(response => {\n\n        const isCacheable = !response.config.params || (response.config.params && response.config.params.__cache !== false);\n\n        if (cacheable && isCacheable) {\n            let url = response.config.url;\n\n            if (response.config.method === 'get') {\n                cache.set(url, response.data);\n            } else {\n                cache.del(response.config.url);\n                const uri = url.replace(response.config.http.api.base_url, ''),\n                    parentUri = /(.*)\\/([a-z0-9\\-]+)\\/?$/ig.exec(uri);\n\n                if (parentUri)\n                    cache.del(`${response.config.http.api.base_url}${parentUri[1]}`);\n                const urls = Object.keys(cache.debug());\n\n                for (const _url of urls) {\n                    if (_url.match(/^[^?]+/)[0] === response.config.url)\n                        cache.del(_url);\n                }\n            }\n        }\n\n        return response;\n    }, error => Promise.reject(error));\n}\n","import axios from 'axios';\nimport setupCache from './cache';\nimport { getSession, get_device_id } from '../utils';\n\nsetupCache()\n\n/**\n * Scope to provide the right acess to information\n * @type scope\n */\nexport const scope = 'user-read-private user-library-read user-read-playback-state user-read-playback-position user-modify-playback-state user-top-read user-read-recently-played streaming user-read-email user-follow-read'\n\n/**\n * Basic request with the token provided\n * @function get\n * @param request url\n * @return {Promise}\n */\nexport const get = (url) => {\n    return axios.get(url, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user data\n * @function get_user\n * @return {Promise}\n */\nexport const get_user = () => {\n    return axios.get('https://api.spotify.com/v1/me', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a search results\n * @function get_search\n * @return {Promise}\n */\nexport const get_search = ({query,type,size}) => {\n    size = size ? size : 8;\n    return axios.get(`https://api.spotify.com/v1/search?q=${query}&type=${type}&limit=${size}`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request user's saved tracks\n * @function get_saved_tracks\n * @return {Promise}\n */\nexport const get_saved_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/tracks?limit=30', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the featured playlists from a country\n * @function get_featured_playlist\n * @return {Promise}\n */\nexport const get_featured_playlist = (country='CA') => {\n    return axios.get('https://api.spotify.com/v1/browse/featured-playlists?country='+country+'&limit=8', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const get_current_track = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const set_shuffle = (state) => {\n    return axios.put(`https://api.spotify.com/v1/me/player/shuffle?state=${state}&device_id=${get_device_id()}`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the top artists list\n * @function top_artists\n * @return {Promise}\n */\nexport const top_artists = () => {\n    return axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the recently listened music of the user\n * @function get_recently_tracks\n * @return {Promise}\n */\nexport const get_recently_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Retrieves the devices avaiable\n * @function get_devices\n * @return {Promise}\n */\nexport const get_devices = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/devices', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user's playlists\n * @function get_playlists\n * @return {Promise}\n */\nexport const get_playlists = () => {\n    return axios.get('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a album\n * @function get_album\n * @return {Promise}\n */\nexport const get_album = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/albums/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist's albums\n * @function get_artists_albums\n * @return {Promise}\n */\nexport const get_artists_albums = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/albums`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_cover_image\n * @return {Promise}\n */\nexport const get_playlist_cover_image = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/images`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_items\n * @return {Promise}\n */\nexport const get_playlist_items = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/tracks`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_a_playlist\n * @return {Promise}\n */\nexport const get_a_playlist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/playlists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n/**\n * Request for a get_artist_top_tracks\n * @function get_artist_top_tracks\n * @return {Promise}\n */\nexport const get_artist_top_tracks = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/top-tracks?country=BR`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist\n * @function get_artist\n * @return {Promise}\n */\nexport const get_artist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist related artists\n * @function get_related_artists\n * @return {Promise}\n */\nexport const get_related_artists = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1] + '/related-artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a track\n * @function get_track\n * @return {Promise}\n */\nexport const get_track = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/tracks/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for user's following list\n * @function get_following\n * @return {Promise}\n */\nexport const get_following = () => {\n    return axios.get('https://api.spotify.com/v1/me/following?type=artist&limit=20', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for country's new releases\n * @function get_new_releases\n * @return {Promise}\n */\nexport const get_new_releases = (country='BR') => {\n    return axios.get('https://api.spotify.com/v1/browse/new-releases?country='+country+'&limit=10', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n","import React from 'react';\nimport SpotifyLogin from 'react-spotify-login';\nimport styled from 'styled-components';\nimport { clientId, redirectUri } from '../config';\nimport { scope } from '../api/spotify';\n\nconst StyledLogin = styled.div`\n    @font-face {\n        font-family: 'Cooper Black';\n        src: url(${process.env.PUBLIC_URL}/assets/cooper_black.ttf);\n    }\n    position:relative;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    font-family: \"Cooper Black\";\n    background: rgba(28,28,28);\n    color: #fff;\n    overflow: none;\n    margin:0 auto;\n    width:100%;\n    height: 100vh;\n    text-align: center;\n    background-position: center center;\n\n    .title {\n        padding: 20px;\n        font-size: 2em;\n        p {\n            font-size: 22px;\n        }\n    }\n\n    .btn {\n        border: 1px solid #ffffff;\n        font-size: 17px;\n        color: #ffffff;\n    }\n\n    footer {\n        position: absolute;\n        bottom: 10px;\n        right: 15px;\n        font-family: 'helvetica';\n        font-size: 11px;\n        opacity: 0.7;\n        a {\n            color :#fff;\n        }\n    }\n`\n\nclass Login extends React.Component {\n    onSuccess(response) {\n        this.props.onLogin(response);\n    }\n    onFailure(err) {\n        throw new Error(err);\n    }\n    render() {\n        return (\n            <StyledLogin className=\"login\" style={{backgroundImage : `url('${process.env.PUBLIC_URL}/assets/unsplash.jpg')`, backgroundSize : 'cover'}}>\n                <div className=\"login-button container\">\n                    <SpotifyLogin\n                        className=\"btn\"\n                        clientId={clientId}\n                        redirectUri={redirectUri}\n                        onSuccess={(response) => { this.onSuccess(response) }}\n                        onFailure={this.onFailure}\n                        scope={scope}\n                    />\n                </div>\n                <footer>\n                    <span>Photo by <a href=\"https://unsplash.com/@simonweisser?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" target=\"_blank\" rel=\"noopener noreferrer\">Simon Weisser</a> on <a href=\"https://unsplash.com/s/photos/music?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" target=\"_blank\" rel=\"noopener noreferrer\">Unsplash</a></span>\n                </footer>\n            </StyledLogin>\n        )\n    }\n}\n\nexport default Login\n","export const clientId = '38a9d82012ce4dcc81269de4479a74fa';\nexport const clientSecret  = '31cafd8a23394dbfa3bc848199a97bfd';\nexport const redirectUri = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://kenjikatahira.github.io/react-spotify-player/';\n","import { orderList, getSession, get_device_id } from \"../utils\";\n\nconst init = () => {\n    const player = new window.Spotify.Player({\n        playerInstance: new window.Spotify.Player({ name: 'Kenjicas Player' }),\n        name: 'Kenjicas Player',\n        getOAuthToken: callback => callback(getSession().access_token),\n        volume: 0.5\n    });\n\n    player.play = play;\n    player.next = next;\n    player.previous = previous;\n    player.pause = pause;\n    player.resume = resume;\n\n    return player;\n}\n\nconst previous = (lastUri) => {\n    try {\n        fetch('https://api.spotify.com/v1/me/player/previous',{\n            method : 'POST',\n            headers : {\n                'content-type' : 'application/json',\n                'authorization' : `${getSession().token_type} ${getSession().access_token}`\n            }\n        });\n    } catch(err) {\n        play({uri : lastUri})\n    }\n\n}\n\nconst next = () => {\n    fetch('https://api.spotify.com/v1/me/player/next',{\n        method : 'POST',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst pause = () => {\n    fetch('https://api.spotify.com/v1/me/player/pause',{\n        method : 'PUT',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst resume = async () => {\n   fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n       method: 'PUT',\n       headers: {\n           'Content-Type': 'application/json',\n           'Authorization': `Bearer ${getSession().access_token}`\n       }\n   });\n}\n\nconst play = async ({uri,uris}) => {\n    let queue = orderList(uri,(uris || []).map(({uri}) => uri));\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris : queue.length ? queue : [uri] }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\nexport default {\n    init\n}\n","import {\n    formatTrackDuration\n} from '../utils';\n\nimport {\n    get_featured_playlist,\n    get_saved_tracks,\n    get_recently_tracks,\n    get_a_playlist,\n    top_artists,\n    get_album,\n    get_playlist_items,\n    get_artist,\n    get_related_artists,\n    get_artists_albums,\n    get_playlist_cover_image,\n    get_artist_top_tracks,\n    get_playlists,\n    get_user,\n    get_following,\n    get_new_releases,\n    get_search\n} from './spotify';\n\n/**\n * Get the data for the route\n *\n * @function getViewRoute\n * @return {Object} data for the view\n */\nexport const getViewRoute = async ({uri}) => {\n    let content;\n    // add a new route here\n    // window.history.pushState({}, '', '?uri=' + uri );\n\n    if(uri === 'home') {\n        content = await fetchHome();\n    } else if(uri === 'browse') {\n        content = await fetchBrowse({uri});\n    } else if(uri === 'featured-playlists-countries') {\n        content = await fetchCountries();\n    } else if(uri === 'liked-songs') {\n        content = await fetchSavedSongs();\n    } else if(uri === 'recently-played') {\n        content = await fetchRecentlyTracks();\n    } else if(uri.indexOf('spotify:album') >= 0) {\n        content = await fetchAlbum(uri);\n    } else if(uri.indexOf('spotify:playlist') >= 0) {\n        content = await fetchPlaylist(uri);\n    } else if(uri.indexOf('spotify:artist') >= 0) {\n        content = await fetchArtist(uri);\n    } else if(uri === 'artists-list') {\n        content = await fetchFollowing(uri)\n    }\n    return content;\n}\n\n/**\n * Retrieves data based on search term\n *\n * @function fetchSearchTerm\n * @return {Object} grid layout with artist,album and track suggestions\n */\nexport const fetchSearchTerm = async ({searchTerm}) => {\n    try {\n        const promises = [\n            get_search({query: searchTerm,type:'artist',size: 4}),\n            get_search({query: searchTerm,type:'album'}),\n            get_search({query: searchTerm,type:'track',size: 4})\n        ];\n\n        const [\n            {data:artist},\n            {data:album},\n            {data:tracks}\n        ] = await Promise.all(Object.values(promises));\n\n        const getTracksImage = (track) => {\n            track.items.forEach(item => {\n                item.images = item.album.images;\n            })\n        }\n\n        Object.values(tracks).forEach(getTracksImage)\n\n        const searchFactory = (response) => {\n            let data;\n\n            Object.entries(response).forEach(([key,value]) => {\n                data = {\n                    message : key,\n                    items : value.items\n                }\n            });\n\n            return data;\n        }\n\n\n        return {\n            type : 'search',\n            grid : {\n                tracks : searchFactory(tracks),\n                artist : searchFactory(artist),\n                album : searchFactory(album),\n            }\n        }\n\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n/**\n * Retrieves browse list\n *\n * @function fetchBrowse\n * @return {Void}\n */\nexport const fetchBrowse = async ({uri,country}) => {\n    try {\n        const promises = [get_new_releases(country)];\n        let [{data}] = await Promise.all(Object.values(promises));\n\n        data = Object.values(data)[0];\n\n        const newReleasesFactory = (response) => {\n            return {\n                type : uri,\n                message : 'New Releases',\n                items : response.items\n            }\n        }\n        return {\n            type : 'browse',\n            grid : {\n                newReleases : newReleasesFactory(data)\n            }\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n/**\n * Retrieves home data\n *\n * @function fetchHome\n * @return {Void}\n */\nexport const fetchHome = async () => {\n    try {\n        const promises = [get_recently_tracks(),get_user(),top_artists()];\n        const [ { data : recentlyTracks }, { data : user }, { data : topArtists } ] = await Promise.all(Object.values(promises));\n        const { data : featuredPlaylists } = await get_featured_playlist(user.country);\n        /**\n         * Model array of recently tracks to albums for the homepage view\n         *\n         * @function factoryRecentlyTracks\n         * @return {Void}\n         */\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (response) => {\n            return {\n                message : response.message,\n                items : response.playlists.items,\n                type : 'playlists'\n            }\n        }\n        /**\n         * Model user's top artists response for the homepage view\n         *\n         * @function factoryTopArtists\n         * @return {Void}\n         */\n        const factoryTopArtists = (response) => {\n            return {\n                message : 'Top Artists',\n                items : response.items,\n                type : 'top-artists'\n            };\n        }\n\n        return {\n            type : 'home',\n            grid : {\n                featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                top_artists : factoryTopArtists(topArtists),\n                recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n            }\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n/**\n * Retrieves countries playlists data\n *\n * @function fetchCountries\n * @return {Void}\n */\nexport const fetchCountries = async () => {\n    try {\n        let _countries = ['NZ','CH','CA','US','IT','FR','JP','RU','IS'];\n        let countries = ['NZ','CH','CA','US','IT','FR','JP','RU','IS'];\n\n        countries = countries.map(async (country) => await get_featured_playlist(country));\n\n        const resolves = await Promise.all(countries)\n\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (resolves) => {\n            const labels = {\n                'BR' : 'Brasil',\n                'CH' : 'Chile',\n                'CA' : 'Canada',\n                'US' : 'United States',\n                'RU' : 'Russia',\n                'IT' : 'Italy',\n                'JP' : 'Japan',\n                'NZ' : 'New Zealand'\n            }\n            return resolves.map(({data},index) => {\n                return {\n                    message :`${data.message} ${labels[_countries[index]] ? ' - ' + labels[_countries[index]] : ''}`,\n                    items : data.playlists.items,\n                    type : 'playlists'\n                }\n            })\n        }\n\n        return {\n            type : 'home',\n            grid : factoryPlaylists(resolves)\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n\n/**\n * Retrieves user's saved tracks\n *\n * @function fetchSavedSongs\n * @return {Void}\n */\nexport const fetchSavedSongs = async() => {\n    try {\n        const { data } = await get_saved_tracks();\n        /**\n         * Model array of recently tracks to albums for the saved tracks\n         *\n         * @function savedTracksFactory\n         * @return {Void}\n         */\n        const savedTracksFactory = (response) => {\n            let tracks = response.items.map(item => item.track);\n\n            tracks = tracks.map(item => {\n                return {\n                    images : item.album.images,\n                    name : item.name,\n                    uri : item.uri,\n                    album : {\n                        uri : item.album.uri\n                    },\n                    artists : item.artists\n                };\n            });\n\n            return {\n                savedTracks : {\n                    message : 'Saved Tracks',\n                    type : 'saved-tracks',\n                    items : tracks\n                }\n            }\n        }\n\n        return {\n            grid : savedTracksFactory(data)\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n\n}\n\n/**\n * Calculate a album or tracklist duration\n *\n * @function totalDuration\n * @return {String} Formated duration\n */\nconst totalDuration = (tracks) => {\n    if(!tracks) return false;\n    let initialValue = 0;\n    const duration = tracks.reduce((total,{duration_ms}) => total + duration_ms,initialValue);\n\n    return formatTrackDuration(Math.floor(duration / 60));\n}\n\n/**\n * Retrieves a playlist\n *\n * @function fetchPlaylist\n * @return {Object} playlist's data\n */\nexport const fetchPlaylist = async (uri) => {\n    try {\n        let playlistData = {};\n        const promises = {\n            playlist : get_playlist_items({uri}),\n            playlistInfo : get_a_playlist({uri}),\n            playlistCover : get_playlist_cover_image({uri}),\n        }\n        const [ playlist, playlistInfo, playlistCover ] = await Promise.all(Object.values(promises));\n\n        const [image] = playlistCover.data;\n\n        playlistData.tracks = playlist.data.items.map((i) => i.track).filter((i) => i);\n\n        const tableFactory = (data) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    album : i.album,\n                    artists : i.artists,\n                    uri : i.uri,\n                }\n            }\n            return {\n                head :  ['name','artist','album','duration'],\n                body  : data.tracks.map(trackModel)\n            }\n        }\n\n        return {\n            type : 'playlist',\n            header : {\n                type : 'playlist',\n                name : playlistInfo.data.name,\n                image: image,\n                tracks : tableFactory(playlistData).body,\n                total_duration : totalDuration(playlistData.tracks),\n                owner : playlistInfo.data.owner,\n                followers : playlistInfo.data.followers.total,\n                description : playlistInfo.data.description,\n                public : playlistInfo.data.public\n            },\n            table : tableFactory(playlistData)\n        }\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves a album\n *\n * @function fetchAlbum\n * @return {Object} album's data\n */\nconst fetchAlbum = async (uri) => {\n    try {\n        const {data: album} = await get_album({uri});\n        const { data : albums } = await get_artists_albums({uri : album.artists[0].uri});\n\n        const [image] = album.images;\n\n        const tableFactory = (album) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    uri : i.uri,\n                    artists : i.artists\n                }\n            }\n            return {\n                head :  ['name','artist','duration'],\n                body  : album.tracks.items.map(trackModel)\n            }\n        }\n\n        const artistAlbumsFactory = (albums) => {\n            const ids = [];\n            const artistAlbums = {}\n\n            const _albums = {\n                message : 'More by ' + album.artists[0].name,\n                type : 'artist',\n                items : albums.items.filter((i , index) => {\n                    // Remove repeated albums and itself from the list . Limited by four albums only\n                    if(!ids.includes(i.name) && i.album_type === 'album' && i.id !== album.id && index <= 4) {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            if(_albums.items.length) {\n                artistAlbums._albums = _albums;\n            }\n\n            return artistAlbums;\n        }\n\n        return {\n            type: 'album',\n            releaseDate : album.release_date.replace(/(\\d{4})-\\d{2}-\\d{2}/g,'$1'),\n            label : album.label,\n            header : {\n                type : 'album',\n                artists : album.artists,\n                name : album.name,\n                image : image,\n                tracks : tableFactory(album).body,\n                total_duration : totalDuration(album.tracks.items),\n                releaseDate : album.release_date.replace(/(\\d{4})-\\d{2}-\\d{2}/g,'$1')\n            },\n            table : tableFactory(album),\n            grid : artistAlbumsFactory(albums)\n        };\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves a artist\n *\n * @function fetchArtist\n * @return {Object} artist's data\n */\nconst fetchArtist = async (uri) => {\n    try {\n        let artist = {};\n        const { data } = await get_artist({uri});\n        const { data : topTracks } = await get_artist_top_tracks({uri});\n        const { data : albums } = await get_artists_albums({uri});\n        const { data : relatedArtists } = await get_related_artists({uri});\n\n        const [image] = data.images;\n\n        if(!artist.tracks) {\n            artist.tracks = topTracks.tracks;\n        }\n\n        const artistAlbumsFactory = (albums) => {\n            const ids = [];\n            const artistAlbums = {}\n\n            const _albums = {\n                message : 'Albums',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'album') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            const _singles = {\n                message : 'Singles',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'single') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            if(_albums.items.length) {\n                artistAlbums._albums = _albums;\n            }\n            if(_singles.items.length) {\n                artistAlbums._singles = _singles;\n            }\n\n            return artistAlbums;\n        }\n\n        const tableFactory = (artist) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    uri : i.uri,\n                    albumImage : i.album.images[2].url\n                }\n            }\n            return {\n                head :  ['Popular'],\n                body  : artist.tracks.map(trackModel)\n            }\n        }\n\n        return {\n            type : 'artist',\n            header : {\n                type : 'artist',\n                name : data.name,\n                image : image,\n                tracks : tableFactory(artist).body\n            },\n            table : tableFactory(artist),\n            grid : artistAlbumsFactory(albums),\n            relatedArtists : relatedArtists\n        };\n\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves user's playlists\n *\n * @function fetchPlaylists\n * @return {Object} Playlists\n */\nexport const fetchPlaylists = async () => {\n    try {\n        const { data } = await get_playlists();\n        return data;\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Model array of recently tracks to albums for the homepage view\n *\n * @function fetchRecentlyTracks\n * @return {Void}\n */\nexport const fetchRecentlyTracks = async () => {\n    try {\n        const { data } = await get_recently_tracks();\n\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n\n        return {\n            grid : {\n                recently : factoryRecentlyTracks(data)\n            }\n        };\n\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n\n/**\n * Retrieves user's followings\n *\n * @function fetchFollowing\n * @return {Object} User info\n */\nexport const fetchFollowing = async (uri) => {\n    try {\n        const { data } = await get_following(uri);\n\n        const followingFactory = (response) => {\n            const data = Object.values(response)[0];\n            return {\n                following : {\n                    type : uri,\n                    message : 'Your Artists',\n                    items : data.items\n                }\n            }\n        }\n\n        return {\n            grid : followingFactory(data)\n        }\n    } catch(e) {\n        console.error(e)\n    }\n}\n\n/**\n * Retrieves user's info\n *\n * @function getUser\n * @return {Object} User info\n */\nexport const getUser = async () => {\n    try {\n        const { data } = await get_user();\n        return data;\n    } catch(e) {\n        console.error(e)\n    }\n}\n","import React from 'react';\n\nconst SpotifyLogo = (props) => (\n    <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo\"><path fill=\"currentColor\" d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"></path></svg>\n)\n\nexport default SpotifyLogo;\n","import React,{ useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nimport { fetchPlaylists } from './../api';\n\nimport SpotifyLogo from './../assets/spotify';\n\nconst StyledMenu = Styled.ul`\n    list-style: none;\n    padding: 15px;\n    white-space: nowrap;\n    color : #B3B3B3;\n    margin-bottom: 0;\n\n    .logo-wrapper {\n        display:flex;\n        flex-direction: row;\n        justify-content: space-between;\n\n        .spotify-logo {\n            width:120px;\n            padding-right: 0;\n            padding-left:5px;\n            display:inline-block;\n            color:#fff;\n            align-self: center;\n        }\n\n        .made {\n            padding: 10px 0;\n            margin-left: 5px;\n            align-self: center;\n            font-size: 12px;\n            text-align: center;\n        }\n    }\n\n    .fixed-pages {\n        position: sticky;\n\n        li {\n            padding: 0;\n            margin-bottom: 15px;\n            font-size: 13px;\n            font-weight: 700;\n            svg {\n                margin-right: 10px;\n                font-weight: 500;\n            }\n        }\n    }\n\n    hr   {\n        display: block;\n        unicode-bidi: isolate;\n        margin-block-start: 0.9em;\n        margin-block-end: 0.9em;\n        margin-inline-start: auto;\n        margin-inline-end: auto;\n        background: #282828;\n    }\n\n    li {\n        position:relative;\n        padding: 0;\n        cursor: pointer;\n        font-size: 11px;\n        font-weight: 800;\n        margin-bottom: 8px;\n\n        &.lead {\n            margin-bottom: 0;\n            font-size: 14px;\n            font-weight: 100;\n            text-transform: uppercase;\n            margin-bottom: 10px;\n        }\n\n        &.active:before {\n            content : \"\";\n            border-left: 3px solid #1db954;\n            position: absolute;\n            height: 17px;\n            left: -14px;\n            top: 0;\n        }\n\n        &:hover:after {\n            content: attr(data-owner);\n            position: relative;\n            height:10px;\n            left: 0px;\n            color: #ccc;\n            white-space: nowrap;\n        }\n    }\n`\n\n// Menu de itens fixos\nlet  menuItems = [\n    {\n        name: \"Home\",\n        uri: \"home\",\n        icon: <i key=\"home\" className=\"fas fa-home\">home</i>,\n    },\n    {\n        name: \"Browse\",\n        uri: \"browse\",\n        icon: <i key=\"browse\" className=\"fa fa-folder-open\" aria-hidden=\"true\"></i>,\n    },\n    {\n        el: <li key=\"your-library\" className=\"lead\"> Your Library </li>\n    },\n    {\n        name: \"Recently Played\",\n        uri: \"recently-played\"\n    },\n    {\n        name: \"Countries\",\n        uri: \"featured-playlists-countries\"\n    },\n    {\n        name: \"Liked Songs\",\n        uri: \"liked-songs\"\n    },\n    {\n        name: \"Artists\",\n        uri: \"artists-list\"\n    },\n    {\n        el: <hr key=\"sep\" className=\"separator\"></hr>\n    },\n    {\n        el: <li key=\"lead-playlists\" className=\"lead\"> Playlists </li>\n    }\n];\n\nconst Menu = ({uri, setUri}) => {\n    const [playlists,setPlaylists] = useState(null)\n\n    useEffect(() => {\n        if(!playlists) {\n            fetchPlaylists()\n                .then(setPlaylists);\n        }\n    },[playlists]);\n\n    const renderList = (item,index) => {\n        const display_name = ((item || {}).owner || {}).display_name\n        if(item.el) {\n            return item.el;\n        } else {\n            return (\n                <li\n                    key={item.uri+'#'+index}\n                    className={uri === item.uri ? \"active\" : \"\"}\n                    data-owner={display_name ? ` * by ${display_name}`: \"\" }\n                    id={item.uri}\n                    onClick={() => setUri(item.uri)}\n                >\n                    {item.icon ? item.icon : ''} {item.name}\n                </li>\n            );\n        }\n    }\n    if(((playlists || {}).items || []).length) {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <SpotifyLogo />\n                    <span className=\"made\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/sleepy-monk/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n                <div className=\"playlists-wrapper\">\n                    {playlists.items.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    } else {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <SpotifyLogo />\n                    <span className=\"made\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/sleepy-monk/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    }\n}\n\nMenu.propTypes = {\n    uri : PropTypes.string,\n    setUri : PropTypes.func\n}\n\nexport default Menu;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledNowPlayingInfo = Styled.div`\n    display: grid;\n    grid-template-columns: 18%;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main\";\n\n    text-align: center;\n    font-size: 11px;\n    height:8vh;\n\n    .image {\n        align-self: center;\n        img {\n            height:7vh;\n            padding: 6px;\n        }\n    }\n\n    .info {\n        align-self: center;\n        justify-self: start;\n        text-align: left;\n        .playing-artist {\n            color: #999;\n        }\n        .track {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            width:100%;\n        }\n        .playing-artist,.track {\n            cursor: pointer;\n            margin-bottom: 2px;\n            &:last-child {\n                margin-bottom: 0;\n            }\n        }\n    }\n`\n\nconst NowPlayingInfo = ({currentTrack,setUri}) => {\n    const image = ((((currentTrack || {}).album || {}).images || [])[0] || {}).url;\n    const { name: trackName } = (currentTrack || {});\n    const { uri: albumUri } = ((currentTrack || {}).album || {});\n    const { name: artistName, uri: artistUri } = (((currentTrack || {}).artists || [])[0] || {});\n    return (\n        <StyledNowPlayingInfo className=\"now-playing-info\">\n            <div className=\"image\">\n                <img src={image} alt={image} />\n            </div>\n            <div className=\"info\">\n                <div className=\"track\" onClick={() => setUri(albumUri)}><b>{trackName}</b></div>\n                <div className=\"playing-artist\" onClick={() => setUri(artistUri)}>{artistName}</div>\n            </div>\n        </StyledNowPlayingInfo>\n    )\n}\n\nNowPlayingInfo.propTypes = {\n    currentTrack : PropTypes.object\n}\n\nexport default NowPlayingInfo;\n\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {formatTrackDuration} from './../../utils';\n\nconst StyledTimer = Styled.div`\n    text-align: center;\n    font-size: 13px;\n`\n\nconst Timer = ({count,fixed}) => {\n    return (\n        <StyledTimer className=\"timer\">\n            {formatTrackDuration(fixed ? fixed : count)}\n        </StyledTimer>\n    )\n}\n\nTimer.propTypes = {\n    count : PropTypes.number,\n    fixed : PropTypes.number\n}\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from '.';\n\nconst TimerContainer = ({currentTrack,fixed,onChangePosition}) => {\n    const {\n        paused,\n        position\n    } = currentTrack;\n\n    let [state, setState] = useState({\n        count : position || 0,\n        currentTrack\n    });\n\n    // se trocar a musica, zera a contagem\n    if((currentTrack || {}).id !== (state.currentTrack || {}).id) {\n        setState({\n            count: 0,\n            currentTrack : currentTrack\n        });\n    }\n\n    const timer = (cb) => {\n        const _timer = {\n            start : () => setTimeout(() => {\n                setState({\n                    count : state.count + 500,\n                    currentTrack\n                });\n                onChangePosition(state.count);\n            }, 500),\n            stop : () => {\n                if((this || {}).start) {\n                    clearTimeout(this.start);\n                }\n            }\n        }\n        _timer[cb]();\n    }\n\n    useEffect(() => {\n        if(!paused && position !== undefined)  {\n            timer('start');\n        } else if(paused){\n            timer('stop');\n        }\n    });\n\n    return (\n        <Timer count={state.count} fixed={fixed} />\n    )\n}\n\nTimerContainer.propTypes = {\n    currentTrack : PropTypes.object,\n    fixed : PropTypes.string,\n    onChangePosition : PropTypes.func\n}\n\nexport default TimerContainer;\n\n","import React, { useState } from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { set_shuffle } from './../api/spotify';\n\nimport NowPlayingInfo from './nowPlayingInfo';\nimport TimerContainer from './timer/timerContainer';\nimport Timer from './timer';\n\nconst StyledPlayingBar = Styled.div`\n    background-color: #282828;\n    border-top: 1px solid #000;\n    display: grid;\n    grid-template-columns: 20%;\n    grid-template-rows: auto;\n    grid-template-areas:\n        \"sidebar sidebar main main . rightbar\"\n        \"footer footer footer footer footer footer\";\n\n    .playing-wrapper {\n        grid-area: sidebar;\n    }\n\n    .controls-buttons {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-self: center;\n        width: 150px;\n        margin-bottom: 8px;\n\n        &.right {\n            grid-area: rightbar;\n            width: 100%;\n            display:flex;\n            justify-content: flex-end;\n            align-items: center;\n            padding-right:20px;\n            margin-bottom: 0;\n        }\n\n        .control-button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: #b3b3b3;\n            position: relative;\n            width: 32px;\n            min-width: 32px;\n            height: 32px;\n\n            &.play,&.pause {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                border: none;\n                border-radius: 32px;\n                svg {\n                    position: relative;\n                }\n                &:hover {\n                    background: none;\n                }\n            }\n        }\n    }\n\n    .inner-now-playing {\n        grid-area: main;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        .playback-bar {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            width: 80%;\n            max-width: 722px;\n            align-self: center;\n            align-items: center;\n                position: relative;\n\n            .timer-label {\n                position:absolute;\n                &:first-child {\n                    left: -30px;\n                }\n                &:last-child {\n                    right: -30px;\n                }\n            }\n\n            .playback-progress-bar {\n                width: 100%;\n                margin: 0 10px;\n                background-color:#1a1a1a;\n\n                .progress-bar-inner {\n                    background-color: #b3b3b3;\n                    border-radius: 2px;\n                    height: 4px;\n                    width: 0;\n                }\n            }\n        }\n    }\n`\n\nconst NowPlaying = ({player, currentTrack, setUri}) => {\n\n    const [barTracking,setBarTracking] = useState(0);\n\n    const togglePlayButton =() => {\n        if(((currentTrack || {}).disallows || {}).resuming) {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button pause\"\n                    onClick={player.pause}\n                >\n                    <FontAwesomeIcon icon=\"pause\" />\n                </button>\n            )\n        } else {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button play\"\n                    onClick={() => {\n                        player.resume()\n                    }}\n                >\n                    <FontAwesomeIcon icon=\"play\" />\n                </button>\n            )\n        }\n    }\n\n    const onChangePosition = (position) => setBarTracking(Math.floor(100*position/(currentTrack || {}).duration_ms))\n\n    const setPosition = (ev) => {\n        // console.log(ev.pageX)\n        // console.log(ev.target.offsetLeft)\n        // console.log(ev.target.offsetTop)\n    }\n\n    const shuffle = () => {\n        set_shuffle(true)\n    }\n\n    if(Object.keys((player || {})).length === 0 && (currentTrack || {})) return (<div className=\"now-playing\"></div>)\n    return(\n        <StyledPlayingBar className=\"now-playing\">\n            <div className=\"playing-wrapper\">\n                <NowPlayingInfo currentTrack={currentTrack} setUri={setUri} />\n            </div>\n            <div className=\"inner-now-playing\">\n                <div className=\"controls-buttons\">\n                    <button className=\"btn control-button\" onClick={player.prev}>\n                        <FontAwesomeIcon icon=\"backward\" />\n                    </button>\n                    {togglePlayButton()}\n                    <button className=\"btn control-button\" onClick={player.next}>\n                        <FontAwesomeIcon icon=\"forward\" />\n                    </button>\n                </div>\n                <div className=\"playback-bar\" onClick={setPosition}>\n                    <span className=\"timer-label\"><TimerContainer currentTrack={currentTrack || {}} onChangePosition={onChangePosition} /></span>\n                    <div className=\"playback-progress-bar\">\n                        <div className=\"progress-bar-inner\" style={{width: barTracking + '%'}}></div>\n                    </div>\n                    <span className=\"timer-label\">\n                    {\n                        (currentTrack || {}).duration_ms && <Timer fixed={(currentTrack || {}).duration_ms} />\n                    }\n                    </span>\n                </div>\n            </div>\n            <div className=\"controls-buttons right\">\n                {/* <button className=\"btn control-button\" onClick={player.prev}>\n                    <FontAwesomeIcon icon=\"microphone\" />\n                </button> */}\n                {/* <button className=\"btn control-button\" onClick={() => shuffle()}>\n                    <FontAwesomeIcon icon=\"random\" />\n                </button> */}\n                {/* <button className=\"btn control-button\" onClick={player.next}>\n                    <FontAwesomeIcon icon=\"redo-alt\" />\n                </button> */}\n            </div>\n        </StyledPlayingBar>\n    )\n}\n\nNowPlaying.propTypes = {\n    player : PropTypes.object,\n    currentTrack : PropTypes.object\n}\n\n\nexport default NowPlaying;\n\n","import React from 'react';\nimport gif from './Rolling-1.2s-184px.gif';\n\nconst LoadingImg = () => (\n    <img src={gif} alt=\"loading\" />\n)\n\nexport default LoadingImg;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport LoadingImg from './../assets/loadingImg';\n\nconst StyledLoading = Styled.div`\n    position: relative;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    font-size: 28px;\n    height: 92vh;\n    img {\n        width: 90px;\n    }\n`\n\nconst Loading = () => {\n    return (\n        <StyledLoading>\n            <div className=\"loading\">\n                <LoadingImg />\n            </div>\n        </StyledLoading>\n    )\n}\n\nexport default Loading;\n","import React,{ useState } from \"react\";\nimport Styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PropTypes from 'prop-types';\n\nconst StyledTracklist = Styled.div`\n    width: 90%;\n    margin: 0 auto;\n    margin-bottom: 20px;\n    .filter {\n        padding: 3px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n            background: inherit;\n            border-style: none;\n            color: #f5f5f5;\n        }\n    }\n    .toggleShow {\n        font-size: 13px;\n        padding: 15px;\n        padding-left: 0;\n        background: none;\n        border: none;\n        color: #fff;\n    }\n    .copyright {\n        margin: 15px 0;\n        color: #aaa;\n    }\n    table {\n        list-style: none;\n        margin: 0;\n        padding: 10px;\n        color: #f5f5f5;\n\n        th {\n            color: #d1d1d1;\n            font-size: 12px;\n            text-transform: uppercase;\n            border-top: none;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            &:fist-child {\n                width: 30px;\n            }\n        }\n\n        tr {\n            &:not(.header):hover td {\n                background: rgba(255, 255, 255, 0.1);\n\n                .top-number {\n                    visibility: hidden;\n                }\n            }\n        }\n\n        td {\n            font-size: 13px;\n            vertical-align: middle;\n\n            &:nth-child(1) {\n                width: 20px;\n            }\n            &:last-child {\n                width: 80px;\n                text-align: center;\n            }\n        }\n\n        tr,\n        td {\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            cursor: pointer;\n            padding: 8px;\n            white-space: nowrap;\n            max-width: 220px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n\n            &:hover {\n                .action {\n                    visibility: visible;\n                }\n            }\n\n            &.has-image {\n                height:40px;\n                padding: 1px 0;\n\n                .list-image {\n                    width: 40px;\n                    margin-right: 15px;\n                }\n\n                .top-number {\n                    visibility: visible;\n                }\n\n                span {\n                    vertical-align: middle;\n                    svg {\n                        position: relative;\n                        top: 2px;\n                        right: 10px;\n                    }\n                }\n            }\n\n            .top-number {\n                visibility: hidden;\n            }\n\n            .action {\n                border: 1px solid #fff;\n                padding: 5px;\n                width: 20px;\n                height: 20px;\n                border-radius: 100%;\n                visibility: hidden;\n\n                &.selected {\n                    visibility: visible;\n                }\n            }\n\n            span.link:hover {\n                border-bottom: 1px solid #fff;\n            }\n        }\n    }\n`\n\nconst Tracklist = ({table,player,limit : hasLimit,setUri, copyright,currentTrack}) => {\n    const [limit,setLimit] = useState(hasLimit || null);\n    const [filteredItems,setFilteredItems] = useState([]);\n\n    const setArtist = ({ artist, total, index }) => {\n        const { id, uri, name } = artist;\n        return (\n            <span\n                key={id+'#'+index}\n                onClick={(ev) => {\n                    ev.stopPropagation();\n                    setUri(uri);\n                }}\n            >\n                {total > 1 && index !== total - 1 ? `${name}, ` : name}\n            </span>\n        );\n    }\n\n    const setAlbum = (ev,item) => {\n        ev.stopPropagation();\n        setUri(item.album.uri);\n    }\n\n    const renderIcon = (uri='',hasImage) => {\n        if(uri === (currentTrack || {}).uri) {\n            return <FontAwesomeIcon className={hasImage ? 'action' : 'action selected'} icon=\"pause\" />\n        } else{\n            return <FontAwesomeIcon className=\"action\" icon=\"play\" />\n        }\n    }\n\n    const getArtistTd = ({albumImage,name},index) => {\n        if(!albumImage) return;\n        return (\n            <>\n                <span>\n                    <img className=\"list-image\" src={albumImage} alt={name} />\n                </span>\n                <span className=\"top-number\">{index+1}</span>\n            </>\n        )\n    }\n\n    const renderList = (item,index) => {\n        return (\n            <tr\n                key={item.id+'#'+index}\n                onClick={() => {\n                    player.play({\n                        uri: item.uri,\n                        uris: table.body\n                    });\n                }}\n            >\n                <td className={item.albumImage ? 'has-image' : ''}>\n                    <span>{getArtistTd(item,index)}</span>\n                    <span>\n                        {renderIcon(item.uri,item.albumImage)}\n                    </span>\n                </td>\n                {\n                    item.name &&\n                    <td>\n                        <span>{item.name}</span>\n                    </td>\n                }\n                {\n                    item.artists &&\n                    <td>\n                        <span className=\"link\">{item.artists && Object.values(item.artists).map((artist, index) => setArtist({ artist,total: (item.artists || []).length, index }))}</span>\n                    </td>\n                }\n                {\n                    item.album &&\n                    <td>\n                        <span className=\"link\" onClick={(ev) => setAlbum(ev,item)}> {item.album.name} </span>\n                    </td>\n                }\n                {\n                item.duration_ms &&\n                <td>\n                    <span> {item.duration_ms} </span>\n                </td>\n                }\n                <td>\n                    <FontAwesomeIcon icon=\"guitar\" onClick={(ev) => {\n                        ev.stopPropagation()\n                        let query = '';\n                        //open new tab\n                        if(item.artists) {\n                            query = Object.values(item.artists).map(i => i.name + ' ').join('')  + ' ' + item.name;\n                        } else {\n                            query = item.name;\n                        }\n\n                        window.open('https://www.ultimate-guitar.com/search.php?search_type=title&value=' + query , '_blank' )\n                    }} />\n                </td>\n            </tr>\n        );\n    }\n\n    const onFilter = (ev) => {\n        setFilteredItems(table.body.filter(({name}) => name.toLowerCase().replace('ã','a').indexOf(ev.target.value.toLowerCase()) > -1 ))\n    }\n\n    const showMore = () =>{\n        setLimit(+limit === 5 ? 10 : 5);\n    }\n\n    return (\n        <StyledTracklist className=\"tracklist\">\n            <div className=\"filter\">\n                <input type=\"text\" placeholder=\"Filter\" onChange={(ev) => { onFilter(ev) }} />\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr className=\"header\">\n                        <th scope=\"col\"></th>\n                        {table.head.map(i => (<th key={i}>{i}</th>))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {((filteredItems || []).length > 0 ? filteredItems : table.body).map((i,index) => {\n                        if((limit)) {\n                            return (index < +limit) && renderList(i,index);\n                        } else {\n                            return renderList(i,index);\n                        }\n                    })}\n                </tbody>\n            </table>\n            { limit && <button className=\"toggleShow\" onClick={showMore}>show {+limit === 5 ? 'more' : 'less' }</button>}\n            { copyright && <div className=\"copyright\">{copyright}</div>}\n        </StyledTracklist>\n    );\n}\n\nTracklist.propTypes = {\n    table : PropTypes.object,\n    limit : PropTypes.string,\n    setUri : PropTypes.func,\n    copyright : PropTypes.string,\n    currentTrack : PropTypes.object\n}\n\nexport default Tracklist;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledHeader = Styled.div`\n    display: flex;\n    width: 90%;\n    margin: 0 auto;\n    margin-bottom: 15px;\n    align-items: center;\n    .artwork-wrapper {\n        overflow: auto;\n        width: 260px;\n        height: 260px;\n        .artwork {\n            width: 100%;\n            padding-bottom: 100%;\n        }\n    }\n\n    .info {\n        align-self: flex-end;\n        padding: 0 25px;\n        p { margin: 0; }\n        .info-type {\n            position: relative;\n            top: 5px;\n            text-transform: uppercase;\n            font-weight: 500;\n            font-size: 15px;\n        }\n        .info-name {\n            font-size: 48px;\n            line-height: 60px;\n            padding: 0.1em 0px;\n            font-weight: 600;\n            margin-bottom: 0;\n        }\n        .info-description {\n            max-width: 500px;\n        }\n        .info-details {\n            padding: 1px 0px 13px;\n            color:#aaa;\n            font-size: 12px;\n        }\n        .info-tracks {\n            margin-right: 4px;\n        }\n        .info-owner {\n            font-size: 14px;\n            strong { color:#fff; }\n            &:after {\n                content: \"•\";\n                margin: 0px 4px;\n            }\n        }\n        .info-release-date {\n            &:after {\n                content: \"•\";\n                margin: 0px 4px;\n            }\n        }\n        .info-artist {\n            display: block;\n            strong { color:#fff; }\n            &:after {\n                padding: 0 6px;\n            }\n        }\n    }\n\n    .info-interactive {\n        .play,.pause {\n            cursor: pointer;\n            background: #1DB954;\n            border-radius: 15px;\n            font-size: 11px;\n            letter-spacing: 2px;\n            font-weight: bold;\n            width: 106px;\n            padding: 4px;\n            text-align: center;\n        }\n    }\n`\n\nconst TracklistHeader = ({player,header,isPlaying, setSticky}) => {\n    const getDescription = (description) => {\n        return (\n            <>\n                <div dangerouslySetInnerHTML={{__html: description }} />\n            </>\n        )\n    }\n\n    const tracksDuration = (total_duration) => {\n        return (\n            <span className=\"info-duration\">\n                {`- ${total_duration} hrs`}\n            </span>\n        )\n    }\n\n    const getSongsLenght = (tracks) => {\n        return (\n            <span className=\"info-tracks\">\n                {`${(tracks || []).length} songs`}\n            </span>\n        )\n    }\n\n    const releaseDate = (releaseDate) => <span className=\"info-release-date\">{releaseDate}</span>\n\n    const {\n        tracks,\n        image,\n        name,\n        description,\n        owner,\n        total_duration,\n        type\n    } = header;\n\n    const buttonLabel = (isPlaying) => {\n        if(!isPlaying) {\n            return (\n                <div className=\"play\" onClick={ () => { player.play({uris : (tracks || []) })}}> PLAY </div>\n            )\n        } else {\n            return (\n                <div className=\"pause\" onClick={ () => { player.pause({uris : (tracks || []) })}}> PAUSE </div>\n            )\n        }\n    }\n\n    return (\n        <StyledHeader className=\"tracklist-header\">\n            {(image && image.url &&\n                <div className=\"artwork-wrapper\">\n                    <div className=\"artwork\" style={\n                        { backgroundImage: `url(${image.url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }></div>\n                </div>\n            )}\n            <div className=\"col info d-flex flex-column\">\n                <strong className=\"info-type\">{type}</strong>\n                <h3 className=\"info-name\">{name}</h3>\n                    {getDescription(description)}\n                <div className=\"info-details\">\n                    {\n                        (owner || {}).display_name && (\n                            <span className=\"info-owner\">\n                                Created by <strong>{(owner || {}).display_name}</strong>\n                            </span>\n                        )\n                    }\n                    {\n                        (type === 'album' && header.artists.length) && (\n                            <span className=\"info-artist\">\n                                By <strong>{(header.artists || [])[0].name}</strong>\n                            </span>\n                        )\n                    }\n                    { type === 'album' && releaseDate((header || {}).releaseDate)}\n                    { type !== 'artist' && getSongsLenght(tracks) }\n                    { type !== 'artist' && total_duration && tracksDuration(total_duration) }\n                </div>\n                <div className=\"info-interactive\">\n                    {buttonLabel(isPlaying)}\n                </div>\n            </div>\n        </StyledHeader>\n    )\n}\n\nTracklistHeader.propTypes = {\n    player : PropTypes.object,\n    header : PropTypes.object\n}\n\nexport default TracklistHeader\n","import React, {useState,useEffect,useContext} from \"react\";\nimport Styled from 'styled-components';\n\nimport { getViewRoute } from './../api';\nimport { SpotifyContext } from \"../components/main\";\n\nimport Loading from \"./../components/loading\";\nimport Tracklist from \"./../components/tracklist\";\nimport TracklistHeader from './../components/tracklistHeader';\n\nconst StyledPlaylist = Styled.div`\n`\n\nconst Playlist = () => {\n    const {uri,setUri,player,setTopBar,currentTrack,setSticky} = useContext(SpotifyContext);\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri,setTopBar]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const { table, header } = data;\n        return (\n            <StyledPlaylist className=\"playlist\">\n                <TracklistHeader\n                    player={player}\n                    header={header}\n                    isPlaying={((currentTrack || {}).disallows || {}).resuming}\n                    setSticky={setSticky}\n                />\n                <Tracklist\n                    table={table}\n                    setUri={setUri}\n                    player={player}\n                    currentTrack={currentTrack}\n                />\n            </StyledPlaylist>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nexport default Playlist;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\nimport { InView } from 'react-intersection-observer';\n\nconst StyledGrid = Styled.div`\n    width:90%;\n    margin:0 auto;\n\n    h2 {\n        margin: 26px 15px;\n        border-bottom: 1px solid #ffffff1a;\n        padding-bottom: 17px;\n    }\n\n    .albums-row {\n        display: flex;\n        flex-direction: row;\n        flex-flow: row wrap;\n        width: 100%;\n        padding: 10px 0;\n        margin-bottom: 25px;\n        padding: 10px;\n        overflow: auto;\n        max-width: 100%;\n        .album {\n            position: relative;\n            padding-right: 20px;\n            padding-left: 20px;\n            cursor: pointer;\n            .image {\n                width: 100%;\n                padding-bottom: 100%;\n            }\n            .card-title {\n                font-size: 14px;\n            }\n            .card-body {\n                padding: 10px 0;\n            }\n            .card-body .card-text {\n                display : block;\n                font-weight: bold;\n                font-size:13px;\n                padding: 0;\n                margin: 0;\n            }\n            .overlay {\n                position: absolute;\n                bottom:0;\n                left:0;\n                right:0;\n                display: flex;\n                flex-direction: row;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                margin-bottom:50%;\n            }\n            &:hover .overlay {\n                opacity: 1;\n            }\n        }\n    }\n`\n\nconst Grid = ({grid, player, setUri}) => {\n    const onViewPort = (inView, entry) => {\n        if(inView) {\n            const el = entry.target;\n            let { src, loaded } = el.dataset;\n            if(!loaded) {\n                el.style.backgroundImage = `url(${src})`\n                entry.target.dataset.loaded = true;\n            }\n        }\n    }\n\n    const renderAlbums = ({images,uri,id,name,artists}) => {\n        return (\n            <div className=\"album col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={id}>\n                <InView className=\"image\"\n                    as=\"div\" data-src={(images || {}).length && images[0].url} onChange={onViewPort}\n                    onClick={() => {\n                        if(uri.indexOf('spotify:track') !== -1) {\n                            player.play({uri})\n                        } else {\n                            setUri(uri)\n                        }\n                     }}\n                    style={\n                        { backgroundColor:'#212121', backgroundSize :'cover', backgroundPosition:'center center' }\n                    }\n                >\n                </InView>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{ artists && artists[0].name}</p>\n                    <p className=\"card-title\">{name}</p>\n                </div>\n            </div>\n        )\n    }\n\n    const renderRow = ({message,type,items}) => {\n        if(items) {\n            return (\n                <React.Fragment key={message}>\n                    <h2> {message} </h2>\n                    <div className=\"albums-row\" key={type}>\n                        {items.map(renderAlbums)}\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n\n    return (\n        <StyledGrid className=\"grid\">\n            {Object.values((grid || {})).map(renderRow)}\n        </StyledGrid>\n    );\n}\n\nGrid.propTypes = {\n    grid : PropTypes.object,\n    player : PropTypes.object,\n    setUri : PropTypes.func\n}\n\nexport default Grid;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { getViewRoute } from './../api';\nimport { SpotifyContext } from \"../components/main\";\n\nimport TracklistHeader from \"./../components/tracklistHeader\";\nimport Tracklist from \"./../components/tracklist\";\nimport Loading from \"../components/loading\";\nimport Grid from \"../components/grid\";\n\nconst Album = () => {\n    const {uri,player,setUri,setTopBar, currentTrack,setSticky} = useContext(SpotifyContext);\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri,setTopBar]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const {table,header,label,releaseDate,grid} = data;\n        return (\n            <div className=\"album\">\n                <TracklistHeader\n                    player={player}\n                    header={header}\n                    isPlaying={((currentTrack || {}).disallows || {}).resuming}\n                    setSticky={setSticky}\n                />\n                <Tracklist\n                    table={table}\n                    setUri={setUri}\n                    player={player}\n                    copyright={`© ${releaseDate} ${label}`}\n                    currentTrack={currentTrack}\n                />\n                <Grid grid={grid} setUri={setUri} player={player} />\n            </div>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nexport default Album;\n","import React from \"react\";\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledRelatedArtists = Styled.div`\n    padding: 15px 0;\n    ul {\n        padding: 0;\n        li {\n            display: flex;\n            flex-direction: row;\n            align-items : center;\n            list-style:none;\n            height: 44px;\n            cursor: pointer;\n            font-size: 12px;\n            .image {\n                height:30px;\n                width: 30px;\n                border-radius: 50%;\n            }\n            .name {\n                padding-left: 10px;\n            }\n        }\n    }\n`\n\nconst RelatedArtists = ({setUri, relatedArtists}) => {\n    const renderArtist = (artist) => {\n        return (\n            <li\n                key={artist.id}\n                onClick={() => setUri(artist.uri)}\n            >\n                <div\n                    className=\"image\"\n                    style={\n                        { backgroundImage: `url(${artist.images[2].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }\n                >\n                </div>\n                <div className=\"name\">\n                    {artist.name}\n                </div>\n            </li>\n        )\n    }\n    return (\n        <StyledRelatedArtists className=\"relatedArtists\">\n            <h4>Fans Also Like</h4>\n            <ul>\n                {relatedArtists.artists.filter((o,index) => index < 6).map(renderArtist)}\n            </ul>\n        </StyledRelatedArtists>\n    )\n}\n\nRelatedArtists.propTypes = {\n    setUri : PropTypes.func,\n    relatedArtists : PropTypes.object\n}\n\nexport default RelatedArtists;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Styled from 'styled-components';\nimport { getViewRoute } from './../api';\n\nimport { SpotifyContext } from \"../components/main\";\nimport TracklistHeader from \"./../components/tracklistHeader\";\nimport RelatedArtists from \"./../components/relatedArtists\";\nimport Tracklist from \"./../components/tracklist\";\nimport Grid from \"./../components/grid\";\nimport Loading from \"../components/loading\";\n\n\nconst StyledArtist = Styled.div`\n    padding: 20px 0;\n    .container {\n        margin-left: 20px;\n    }\n    .artist-top-related {\n        display: grid;\n        grid-template-columns: 14vw;\n        grid-template-rows: auto;\n        grid-template-areas:\n          \"topTracks topTracks topTracks topTracks topTracks related\";\n    }\n    .tracklist {\n        grid-area : topTracks;\n        padding: 15px 32px;\n    }\n    .related-artists {\n        grid-area : related;\n        padding: 0 5px 24px;\n    }\n`\n\nconst Artist = () => {\n    const { uri, setUri, player, setTopBar, currentTrack, setSticky } = useContext(SpotifyContext)\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri,setTopBar]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const { table, header, relatedArtists, grid } = data;\n        return (\n            <StyledArtist className=\"artist\">\n                <TracklistHeader\n                    header={header}\n                    player={player}\n                    isPlaying={((currentTrack || {}).disallows || {}).resuming}\n                    setSticky={setSticky}\n                />\n                <div className=\"artist-top-related\">\n                    <Tracklist\n                        table={table}\n                        limit=\"5\"\n                        player={player}\n                        setUri={setUri}\n                        currentTrack={currentTrack}\n                    />\n                    <RelatedArtists relatedArtists={relatedArtists} setUri={setUri} />\n                </div>\n                <Grid grid={grid} setUri={setUri} player={player} />\n            </StyledArtist>\n        );\n    } else {\n        return (\n            <Loading />\n        )\n    }\n}\n\nexport default Artist;\n","import React, { useState, useEffect } from \"react\";\nimport Styled from 'styled-components';\nimport { getUser } from '../api';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst StyledUserWidget = Styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    grid-area : user;\n\n    .avatar {\n        margin-right: 10px;\n        img,.placeholder {\n            border-radius: 50%;\n            width: 28px;\n            height: 28px;\n            background: #212121;\n            border: 1px solid #fefefe;\n\n            svg {\n                width: 20px;\n                height: 20px;\n            }\n        }\n    }\n\n    .user {\n        font-size: 15px;\n        line-height: 25px;\n    }\n`\n\nconst UserWidget = () => {\n    const [data,setData] = useState(null);\n    const { images, product, display_name } = data || {};\n\n    const getImage = () => {\n        if((data || {}).images.length === 0) {\n            return (\n                <FontAwesomeIcon icon=\"user\" />\n            )\n        }\n\n        return <img src={images[0].url} alt=\"userimage\" />\n    }\n\n    const setAlert = () => {\n        return (\n            <div class=\"alert alert-danger\" role=\"alert\">\n                You need a premium account to play the songs. =(\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        console.log(data)\n        if(!data) {\n            getUser()\n                .then(setData);\n        }\n    },[data]);\n\n    if(!data) { return <div></div> }\n    return (\n        <StyledUserWidget className=\"user-widget\">\n            {product !== 'premium' && setAlert()}\n            <div className=\"avatar\">\n                {getImage()}\n            </div>\n            <div className=\"user\">\n                {display_name}\n            </div>\n        </StyledUserWidget>\n    )\n}\n\nexport default UserWidget;\n","import React from \"react\";\nimport Styled from 'styled-components';\nimport UserWidget from \"./userWidget\";\nimport PropTypes from 'prop-types';\n\nconst StyledtopBar = Styled.div`\n    width:100%;\n    height:60px;\n    display: grid;\n    grid-template-columns: 14vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"search . . . user\"\n      \"additional-bar additional-bar additional-bar additional-bar additional-bar\";\n    position: sticky;\n    top: 0;\n    align-items: center;\n    z-index: 30;\n\n    .search {\n        width: 176px;\n        height: 24px;\n        border-radius: 27px;\n        background: inherit;\n        border-style: none;\n        background-color: #f5f5f5;\n        margin: 16px 20px;\n        z-index: 999;\n    }\n\n    .user-widget {\n        padding: 16px 20px;\n        z-index: 999;\n    }\n\n    .additional-bar {\n        width: 100%;\n        opacity : 0;\n        height: auto;\n        grid-area: additional-bar;\n        height: 0;\n        border-bottom: 1px solid #333;\n        transition: .3s;\n        padding: 9px 21px;\n        font-weight: bold;\n        height: auto;\n    }\n\n    &.sticky {\n        transition: .5s;\n        height:120px;\n        background: #111;\n        .additional-bar {\n            height: auto;\n            transition: 1s;\n            opacity: 1;\n        }\n    }\n`\n\nconst TopBar = ({scroll,title,setUri,onSearch}) => {\n\n    const search = (e) => {\n        e.persist();\n        if (e.key === 'Enter') {\n            setUri('search');\n            onSearch(e.target.value);\n            e.target.value = '';\n            e.target.blur();\n        }\n    }\n\n    const renderContent = () => {\n        return (\n            <>\n                <input onKeyDown={search} className=\"search\" type=\"search\"></input>\n                <UserWidget />\n                <div className=\"additional-bar\">\n                    <h2>{title}</h2>\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <StyledtopBar className={scroll > 300 ? 'top-bar sticky' : 'top-bar'}>\n            {renderContent()}\n        </StyledtopBar>\n    )\n}\n\nTopBar.propTypes = {\n    title : PropTypes.string\n}\n\nexport default TopBar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Styled from 'styled-components';\n\nimport { fetchSearchTerm } from '../api';\nimport Grid from \"../components/grid\";\nimport { SpotifyContext } from \"../components/main\";\n\nimport Loading from \"./../components/loading\";\n\nconst StyledSearch = Styled.div`\n`\n\nconst Search = () => {\n    const { searchTerm, setUri, uri, player } = useContext(SpotifyContext);\n    const [data,setData] = useState(null);\n    useEffect(() => {\n        if(searchTerm && searchTerm !== '') {\n            fetchSearchTerm({searchTerm}).then(data => {\n                setData(data);\n            });\n        }\n    },[searchTerm]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        return (\n            <StyledSearch className=\"search\">\n                <Grid grid={(data || {}).grid} player={player} setUri={setUri} />\n            </StyledSearch>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nexport default Search;\n","export default {\n    \"home\" : {\n        \"title\" : \"Home\"\n    },\n    \"browse\" : {\n        \"title\" : \"Browse\"\n    },\n    \"recently-played\" : {\n        \"title\" : \"Recently Played\"\n    },\n    \"Countries\" : {\n        \"title\" : \"Countries Featured Playlists\"\n    },\n    \"liked-songs\" : {\n        \"title\" : \"Liked Songs\"\n    },\n    \"artists-list\" : {\n        \"title\" : \"Artists\"\n    },\n    \"featured-playlists-countries\" : {\n        \"title\" : \"Featured Playlists\"\n    }\n}\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport Styled from 'styled-components';\nimport { getViewRoute } from '../api';\nimport { SpotifyContext } from \"../components/main\";\n\nimport Pages from '../constants';\nimport Grid from \"../components/grid\";\n\nconst StyledGridTemplate = Styled.div`\n    width: 90%;\n    margin: 0 auto;\n`\n\nconst usePrev = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\nconst GridTemplate = () => {\n    const {player, setUri, uri, setTopBar} = useContext(SpotifyContext);\n    const [data, setData] = useState(null);\n    const prevUri = usePrev(uri);\n\n    useEffect(() => {\n        if(uri !== prevUri) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar((Pages[uri] || {}).title || uri)\n        }\n    },[uri,prevUri,setTopBar]);\n\n    return (\n        <StyledGridTemplate className={uri}>\n            <Grid grid={(data || {}).grid} player={player} setUri={setUri} />\n        </StyledGridTemplate>\n    )\n}\nexport default GridTemplate;\n","import React, {useState, useEffect, useRef} from \"react\";\nimport Styled from 'styled-components';\nimport { label, set_device_id, getURLParams } from './../utils';\nimport Player from './../api/player';\nimport { get_current_track,get_devices } from './../api/spotify';\nimport Menu from './menu';\nimport NowPlayingBar from './nowPlayingBar';\nimport Playlist from \"../pages/playlist\";\nimport Album from \"../pages/album\";\nimport Artist from \"../pages/artist\";\nimport TopBar from \"./topBar\";\nimport Search from \"../pages/search\";\nimport Grid from \"../pages/gridTemplate\";\n\nexport const SpotifyContext = React.createContext();\n\nconst appendSDK = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://sdk.scdn.co/spotify-player.js\";\n    script.async = true;\n    document.body.appendChild(script);\n}\n\nconst StyledMain = Styled.div`\n    display: grid;\n    grid-template-columns: 15vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main main main main\"\n      \"footer footer footer footer footer footer\"\n      \"devicesBar devicesBar devicesBar devicesBar devicesBar devicesBar\";\n    overflow: hidden;\n    font-family: \"Montserrat\";\n    color: #F5F5F5;\n    overflow: none;\n    border-radius: 12px;\n\n    a {\n        color: #F5F5F5;\n    }\n\n    .github {\n        position: absolute;\n        top:0;\n        right:0;\n        z-index:1000;\n        width:120px;\n        img {\n            width: 120px;\n            height: 120px;\n        }\n    }\n\n    .search {\n        padding: 0 8px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n        }\n    }\n\n    .menu-wrapper, .browser-wrapper {\n        position: relative;\n        overflow-x: hidden;\n        overflow-y: auto;\n        height: 82vh;\n        background-repeat: no-repeat;\n        background-attachment: local;\n\n        &::-webkit-scrollbar {\n            width: 1em;\n            background-color: hsla(0,0%,100%,.3);\n        }\n        &::-webkit-scrollbar-thumb {\n            min-height: 30px;\n            max-height: none;\n            background-color: hsla(0,0%,100%,.3);\n        }\n    }\n\n    .menu-wrapper {\n        grid-area: sidebar;\n        justify-content: stretch;\n        &::-webkit-scrollbar {\n            background: #212121;\n        }\n    }\n\n    .browser-wrapper {\n        grid-area: main;\n        background: #202020;\n        /* background: linear-gradient(0deg, #0c0c0c 0%, #0c0c0c 40%, #212121 100%); */\n        .browser-inner-wrapper {\n            max-width: 100%;\n            margin-bottom: 1em;\n        }\n    }\n\n    .now-playing-wrapper {\n        position: relative;\n        width: 100%;\n        background-color: #282828;\n        grid-area: footer;\n    }\n\n    .devices-bar-wrapper {\n        grid-area: devicesBar;\n    }\n`\nconst Main = () => {\n    const paramUri = getURLParams().uri;\n    const [player,setPlayer] = useState(null);\n    const [uri,setUri] = useState(paramUri ? paramUri : localStorage.getItem('lastUri') != 'search' && localStorage.getItem('lastUri') || 'home');\n    const [currentTrack,setCurrentTrack] = useState(null);\n    const [title,setTopBar] = useState(null);\n    const [searchTerm,setSearchTerm] = useState(null);\n    const [scroll,setScroll] = useState(null);\n    const browser = useRef(null);\n\n    const getPlayingNow = () => {\n        get_devices().then((response) => {\n            let { devices } = response.data;\n            [devices] = devices.filter(i => i.is_active);\n            get_current_track().then(({data}) => {\n                if(data) {\n                    const { actions : { disallows }} = data;\n                    if((data || {}).item) {\n                        setCurrentTrack({...data.item, device: devices, disallows });\n                    }\n                }\n            });\n        })\n    }\n\n    const renderView = () => {\n        if(uri) {\n            if(uri.indexOf('spotify:playlist') !== -1) {\n                return <Playlist />\n            } else if(uri.indexOf('spotify:album') !== -1) {\n                return <Album />\n            } else if(uri.indexOf('spotify:artist') !== -1) {\n                return <Artist />\n            } else if(uri.indexOf('search') !== -1) {\n                return <Search />\n            } else {\n                return <Grid />\n            }\n        }\n    }\n\n    const onSearch = term => setSearchTerm(term);\n\n    const onScroll = e => setScroll(e.target.scrollTop);\n\n    useEffect(() => {\n        if(browser) {\n            browser.current.addEventListener('scroll',onScroll);\n        }\n    },[browser])\n\n    useEffect(() => {\n        appendSDK();\n        getPlayingNow();\n    }, [])\n\n    useEffect(() => {\n        setUri(uri);\n\n        localStorage.setItem('lastUri',uri);\n        document.querySelector('.browser-wrapper').scroll(0,0);\n\n        if(\n            uri.indexOf('playlist') === -1 &&\n            uri.indexOf('album') === -1 &&\n            uri.indexOf('artist') === -1\n        ) {\n            setTopBar(\n                label(uri)\n            );\n        }\n\n        return () => {\n            setUri(null);\n        }\n    }, [uri])\n\n    useEffect(() => {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            setPlayer(Player.init());\n        };\n\n        if(player) {\n            const onReady = ({device_id}) => {\n                set_device_id(device_id);\n            }\n            const onChanged = (state) => {\n                if(state && state.track_window) {\n                    setCurrentTrack({...state.track_window.current_track, ...state})\n                } else {\n                    console.log(state)\n                }\n            }\n            player.addListener('ready', onReady);\n            player.addListener('player_state_changed', onChanged);\n            player.connect();\n        }\n    },[player])\n\n    return (\n        <StyledMain className=\"main\">\n            <div className=\"menu-wrapper\">\n                <Menu\n                    setUri={setUri}\n                    uri={uri}\n                />\n            </div>\n            <div className=\"browser-wrapper\" ref={browser}>\n                <TopBar title={title} setUri={setUri} onSearch={onSearch} scroll={scroll} />\n                <SpotifyContext.Provider\n                    value={{uri,setUri,setTopBar,player,currentTrack,searchTerm}}\n                >\n                    {renderView()}\n                </SpotifyContext.Provider>\n            </div>\n            <div className=\"now-playing-wrapper\">\n                <NowPlayingBar currentTrack={currentTrack} setUri={setUri} player={player} />\n            </div>\n        </StyledMain>\n    );\n}\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\nimport { setSession,getSession } from './utils';\nimport Login from './components/login';\nimport Main from './components/main';\n\nconst App = () => {\n    const [isLogged,setIsLogged] = useState(false);\n\n    // init\n    useEffect(() => {\n        if(getSession().access_token) {\n            setIsLogged(true);\n        }\n    }, [])\n\n    const onLogin = (response) => {\n        setSession(response);\n        setIsLogged(response.access_token ? true : false)\n    }\n\n    const renderView = () => {\n        if(isLogged) {\n            return (\n                <Main />\n            )\n        } else {\n            return (\n                <Login onLogin={onLogin}/>\n            )\n        }\n    }\n\n    return (\n        <div className={isLogged ? 'app' : 'app login'}>\n            {renderView()}\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}