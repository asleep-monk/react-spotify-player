{"version":3,"sources":["components/loading/Rolling-1.2s-184px.gif","serviceWorker.js","reducers/index.js","utils/index.js","api/index.js","api/player.js","actions/index.js","components/loading/index.js","components/grid/index.js","pages/home.js","components/tracklist-header.js","components/tracklist/index.js","pages/playlist.js","components/relatedArtists/index.js","pages/artist.js","pages/saved-tracks.js","pages/album.js","components/view/index.js","components/login/index.js","config.js","components/menu/index.js","components/nowPlayingInfo/index.js","components/timer/index.js","components/timer/timerContainer.js","components/nowPlayingBar/index.js","components/main/index.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","combineReducers","user","state","action","type","payload","logged","playlists","uri","view","player","featured_paylists","current_state","current_track","getSession","access_token","localStorage","getItem","token_type","get_device_id","isAuthenticated","expires_at","JSON","parse","Date","valueOf","orderList","item","arr","key","indexOf","before","newArr","found","forEach","n","i","includes","push","formatTrackDuration","millis","minutes","Math","floor","seconds","toFixed","get_featured_playlist","axios","get","headers","get_recently_tracks","get_album","id","split","length","get_artists_albums","get_playlist_cover_image","get_playlist_items","get_a_playlist","get_artist_top_tracks","get_artist","get_related_artists","previous","lastUri","fetch","method","err","play","next","pause","resume","a","uris","queue","map","body","stringify","console","log","Spotify","Player","playerInstance","name","getOAuthToken","callback","totalDuration","tracks","duration","reduce","total","duration_ms","fetchPlaylist","playlistData","promises","playlist","playlistInfo","playlistCover","Promise","all","Object","values","data","image","items","track","filter","tableFactory","head","album","artists","header","total_duration","owner","followers","description","public","table","fetchAlbum","images","fetchArtist","artist","topTracks","albums","relatedArtists","artistAlbumsFactory","ids","artistAlbums","message","album_type","artistSingles","grid","getViewRoute","content","setView","props","dispatch","setItem","getView","clearView","logout","removeItem","status","Loading","className","src","gif","alt","StyledGrid","Styled","div","Grid","this","onClick","ev","style","backgroundImage","url","backgroundSize","backgroundPosition","stopPropagation","renderAlbums","bind","keys","renderRow","React","Component","connect","StyledHome","Main","getHome","nextProps","recentlyTracks","featuredPlaylists","topArtists","factoryRecentlyTracks","response","limit","href","factoryPlaylists","factoryTopArtists","top_artists","StyledHeader","TracklistHeader","dangerouslySetInnerHTML","__html","getDescription","display_name","getSongsLenght","tracksDuration","StyledTracklist","Tracklist","filteredItems","index","setArtist","setAlbum","setState","toLowerCase","replace","target","value","placeholder","onChange","onFilter","scope","renderList","showMore","StyledPlaylist","Playlist","RelatedArtists","undefined","StyledArtist","Artist","SavedTracks","getSavedTracks","device_id","then","savedTracks","factorySavedTracks","Album","View","StyledLogin","styled","process","Login","login","clientId","redirectUri","onSuccess","onFailure","expires_in","setSession","StyledMenu","ul","Menu","getPlaylists","menuItems","icon","el","data-owner","viewBox","fill","d","StyledNowPlayingInfo","NowPlayingInfo","StyledTimer","Timer","count","fixed","TimerContainer","paused","position","useState","timer","cb","start","setTimeout","stop","clearTimeout","useEffect","StyledPlayingBar","NowPlaying","addListener","connected","configurePlayer","setCurrentState","set_device_id","teste","togglePlayButton","shuffle","repeat_mode","track_window","next_tracks","previous_tracks","StyledMain","initiated","getPlayer","run","onSpotifyWebPlaybackSDKReady","getRecentlyTracks","getUser","App","isLogged","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.91555236.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rolling-1.2s-184px.f6b49911.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst GET_USER = 'GET_USER';\nconst GET_PLAYLISTS = 'GET_PLAYLISTS';\nconst SET_VIEW = 'SET_VIEW';\nconst GET_VIEW = 'GET_VIEW';\nconst CLEAR_VIEW = 'CLEAR_VIEW';\nconst GET_PLAYER = 'GET_PLAYER';\nconst SET_CURRENT_STATE = 'SET_CURRENT_STATE';\nconst GET_RECENTLY_TRACKS = 'GET_RECENTLY_TRACKS';\nconst GET_FEATURED_PLAYLISTS = 'GET_FEATURED_PLAYLISTS';\nconst LOGIN = 'LOGIN';\nconst LOGOUT = 'LOGOUT';\nconst ISLOGGED = 'ISLOGGED';\n\nconst userReducer = (state={},action) => {\n    if(action.type === GET_USER) {\n        return { ...state , ...action.payload };\n    }\n    if(action.type === LOGOUT) {\n        return {};\n    }\n    return state;\n}\n\nconst featuredPaylistReducer = (state={},action) => {\n    if(action.type === GET_FEATURED_PLAYLISTS) {\n        return { ...state , ...action.payload };\n    }\n    return state;\n}\n\nconst playlistsReducer = (state={},action) => {\n    if(action.type === GET_PLAYLISTS) {\n        return { ...state , ...action.payload };\n    }\n    if(action.type === LOGOUT) {\n        return {};\n    }\n    return state;\n}\n\nconst loginReducer = (state={},action) => {\n    if(action.type === ISLOGGED) {\n        return action.payload;\n    }\n    if(action.type === LOGIN) {\n        return action.payload;\n    }\n    if(action.type === LOGOUT) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst uriReducer = (state='home',action) => {\n    if(action.type === SET_VIEW) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst viewReducer = (state=[],action) => {\n    if(action.type === GET_VIEW) {\n        return action.payload;\n    }\n    if(action.type === CLEAR_VIEW ) {\n        return [];\n    }\n    return state;\n}\n\nconst playerReducer = (state={},action) => {\n    if(action.type === GET_PLAYER) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst currentStateReducer = (state={},action) => {\n    if(action.type === SET_CURRENT_STATE) {\n        return action.payload;\n    }\n    if(action.type === GET_RECENTLY_TRACKS) {\n        return {\n            current_track : action.payload\n        };\n    }\n    return state;\n}\n\nexport default combineReducers({\n    user : userReducer,\n    logged : loginReducer,\n    playlists : playlistsReducer,\n    uri : uriReducer,\n    view : viewReducer,\n    player : playerReducer,\n    featured_paylists : featuredPaylistReducer,\n    current_state : currentStateReducer\n});\n","export const setSession = ({access_token,token_type,expires_in}) => {\n    const expires_at = new Date().valueOf() + 3600000;\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('expires_at', expires_at);\n    console.log('setsession')\n}\n\nexport const removeSession = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('expires_at');\n    console.log('removesession')\n}\n\nexport const getSession = () => {\n    return {\n        access_token : localStorage.getItem('access_token'),\n        token_type : localStorage.getItem('token_type')\n    }\n}\n\nexport const set_device_id = (device_id) => {\n    console.log('Ready - Device ID - Localstorage', device_id);\n    localStorage.setItem('device_id', device_id);\n}\n\nexport const get_device_id = () => {\n    return localStorage.getItem('device_id')\n}\n\nexport const isAuthenticated = () => {\n    let expires_at = JSON.parse(localStorage.getItem('expires_at'));\n    return expires_at && new Date().valueOf() < expires_at;\n}\n\nexport const orderList = (item,arr) => {\n    const key = arr.indexOf(item)\n    let before = [],newArr = [], found = false;\n    arr.forEach((n,i) => {\n        if(i === key) found = true;\n        if(!found) {\n            before.push(n);\n        } else {\n            if(!newArr.includes(n)) {\n                newArr.push(n);\n            }\n        }\n    });\n\n    before.forEach(i => {\n        newArr.push(i);\n    });\n\n    return newArr;\n}\n\nexport const formatTrackDuration = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n}\n\nexport const delay = async (time) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve,time);\n    })\n}\n","import axios from 'axios';\n\nimport { getSession } from '../utils';\n\n/**\n * Scope to provide the right acess to information\n * @type scope\n */\nexport const scope = 'user-read-private user-library-read user-read-playback-state user-read-playback-position user-modify-playback-state user-top-read user-read-recently-played streaming user-read-email'\n\n/**\n * Basic request with the token provided\n * @function get\n * @param request url\n * @return {Promise}\n */\nexport const get = (url) => {\n    return axios.get(url, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user data\n * @function get_user\n * @return {Promise}\n */\nexport const get_user = () => {\n    return axios.get('https://api.spotify.com/v1/me', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request user's saved tracks\n * @function get_saved_tracks\n * @return {Promise}\n */\nexport const get_saved_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/tracks?limit=30', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the featured playlists from a country\n * @function get_featured_playlist\n * @return {Promise}\n */\nexport const get_featured_playlist = () => {\n    return axios.get('https://api.spotify.com/v1/browse/featured-playlists?country=CA&limit=4', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const get_current_track = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the top artists list\n * @function top_artists\n * @return {Promise}\n */\nexport const top_artists = () => {\n    return axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the recently listened music of the user\n * @function get_recently_tracks\n * @return {Promise}\n */\nexport const get_recently_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Retrieves the devices avaiable\n * @function get_devices\n * @return {Promise}\n */\nexport const get_devices = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/devices', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user's playlists\n * @function get_playlists\n * @return {Promise}\n */\nexport const get_playlists = () => {\n    return axios.get('https://api.spotify.com/v1/me/playlists?limit=30&offset=0', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a album\n * @function get_album\n * @return {Promise}\n */\nexport const get_album = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/albums/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist's albums\n * @function get_artists_albums\n * @return {Promise}\n */\nexport const get_artists_albums = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/albums`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_cover_image\n * @return {Promise}\n */\nexport const get_playlist_cover_image = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/images`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_items\n * @return {Promise}\n */\nexport const get_playlist_items = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/tracks`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_a_playlist\n * @return {Promise}\n */\nexport const get_a_playlist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/playlists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n/**\n * Request for a get_artist_top_tracks\n * @function get_artist_top_tracks\n * @return {Promise}\n */\nexport const get_artist_top_tracks = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/top-tracks?country=BR`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist\n * @function get_artist\n * @return {Promise}\n */\nexport const get_artist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist related artists\n * @function get_related_artists\n * @return {Promise}\n */\nexport const get_related_artists = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1] + '/related-artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_track\n * @return {Promise}\n */\nexport const get_track = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/tracks/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n","import { orderList, getSession, get_device_id } from \"../utils\";\n\nconst init = () => {\n    console.log('____init___');\n    const player = new window.Spotify.Player({\n        playerInstance: new window.Spotify.Player({ name: 'Kenjicas Player' }),\n        name: 'Kenjicas Player',\n        getOAuthToken: callback => callback(getSession().access_token)\n    });\n\n    player.play = play;\n    player.next = next;\n    player.previous = previous;\n    player.pause = pause;\n    player.resume = resume;\n\n    return player;\n}\n\nconst previous = (lastUri) => {\n    try {\n        fetch('https://api.spotify.com/v1/me/player/previous',{\n            method : 'POST',\n            headers : {\n                'content-type' : 'application/json',\n                'authorization' : `${getSession().token_type} ${getSession().access_token}`\n            }\n        });\n    } catch(err) {\n        play({uri : lastUri})\n    }\n\n}\n\nconst next = () => {\n    fetch('https://api.spotify.com/v1/me/player/next',{\n        method : 'POST',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst pause = () => {\n    fetch('https://api.spotify.com/v1/me/player/pause',{\n        method : 'PUT',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst resume = async () => {\n   fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n       method: 'PUT',\n       headers: {\n           'Content-Type': 'application/json',\n           'Authorization': `Bearer ${getSession().access_token}`\n       }\n   });\n}\n\nconst play = async ({uri,uris}) => {\n    let queue = orderList(uri,(uris || []).map(({uri}) => uri));\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris : queue.length ? queue : [uri] }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\nexport default {\n    init\n}\n","import {\n    setSession,getSession,\n    removeSession,\n    isAuthenticated,\n    formatTrackDuration\n} from '../utils';\n\nimport {\n    get_user,\n    get_saved_tracks,\n    get_devices,\n    get_playlists,\n    get_recently_tracks,\n    get_a_playlist,\n    get_featured_playlist,\n    top_artists,\n    get_album,\n    get_playlist_items,\n    get_artist,\n    get_related_artists,\n    get_artists_albums,\n    get_playlist_cover_image,\n    get_artist_top_tracks,\n} from '../api';\n\nimport Player from '../api/player';\n\n/**\n * Retrieves user information\n *\n * @function getUser\n * @return {Void}\n */\nexport const getUser = () => {\n    return dispatch => {\n        get_user().then( data => {\n            dispatch({\n                type : 'GET_USER',\n                payload : data.data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves home data\n *\n * @function getHome\n * @return {Void}\n */\nexport const getHome = () => {\n    return async dispatch => {\n        const promises = [get_recently_tracks(),get_featured_playlist(),top_artists()];\n        const [ { data : recentlyTracks }, { data : featuredPlaylists }, { data : topArtists } ] = await Promise.all(Object.values(promises));\n        /**\n         * Model array of recently tracks to albums for the homepage view\n         *\n         * @function factoryRecentlyTracks\n         * @return {Void}\n         */\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                next : response.next,\n                limit : response.limit,\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (response) => {\n            return {\n                message : response.message,\n                items : response.playlists.items,\n                type : 'playlists'\n            }\n        }\n        /**\n         * Model user's top artists response for the homepage view\n         *\n         * @function factoryTopArtists\n         * @return {Void}\n         */\n        const factoryTopArtists = (response) => {\n            return {\n                message : 'Top Artists',\n                items : response.items,\n                type : 'top-artists'\n            };\n        }\n\n        console.log({\n            grid : {\n                recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n                featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                top_artists : factoryTopArtists(topArtists)\n            }\n        })\n\n        dispatch({\n            type : 'GET_VIEW',\n            payload : {\n                grid : {\n                    recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n                    featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                    top_artists : factoryTopArtists(topArtists)\n                }\n            }\n        });\n    }\n}\n\nconst totalDuration = (tracks) => {\n    if(!tracks) return false;\n    let initialValue = 0;\n    const duration = tracks.reduce((total,{duration_ms}) => total + duration_ms,initialValue);\n\n    return formatTrackDuration(Math.floor(duration / 60));\n}\n\nconst fetchPlaylist = async (uri) => {\n    let playlistData = {};\n    const promises = {\n        playlist : get_playlist_items({uri}),\n        playlistInfo : get_a_playlist({uri}),\n        playlistCover : get_playlist_cover_image({uri}),\n    }\n    const [ playlist, playlistInfo, playlistCover ] = await Promise.all(Object.values(promises));\n\n    const [image] = playlistCover.data;\n\n    playlistData.tracks = playlist.data.items.map((i) => i.track).filter((i) => i);\n\n    const tableFactory = (data) => {\n        const trackModel = (i) => {\n            return {\n                id : i.id,\n                name : i.name,\n                duration_ms : formatTrackDuration(i.duration_ms),\n                album : i.album,\n                artists : i.artists,\n                uri : i.uri,\n            }\n        }\n        return {\n            head :  ['name','artist','album','duration'],\n            body  : data.tracks.map(trackModel)\n        }\n    }\n\n    return {\n        type : 'playlist',\n        header : {\n            type : 'playlist',\n            name : playlistInfo.data.name,\n            image: image,\n            tracks : tableFactory(playlistData).body,\n            total_duration : totalDuration(playlistData.tracks),\n            owner : playlistInfo.data.owner,\n            followers : playlistInfo.data.followers.total,\n            description : playlistInfo.data.description,\n            public : playlistInfo.data.public\n        },\n        table : tableFactory(playlistData)\n    }\n}\n\nconst fetchAlbum = async (uri) => {\n    const {data: album} = await get_album({uri});\n    const [image] = album.images;\n\n    const tableFactory = (album) => {\n        const trackModel = (i) => {\n            return {\n                id : i.id,\n                name : i.name,\n                duration_ms : formatTrackDuration(i.duration_ms),\n                uri : i.uri,\n                artists : i.artists\n            }\n        }\n        return {\n            head :  ['name','artist','duration'],\n            body  : album.tracks.items.map(trackModel)\n        }\n    }\n\n    console.log({\n        type: 'album',\n        header : {\n            name : album.name,\n            image : image,\n            tracks  : album.tracks,\n            total_duration : totalDuration(album.tracks.items)\n        },\n        table : tableFactory(album)\n    });\n\n    return {\n        type: 'album',\n        header : {\n            name : album.name,\n            image : image,\n            tracks : tableFactory(album).body,\n            total_duration : totalDuration(album.tracks.items)\n        },\n        table : tableFactory(album)\n    };\n}\n\nconst fetchArtist = async (uri) => {\n    let artist = {};\n    const { data } = await get_artist({uri});\n    const { data : topTracks } = await get_artist_top_tracks({uri});\n    const { data : albums } = await get_artists_albums({uri});\n    const { data : relatedArtists } = await get_related_artists({uri});\n\n    const [image] = data.images;\n    console.log(image)\n    if(!artist.tracks) {\n        artist.tracks = topTracks.tracks;\n    }\n\n    const artistAlbumsFactory = (albums) => {\n        const ids = [];\n        return {\n            artistAlbums : {\n                message : 'Albums',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'album') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            },\n            artistSingles : {\n                message : 'Singles',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'single') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n        }\n    }\n\n    const tableFactory = (artist) => {\n        const trackModel = (i) => {\n            return {\n                id : i.id,\n                name : i.name,\n                duration_ms : formatTrackDuration(i.duration_ms),\n                uri : i.uri\n            }\n        }\n        return {\n            head :  ['Popular'],\n            body  : artist.tracks.map(trackModel)\n        }\n    }\n\n    return {\n        type : 'artist',\n        header : {\n            type : 'artist',\n            name : data.name,\n            image : image,\n            tracks : tableFactory(artist).body\n        },\n        table : tableFactory(artist),\n        grid : artistAlbumsFactory(albums),\n        relatedArtists : relatedArtists\n    };\n}\n\nconst getViewRoute = async ({uri}) => {\n    let content;\n    if(uri.split(':').indexOf('album') >= 0) {\n        content = await fetchAlbum(uri);\n    } else if(uri.split(':').indexOf('playlist') >= 0) {\n        content = await fetchPlaylist(uri);\n    } else if(uri.split(':').indexOf('artist') >= 0) {\n        content = await fetchArtist(uri);\n    }\n    return content;\n}\n\n/**\n * Retrieves user's saved tracks\n *\n * @function getSavedTracks\n * @return {Void}\n */\nexport const getSavedTracks = () => {\n    return dispatch => {\n        get_saved_tracks().then( ({data}) => {\n            /**\n             * Model array of recently tracks to albums for the saved tracks\n             *\n             * @function factorySavedTracks\n             * @return {Void}\n             */\n            const factorySavedTracks = (response) => {\n                let tracks = response.items.map(item => item.track);\n                tracks = tracks.map(item => {\n                    item.images = item.album.images;\n                    return {\n                        images : item.album.images,\n                        name : item.name,\n                        uri : item.uri,\n                        album : {\n                            uri : item.album.uri\n                        },\n                        artists : item.artists\n                    };\n                });\n                return {\n                    next : response.next,\n                    limit : response.limit,\n                    message : 'Saved Tracks',\n                    items : tracks,\n                    type : 'saved-tracks'\n                }\n            }\n            dispatch({\n                type : 'GET_VIEW',\n                payload : {\n                    savedTracks : factorySavedTracks(data)\n                }\n            });\n        })\n    }\n}\n\n/**\n * Retrieves featured playlists from a country\n *\n * @function getFeaturedPlaylist\n * @return {Void}\n */\nexport const getFeaturedPlaylist = () => {\n    return dispatch => {\n        get_featured_playlist().then( data => {\n            dispatch({\n                type : 'GET_FEATURED_PLAYLISTS',\n                payload : data.data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves devices avaiable\n *\n * @function getDevices\n * @return {Void}\n */\nexport const getDevices = () => {\n    return dispatch => {\n        get_devices().then(({data}) => {\n            dispatch({\n                type : 'GET_DEVICES',\n                payload : data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves user's playlists\n *\n * @function getPlaylists\n * @return {Void}\n */\nexport const getPlaylists = () => {\n    return dispatch => {\n        get_playlists().then(({data}) => {\n            dispatch({\n                type : 'GET_PLAYLISTS',\n                payload : data\n            });\n        })\n    }\n}\n\n/**\n * Verifies if the user is logged\n * @function isLogged\n * @return {Void}\n */\nexport const isLogged = () => {\n    return dispatch => {\n        dispatch({\n            type : 'ISLOGGED',\n            payload : {\n                status : isAuthenticated(),\n                access_token : getSession().access_token\n            }\n        });\n    }\n}\n\n/**\n * Sets the app's view ( browse,home,playlists,album )\n * @function setView\n * @param props contains the uri of a song or playlist\n * @return {Void}\n */\nexport const setView = (props) => {\n    return async dispatch => {\n        // salve o ultimo tpl acessado\n        (props || {}).uri && window.localStorage.setItem('last_uri',props.uri);\n        dispatch({\n            type : 'SET_VIEW',\n            payload : (props || {}).uri || 'home'\n        });\n    }\n}\n\n/**\n * Return object for a template\n * @function getView\n * @return {Void}\n */\nexport const getView = ({uri}) => {\n    return async dispatch => {\n        const view = await getViewRoute({uri});\n        dispatch({\n            type : 'GET_VIEW',\n            payload : view\n        });\n    }\n}\n\n/**\n * Return a empty array\n * @function clearView\n * @return {Void}\n */\nexport const clearView = () => {\n    return dispatch => {\n        dispatch({\n            type : 'CLEAR_VIEW',\n            payload : []\n        });\n    }\n}\n\n/**\n * Clear the authorization data\n * @function logout\n * @return {Void}\n */\nexport const logout = () => {\n    return dispatch => {\n        removeSession();\n        dispatch({\n            type : 'LOGOUT',\n            payload : {\n                status : false,\n                access_token : false\n            }\n        });\n    }\n}\n\n/**\n * Sets token for the logged user\n * @function login\n * @param response authentication\n * @return {Void}\n */\nexport const login = (response) => {\n    return dispatch => {\n        setSession(response);\n        dispatch({\n            type : 'LOGIN',\n            payload : {\n                status : true,\n                access_token : getSession().access_token\n            }\n        });\n    }\n}\n\nexport const getPlayer = () => {\n    return dispatch => {\n        const player = Player.init();\n        dispatch({\n            type : 'GET_PLAYER',\n            payload : player\n        });\n    }\n}\n\nexport const getRecentlyTracks = () => {\n    return async dispatch => {\n        const {data} = await get_recently_tracks();\n\n        dispatch({\n            type : 'GET_RECENTLY_TRACKS',\n            payload : data.items[0].track\n        });\n    }\n}\n\n/**\n * Set current track and context data\n * @function setCurrentState\n * @param response changed state\n * @return {Void}\n */\nexport const setCurrentState = (state) => {\n    return dispatch => {\n        const {\n            position,\n            duration,\n            paused,\n            shuffle,\n            repeat_mode,\n            track_window : {\n                current_track,\n                next_tracks,\n                previous_tracks\n            }\n        } = state;\n\n        dispatch({\n            type : 'SET_CURRENT_STATE',\n            payload : {\n                position,\n                duration,\n                paused,\n                shuffle,\n                repeat_mode,\n                current_track,\n                next_tracks,\n                previous_tracks\n            }\n        });\n    }\n}\n\n","import React from 'react';\nimport './style.scss';\nimport gif from './Rolling-1.2s-184px.gif';\n\nconst Loading = () => {\n    return (\n        <>\n            <div className=\"loading\">\n                <img src={gif} alt=\"loading\" />\n            </div>\n        </>\n    )\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport {\n    setView,\n    clearView\n} from \"../../actions\";\n\nimport Loading from \"./../loading\";\n\nconst StyledGrid = Styled.div`\n    width:90%;\n    margin:0 auto;\n    .albums-row {\n        display: flex;\n        flex-direction: row;\n        flex-flow: row wrap;\n        width: 100%;\n        padding: 10px 0;\n        margin-bottom: 25px;\n        padding: 10px;\n        resize: horizontal;\n        overflow: auto;\n        max-width: 100%;\n        .album {\n            padding-right: 5px;\n            padding-left: 5px;\n            cursor: pointer;\n            .image {\n                width: 100%;\n                padding-bottom: 100%;\n            }\n            .card-title {\n                font-size: 12px;\n            }\n            .card-body {\n                padding: 10px 0;\n            }\n            .card-body .card-text {\n                display : block;\n                font-weight: bold;\n                font-size:13px;\n                padding: 0;\n                margin: 0;\n            }\n        }\n    }\n`\n\nclass Grid extends React.Component {\n\n    componentWillUnmount() {\n        this.props.clearView();\n    }\n\n    renderAlbums({images,uri,id,name,artists}) {\n        console.log(uri)\n        return (\n            <div className=\"album col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={id}>\n            <div className=\"image\" onClick={(ev) => { this.props.setView({uri});}} style={\n                { backgroundImage: `url(${images.length && images[0].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n            }></div>\n            <div className=\"card-body\">\n                <p className=\"card-text\" onClick={(ev) => { ev.stopPropagation(); this.props.setView({uri : artists && artists[0].uri}) }}>{ artists && artists[0].name}</p>\n                <p className=\"card-title\" onClick={(ev) => { ev.stopPropagation(); this.props.player.play({ uri : uri }) }}>{name}</p>\n                <p>PLAY</p>\n            </div>\n        </div>\n        )\n    }\n\n    renderRow({message,type,items}) {\n        return (\n            <>\n                <h2> {message} </h2>\n                <div className=\"albums-row\" key={type}>\n                    {items.map(this.renderAlbums.bind(this))}\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        const { grid } = this.props;\n        if(grid && Object.keys(grid).length) {\n            return (\n                <StyledGrid className=\"grid\">\n                    {Object.values(grid).map(this.renderRow.bind(this))}\n                </StyledGrid>\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps, {\n    setView,\n    clearView\n})(Grid);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport {\n    getHome,\n    setView\n} from \"./../actions\";\n\nimport Loading from \"../components/loading\";\nimport Grid from \"../components/grid\";\n\nconst StyledHome = Styled.div`\n\n`\n\nclass Main extends React.Component {\n\n    componentDidMount() {\n        this.props.getHome();\n    }\n\n    componentDidUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).table) &&\n            ((this.props.view || {}).table) &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n\n    render() {\n        if((this.props.view || {}).grid) {\n            return (\n                <StyledHome className=\"home\">\n                    <Grid grid={this.props.view.grid} />\n                </StyledHome>\n            )\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        view: state.view\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getHome,\n    setView\n})(Main);\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nconst StyledHeader = Styled.div`\n        padding: 15px 32px;\n        margin-bottom: 15px;\n        display: flex;\n        align-items: center;\n        img {\n            width: 220px;\n        }\n\n        .info {\n            align-self: flex-end;\n            padding: 0 10px;\n            p { margin: 0; }\n            .info-type {\n                position: relative;\n                top: 5px;\n                text-transform: uppercase;\n                font-weight: 300;\n                font-size: 15px;\n            }\n            .info-name {\n                font-size: 82px;\n                line-height: 82px;\n                padding: 0.08em 0px;\n                font-weight: 600;\n                margin-bottom: 0;\n            }\n            .info-description {\n                max-width: 500px;\n            }\n            .info-details {\n                padding: 14px 0;\n            }\n            .info-tracks {\n                margin-right: 4px;\n            }\n            .info-owner {\n                &:after {\n                    content:\"*\";\n                    padding: 0 6px;\n                }\n            }\n        }\n\n        .info-interactive {\n            .play {\n                cursor: pointer;\n                background: #1DB954;\n                border-radius: 15px;\n                font-size: 11px;\n                letter-spacing: 2px;\n                font-weight: bold;\n                width: 106px;\n                padding: 4px;\n                text-align: center;\n            }\n        }\n`\n\nclass TracklistHeader extends React.Component {\n    getDescription(description) {\n        return (\n            <>\n                <div dangerouslySetInnerHTML={{__html: description }} />\n            </>\n        )\n    }\n\n    tracksDuration(total_duration) {\n        return (\n            <span className=\"info-duration\">\n                {`- ${total_duration} hrs`}\n            </span>\n        )\n    }\n\n    getSongsLenght(tracks) {\n        return (\n            <span className=\"info-tracks\">\n                {`${(tracks || []).length} songs`}\n            </span>\n        )\n    }\n\n    render() {\n        const {\n            tracks,\n            image,\n            name,\n            description,\n            owner,\n            total_duration,\n            type\n        } = this.props.header;\n\n        return (\n            <StyledHeader className=\"tracklist-header\">\n                {(image && image.url &&\n                    <div className=\"artwork\">\n                        <img src={image.url} alt={name || ''}/>\n                    </div>\n                )}\n                <div className=\"col info d-flex flex-column\">\n                    <strong className=\"info-type\">{type}</strong>\n                    <h3 className=\"info-name\">{name}</h3>\n                        {this.getDescription(description)}\n                    <div className=\"info-details\">\n                        {\n                            (owner || {}).display_name && (\n                                <span className=\"info-owner\">\n                                    Created by <strong>{(owner || {}).display_name}</strong>\n                                </span>\n                            )\n                        }\n                            { type !== 'artist' && this.getSongsLenght(tracks) }\n                            { type !== 'artist' && total_duration && this.tracksDuration(total_duration) }\n                    </div>\n                    <div className=\"info-interactive\">\n                        <div className=\"play\" onClick={ () => { this.props.player.play({uris : (tracks || []) })}}> PLAY </div>\n                    </div>\n                </div>\n            </StyledHeader>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps, {})(TracklistHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport { setView,clearView } from './../../actions';\n\nconst StyledTracklist = Styled.div`\n    padding: 0 32px 24px;\n    .filter {\n        padding: 3px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n            background: inherit;\n            border-style: none;\n            color: #f5f5f5;\n        }\n    }\n    .toggleShow {\n        padding: 16px;\n        background: none;\n        border: none;\n        color: hsla(0,0%,100%,.7);\n    }\n    table {\n        list-style: none;\n        margin: 0;\n        padding: 10px;\n        color: #f5f5f5;\n\n        th {\n            color: #d1d1d1;\n            font-size: 13px;\n            text-transform: uppercase;\n            border-top: none;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            &:fist-child {\n                width: 30px;\n            }\n        }\n\n        tr {\n            &:not(.header):hover td {\n                background: rgba(255, 255, 255, 0.1);\n            }\n        }\n\n        td {\n            &:nth-child(1) {\n                width: 20px;\n            }\n            &:last-child {\n                width: 80px;\n                text-align: center;\n            }\n        }\n\n        tr,\n        td {\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            cursor: pointer;\n            padding: 8px;\n            white-space: nowrap;\n            max-width: 220px;\n            overflow: hidden;\n\n            &:hover {\n                .play {\n                    visibility: visible;\n                }\n            }\n\n            .play {\n                border: 1px solid #fff;\n                padding: 5px;\n                width: 20px;\n                height: 20px;\n                border-radius: 100%;\n                visibility: hidden;\n            }\n\n            span.link:hover {\n                border-bottom: 1px solid #fff;\n            }\n        }\n    }\n`\n\nclass Tracklist extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filteredItems : [],\n            limit : props.limit || null\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.clearView();\n    }\n\n    setArtist ({ artist, total, index }) {\n        const { id, uri, name } = artist;\n        return (\n            <span\n                key={id+'#'+index}\n                onClick={(ev) => {\n                    ev.stopPropagation();\n                    this.props.setView({ uri });\n                }}\n            >\n                {total > 1 && index !== total - 1 ? `${name}, ` : name}\n            </span>\n        );\n    }\n\n    setAlbum(ev,item) {\n        ev.stopPropagation();\n        this.props.setView({ uri: item.album.uri });\n    }\n\n    renderList(item,index) {\n        return (\n            <tr\n                key={item.id+'#'+index}\n                onClick={() => {\n                    this.props.player.play({\n                        uri: item.uri,\n                        uris: this.props.table.tracks\n                    });\n                }}\n            >\n                <td>\n                    <span><i className=\"play fas fa-play\"></i></span>\n                </td>\n                {\n                    item.name &&\n                    <td>\n                        <span>{item.name}</span>\n                    </td>\n                }\n                {\n                    item.artists &&\n                    <td>\n                        <span className=\"link\">{item.artists && Object.values(item.artists).map((artist, index) => this.setArtist({ artist,total: (item.artists || []).length, index }))}</span>\n                    </td>\n                }\n                {\n                    item.album &&\n                    <td>\n                        <span className=\"link\" onClick={(ev) => this.setAlbum(ev,item)}> {item.album.name} </span>\n                    </td>\n                }\n                {\n                item.duration_ms &&\n                <td>\n                    <span> {item.duration_ms} </span>\n                </td>\n                }\n            </tr>\n        );\n    }\n\n    onFilter(ev) {\n        this.setState({\n            filteredItems : this.props.table.body.filter(({name}) => name.toLowerCase().replace('ã','a').indexOf(ev.target.value.toLowerCase()) > -1 )\n        })\n    }\n\n    showMore() {\n        this.setState({ limit : +this.state.limit === 5 ? 10 : 5 });\n    }\n\n    render() {\n        return (\n            <StyledTracklist className=\"tracklist\">\n                <div className=\"filter\">\n                    <input type=\"text\" placeholder=\"Filter\" onChange={(ev) => { this.onFilter(ev) }} />\n                </div>\n                <table className=\"table\">\n                    <thead>\n                        <tr className=\"header\">\n                            <th scope=\"col\"></th>\n                            {this.props.table.head.map(i => (<th key={i}>{i}</th>))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {((this.state.filteredItems || []).length > 0 ? this.state.filteredItems : this.props.table.body).map((i,index) => {\n                            if((this.state.limit)) {\n                                return (index < +this.state.limit) && this.renderList(i,index);\n                            } else {\n                                return this.renderList(i,index);\n                            }\n                        })}\n                    </tbody>\n                </table>\n                { this.props.limit && <button className=\"toggleShow\" onClick={this.showMore.bind(this)}>show {+this.state.limit === 5 ? 'more' : 'less' }</button>}\n            </StyledTracklist>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps,{ setView,clearView })(Tracklist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport {\n    getView,\n    setView\n} from \"./../actions\";\n\nimport TracklistHeader from \"../components/tracklist-header\";\nimport Tracklist from \"../components/tracklist\";\nimport Loading from \"../components/loading\";\n\nconst StyledPlaylist = Styled.div`\n`\n\nclass Playlist extends React.Component {\n    componentWillMount() {\n        this.props.getView({\n            uri: this.props.uri\n        });\n    }\n\n    componentWillUpdate(nextProps) {\n        if (\n            (nextProps.view || {}).table &&\n            (this.props.view || {}).table &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n\n    render() {\n        if ((this.props.view || {}).table) {\n            return (\n                <StyledPlaylist className=\"playlist\">\n                    <TracklistHeader\n                        header={this.props.view.header}\n                    />\n                    <Tracklist\n                        table={this.props.view.table}\n                    />\n                </StyledPlaylist>\n            );\n        } else {\n            return (\n                <Loading />\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView,\n})(Playlist);\n","import React from 'react';\n\nconst RelatedArtists = ({relatedArtists}) => {\n    console.log(relatedArtists)\n    const renderArtist = (artist) => {\n        return (\n            <li key={artist.id}>\n                {artist.name}\n            </li>\n        )\n    }\n\n    return (\n        <div className=\"related-artists\">\n            <ul>\n                {relatedArtists !== undefined && relatedArtists.artists.map(renderArtist)}\n            </ul>\n        </div>\n    )\n}\n\nexport default RelatedArtists;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport {\n    getView,\n    setView\n} from \"./../actions\";\n\nimport TracklistHeader from \"../components/tracklist-header\";\nimport RelatedArtists from \"../components/relatedArtists\";\nimport Tracklist from \"../components/tracklist\";\nimport Loading from \"../components/loading\";\nimport Grid from \"../components/grid\";\n\nconst StyledArtist = Styled.div`\n    padding: 20px 0;\n    .container {\n        margin-left: 20px;\n    }\n    .artist-top-related {\n        display: grid;\n        grid-template-columns: 14vw;\n        grid-template-rows: auto;\n        grid-template-areas:\n          \"topTracks topTracks topTracks topTracks topTracks related\";\n    }\n    .tracklist {\n        grid-area : topTracks;\n        padding: 15px 32px;\n    }\n    .related-artists {\n        grid-area : related;\n        padding: 0 5px 24px;\n    }\n`\n\nclass Artist extends React.Component {\n    componentWillMount() {\n        this.props.getView({ uri: this.props.uri });\n    }\n\n    componentDidUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).table) &&\n            ((this.props.view || {}).table) &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n\n    render() {\n        if ((this.props.view || {}).table) {\n            return (\n                <StyledArtist className=\"artist\">\n                    <TracklistHeader header={this.props.view.header} />\n                    <div className=\"artist-top-related\">\n                        <Tracklist table={this.props.view.table} limit=\"5\" />\n                        <RelatedArtists relatedArtists={this.props.view.relatedArtists} />\n                    </div>\n                    <Grid grid={this.props.view.grid} />\n                </StyledArtist>\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView\n})(Artist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    getSavedTracks,\n    setView\n} from \"../actions\";\n\nimport Grid from \"../components/grid\";\nimport Loading from \"../components/loading\";\n\nclass SavedTracks extends React.Component {\n    componentDidMount() {\n        this.props.getSavedTracks();\n    }\n\n    render() {\n        if(Object.keys(this.props.view).length) {\n            return (\n                <Grid view={this.props.view} />\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        view: state.view,\n        player: state.player,\n        device_id : state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getSavedTracks,\n    setView\n})(SavedTracks);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n    getView,\n    setView\n} from \"./../actions\";\n\nimport TracklistHeader from \"../components/tracklist-header\";\nimport Tracklist from \"../components/tracklist\";\nimport Loading from \"../components/loading\";\n\nclass Album extends React.Component {\n\n    componentWillMount() {\n        this.props.getView({\n            uri: this.props.uri\n        });\n    }\n\n    componentDidUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).table) &&\n            ((this.props.view || {}).table) &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n\n    render() {\n        if ((this.props.view || {}).table) {\n            return (\n                <div className=\"playlist\">\n                    <TracklistHeader\n                        header={this.props.view.header}\n                    />\n                    <Tracklist\n                        table={this.props.view.table}\n                    />\n                </div>\n            );\n        } else {\n            return (\n                <Loading />\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        view: state.view,\n        uri : state.uri\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView\n})(Album);\n","import React from \"react\";\nimport Home from \"../../pages/home\";\nimport Playlist from \"../../pages/playlist\";\nimport Artist from \"../../pages/artist\";\nimport SavedTracks from \"../../pages/saved-tracks\";\nimport Album from \"../../pages/album\";\n\nconst View = (props) => {\n    const { uri } = props;\n    return (\n        <>\n            {props.uri.indexOf('album') >= 0 ? (\n                <Album />\n            ) : uri.indexOf('artist') >= 0 ? (\n                <Artist />\n            ) : uri.indexOf('playlist') >= 0 ? (\n                <Playlist />\n            ) : uri.indexOf('home') >= 0 ? (\n                <Home />\n            ) : uri.indexOf('saved-tracks') >= 0 ? (\n                <SavedTracks />\n            ) : (\n                'Page not defined'\n            )}\n        </>\n    );\n\n}\n\nexport default View;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SpotifyLogin from 'react-spotify-login';\nimport styled from 'styled-components';\n\nimport { clientId, redirectUri } from './../../config';\nimport { logout, login } from './../../actions';\nimport { scope } from './../../api';\n\nconst StyledLogin = styled.div`\n    @font-face {\n        font-family: 'Cooper Black';\n        src: url(${process.env.PUBLIC_URL}/assets/cooper_black.ttf);\n    }\n\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    font-family: \"Cooper Black\";\n    background: rgba(28,28,28);\n    border: 2em solid #ffffff;\n    color: #fff;\n    overflow: none;\n    height: 100vh;\n    text-align: center;\n\n    .title {\n        padding: 20px;\n        font-size: 2em;\n        p {\n            font-size: 22px;\n        }\n    }\n\n    .btn {\n        border: 1px solid #ffffff;\n        font-size: 17px;\n        color: #ffffff;\n    }\n`\n\nclass Login extends React.Component {\n    onSuccess(response) {\n        this.props.login(response);\n    }\n    onFailure(err) {\n        console.log('fail',err);\n    }\n    logout() {\n        this.props.logout();\n    }\n    render() {\n        return (\n            <StyledLogin style={{backgroundImage : `url('${process.env.PUBLIC_URL}/assets/background.jpg')`, backgroundSize : 'cover'}}>\n                <div className=\"login container\">\n                    <SpotifyLogin\n                        className=\"btn\"\n                        clientId={clientId}\n                        redirectUri={redirectUri}\n                        onSuccess={(response) => { this.onSuccess(response) }}\n                        onFailure={this.onFailure}\n                        scope={scope}\n                    />\n                </div>\n            </StyledLogin>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user : state.user\n    };\n}\n\nexport default connect(mapStateToProps, { login,logout })(Login);\n","export const clientId = '38a9d82012ce4dcc81269de4479a74fa';\nexport const clientSecret  = '31cafd8a23394dbfa3bc848199a97bfd';\nexport const redirectUri = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://kenjikatahira.github.io/react-spotify-player/';\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nconst StyledMenu = Styled.ul`\n    list-style: none;\n    padding: 15px;\n    white-space: nowrap;\n    color : #B3B3B3;\n    background: #000;\n\n    .logo-wrapper {\n        display:flex;\n        flex-direction: row;\n        justify-content: space-between;\n\n        .spotify-logo {\n            width:120px;\n            padding-right: 0;\n            padding-left:5px;\n            display:inline-block;\n            color:#fff;\n            align-self: center;\n        }\n\n        .made {\n            padding: 10px 0;\n            margin-left: 5px;\n            align-self: center;\n            font-size: 14px;\n            text-align: center;\n        }\n    }\n\n    .fixed-pages {\n        position: sticky;\n\n        li {\n            padding: 0;\n            margin-bottom: 15px;\n            font-size: 14px;\n            font-weight: 700;\n            svg {\n                margin-right: 10px;\n                font-weight: 500;\n                font-size: 18px;\n            }\n        }\n    }\n\n    hr   {\n        display: block;\n        unicode-bidi: isolate;\n        margin-block-start: 0.9em;\n        margin-block-end: 0.9em;\n        margin-inline-start: auto;\n        margin-inline-end: auto;\n        background: #282828;\n    }\n\n    li {\n        position:relative;\n        padding: 0;\n        cursor: pointer;\n        font-size: 13px;\n        font-weight: 800;\n        margin-bottom: 8px;\n\n        &.lead {\n            margin-bottom: 0;\n            font-size: 14px;\n            font-weight: 100;\n            text-transform: uppercase;\n            margin-bottom: 10px;\n        }\n\n        &.active:before {\n            content : \"\";\n            border-left: 3px solid #1db954;\n            position: absolute;\n            height: 17px;\n            left: -8px;\n            top: 0;\n        }\n\n        &:hover:after {\n                content: attr(data-owner);\n                position: relative;\n                height:10px;\n                font-size: 12px;\n                left: 0px;\n                color: #ccc;\n                white-space: nowrap;\n        }\n    }\n`\n\nconst Menu = ({playlists, setView, uri, logout, getPlaylists}) => {\n    // Retorna a playlist do usuario\n    !Object.keys(playlists).length && getPlaylists && getPlaylists();\n    // Menu de itens fixos\n    let  menuItems = [\n        {\n            name: \"Home\",\n            uri: \"home\",\n            icon: <i className=\"fas fa-home\">home</i>,\n        },\n        // {\n        //     name: \"Browse\",\n        //     uri: \"browse\",\n        //     icon: <i className=\"fa fa-folder-open\" aria-hidden=\"true\"></i>,\n        // },\n        {\n            el: <li key=\"your-library\" className=\"lead\"> Your Library </li>\n        },\n        {\n            name: \"Saved\",\n            uri: \"saved-tracks\"\n        },\n        {\n            name: \"Recently Played\",\n            uri: \"recently-played\"\n        },\n        // {\n        //     name: \"Liked Songs\",\n        //     uri: \"liked-songs\"\n        // },\n        // {\n        //     name: \"Albums\",\n        //     uri: \"albums\"\n        // },\n        // {\n        //     name: \"Bands\",\n        //     uri: \"bands\"\n        // },\n        // {\n        //     name: \"Podcasts\",\n        //     uri: \"podcasts\"\n        // },\n        {\n            el: <><hr className=\"separator\"></hr><li key=\"lead-playlists\" className=\"lead\"> Playlists </li></>\n        }\n    ];\n    const renderList = (item) => {\n        const display_name = ((item || {}).owner || {}).display_name\n        if(item.el) {\n            return item.el;\n        } else {\n            return (\n                <li\n                    key={item.uri}\n                    className={uri === item.uri ? \"active\" : \"\"}\n                    data-owner={display_name ? ` * by ${display_name}`: \"\" }\n                    id={item.uri}\n                    onClick={() => setView({ uri: item.uri })}\n                >\n                    {item.icon ? item.icon : ''} {item.name}\n                </li>\n            );\n        }\n    }\n    if((playlists.items || []).length) {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo\"><path fill=\"currentColor\" d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"></path></svg>\n                    <span className=\"made\"><a href=\"https://github.com/kenjikatahira/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n                <div className=\"playlists-wrapper\">\n                    {playlists.items.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    } else {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    }\n}\n\nMenu.propTypes = {\n    playlists : PropTypes.object,\n    uri : PropTypes.string,\n    setView : PropTypes.func,\n    logout : PropTypes.func\n}\n\nexport default Menu;\n","import React from 'react';\nimport Styled from 'styled-components';\n\nconst StyledNowPlayingInfo = Styled.div`\n    display: grid;\n    grid-template-columns: 33%;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main\";\n\n    text-align: center;\n    font-size: 13px;\n    height:8vh;\n\n    .image {\n        grid-area: sidebar;\n        align-self: center;\n        img {\n            height:8vh;\n            padding: 6px;\n        }\n    }\n\n    .info {\n        grid-area: main;\n        align-self: center;\n        justify-self: start;\n        white-space: nowrap;\n        .playing-artist {\n            text-align: left;\n            color: #999;\n        }\n    }\n`\n\nconst NowPlayingInfo = ({current_track}) => {\n    const image = ((((current_track || {}).album || {}).images || [])[0] || {}).url;\n    const track = (current_track || {}).name;\n    const artist = (((current_track || {}).artists || [])[0] || {}).name;\n    return (\n        <StyledNowPlayingInfo className=\"now-playing-info\">\n            <div className=\"image\">\n                <img src={image} alt={image} />\n            </div>\n            <div className=\"info\">\n                <div className=\"track\"><b>{track}</b></div>\n                <div className=\"playing-artist\">{artist}</div>\n            </div>\n        </StyledNowPlayingInfo>\n    )\n}\n\nexport default NowPlayingInfo;\n\n","import React from 'react';\nimport Styled from 'styled-components';\n\nimport {formatTrackDuration} from './../../utils';\n\nconst StyledTimer = Styled.div`\n    text-align: center;\n    font-size: 13px;\n`\n\nconst Timer = ({count,fixed}) => {\n    return (\n        <StyledTimer className=\"timer\">\n            {formatTrackDuration(fixed ? fixed : count)}\n        </StyledTimer>\n    )\n}\n\nexport default Timer;\n\n","import React, { useState, useEffect } from 'react';\n\nimport Timer from '.';\n\nconst TimerContainer = ({current_state,fixed}) => {\n    const {\n        paused,\n        position,\n        current_track\n    } = current_state;\n\n    let [state, setState] = useState({\n        count : position || 0,\n        current_track\n    });\n\n    // se trocar a musica, zera a contagem\n    if((current_track || {}).id !== (state.current_track || {}).id) {\n        setState({\n            count: 0,\n            current_track : current_track\n        });\n    }\n\n    const timer = (cb) => {\n        const _timer = {\n            start : () => setTimeout(() => {\n                setState({\n                    count : state.count + 1000,\n                    current_track\n                });\n            }, 1000),\n            stop : () => {\n                if((this || {}).start) {\n                    clearTimeout(this.start);\n                }\n            }\n        }\n        _timer[cb]();\n    }\n\n    useEffect(() => {\n        if(!paused && position !== undefined)  {\n            timer('start');\n        } else if(paused){\n            timer('stop');\n        }\n    });\n\n    return (\n        <Timer count={state.count} fixed={fixed} />\n    )\n}\n\nexport default TimerContainer;\n\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport { setCurrentState } from '../../actions';\nimport { set_device_id } from './../../utils';\n\nimport NowPlayingInfo from '../nowPlayingInfo';\nimport TimerContainer from '../timer/timerContainer';\nimport Timer from '../timer';\n\nconst StyledPlayingBar = Styled.div`\n    background-color: #282828;\n    border-top: 1px solid #000;\n    display: grid;\n    grid-template-columns: 20%;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main .\"\n      \"footer footer footer footer\";\n\n    .playing-wrapper {\n        grid-area: sidebar;\n    }\n    .inner-now-playing {\n        grid-area: main;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        .controls-buttons {\n            display: flex;\n            flex-direction: row;\n            justify-content: space-around;\n            align-self: center;\n            width: 150px;\n\n            .control-button {\n                color: #b3b3b3;\n                position: relative;\n                width: 32px;\n                min-width: 32px;\n                height: 32px;\n\n                &.play {\n                    border: 1px solid #b3b3b3;\n                    border-radius: 32px;\n                }\n\n                svg {\n                    position: relative;\n                    top: -3px;\n                    left: -3px;\n                    height: 15px;\n                    width: 15px;\n                }\n            }\n        }\n\n        .playback-bar {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            width: 45%;\n            max-width: 722px;\n            align-self: center;\n            align-items: center;\n\n            .playback-progress-bar {\n                width: 100%;\n                margin: 0 10px;\n\n                .progress-bar-inner {\n                    background-color: #b3b3b3;\n                    border-radius: 2px;\n                    height: 4px;\n                    width: 100%;\n                }\n            }\n        }\n    }\n`\n\nclass NowPlaying extends React.Component {\n    componentDidUpdate() {\n        if(\n            this.props.player &&\n            this.props.player.addListener &&\n            !this.connected\n        ) this.configurePlayer(this.props.player);\n    }\n\n    onChange(state) {\n        this.props.setCurrentState(state);\n    }\n\n    /**\n     * Configure spotify player listeners\n     * @function configurePlayer\n     * @param player Spotify Player Instance\n     * @return {Void}\n     */\n    configurePlayer(player) {\n        if(!player) return;\n        // player -> instancia do spotify player\n        player.addListener('ready', ({device_id}) => set_device_id(device_id));\n        // update status - action\n        player.addListener('player_state_changed', this.onChange.bind(this));\n        // player connected\n        player.connect();\n        // connected\n        this.connected = true;\n    }\n\n    togglePlayButton() {\n        const { paused } = this.props.current_state;\n        if(paused === undefined || paused) {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button play\"\n                    onClick={() => {\n                        this.props.player.resume()\n                    }}\n                >\n                    <i className=\"fas fa-play\"></i>\n                </button>\n            )\n        } else {\n            return (\n                <button className=\"btn btn-outline-secondary control-button play\" onClick={this.props.player.pause}>\n                    <i className=\"fas fa-pause\" onClick={this.props.player.pause}></i>\n                </button>\n            )\n        }\n    }\n\n    render() {\n        const {\n            player,\n            current_state\n        } = this.props;\n        const { current_track } = current_state;\n        return(\n            <StyledPlayingBar className=\"now-playing\">\n                <div className=\"playing-wrapper\">\n                    <NowPlayingInfo current_track={current_track} />\n                </div>\n                <div className=\"inner-now-playing\">\n                    <div className=\"controls-buttons\">\n                        <button className=\"btn control-button\" onClick={() => {player.previous(this.teste)}}>\n                            <i className=\"fas fa-backward\"></i>\n                        </button>\n                        {this.togglePlayButton()}\n                        <button className=\"btn control-button\" onClick={player.next}>\n                            <i className=\"fas fa-forward\"></i>\n                        </button>\n                    </div>\n                    <div className=\"playback-bar\">\n                        <TimerContainer current_state={current_state} />\n                        <div className=\"playback-progress-bar\">\n                            <div className=\"progress-bar-inner\"></div>\n                        </div>\n                        {\n                            (current_track || {}).duration_ms && <Timer fixed={(current_track || {}).duration_ms} />\n                        }\n                    </div>\n                </div>\n            </StyledPlayingBar>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        device_id: state.device_id,\n        player : state.player,\n        current_state : state.current_state\n    };\n};\n\nexport default connect(mapStateToProps, { setCurrentState })(NowPlaying);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Styled from 'styled-components';\n\nimport {\n    logout,\n    getUser,\n    getPlaylists,\n    setView,\n    getPlayer,\n    getRecentlyTracks\n} from \"../../actions\";\n\nimport View from \"../view\";\nimport Login from \"../login\";\nimport Menu from \"../menu\";\nimport NowPlayingBar from \"../nowPlayingBar\";\n\nconst StyledMain = Styled.div`\n    display: grid;\n    grid-template-columns: 14vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main main main main\"\n      \"footer footer footer footer footer footer\";\n    overflow: hidden;\n    font-family: \"Lato\";\n    color: #F5F5F5;\n    overflow: none;\n\n    a {\n        color: #F5F5F5;\n    }\n\n    .github {\n        position: absolute;\n        top:0;\n        right:0;\n        z-index:1000;\n        width:120px;\n        img {\n            width: 120px;\n            height: 120px;\n        }\n    }\n\n    .search {\n        padding: 8px 69px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n        }\n    }\n\n\n    .menu-wrapper, .browser-wrapper {\n        position: relative;\n        overflow-x: hidden;\n        overflow-y: auto;\n        height: 92vh;\n\n        &::-webkit-scrollbar {\n            width: 1em;\n        }\n        &::-webkit-scrollbar-thumb {\n            min-height: 30px;\n            max-height: none;\n            background: hsla(0,0%,100%,.3);\n        }\n    }\n\n    .menu-wrapper {\n        grid-area: sidebar;\n        background: #000;\n        justify-content: stretch;\n        &::-webkit-scrollbar {\n            background: #000;\n        }\n    }\n\n    .browser-wrapper {\n        grid-area: main;\n        background: rgb(2,0,36);\n        background: linear-gradient(0deg, rgba(28,28,28,1) 0%, rgba(28,28,28,1) 70%, rgba(87,87,87,1) 100%);\n        background-position: fixed;\n        .browser-inner-wrapper {\n            max-width: 100%;\n            margin-bottom: 1em;\n        }\n    }\n\n    .now-playing-wrapper {\n        position: relative;\n        width: 100%;\n        background-color: #282828;\n        grid-area: footer;\n    }\n`\nclass Main extends React.Component {\n    constructor() {\n        super();\n        this.state ={\n            initiated : false\n        }\n    }\n    /**\n     * Initial configuration\n     * @function run\n     * @return {Void}\n     */\n    run() {\n        this.props.getPlayer();\n        this.setState({\n            initiated : true\n        });\n    }\n    UNSAFE_componentWillUpdate() {\n        !this.state.initiated  && this.props.logged.status === true && this.run();\n    }\n    componentDidMount() {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            // const lastPage = window.localStorage.getItem('last_uri');\n            // this.props.setView(lastPage ? { uri : lastPage } : '');\n            // Seta a primeira view\n            // Force start from home\n            this.props.setView('home');\n            // faz a primeira busca da ultima musica tocada\n            this.props.getRecentlyTracks();\n        };\n    }\n    onSearchChange(ev) {\n        console.log(ev);\n    }\n    render() {\n        const {\n            logged,\n            uri,\n            tracks,\n            getPlaylists,\n            logout,\n            setView,\n            playlists\n        } = this.props;\n\n        if(!logged.status) {\n            return <Login />;\n        } else {\n            return (\n                <StyledMain className=\"main\">\n                    <div className=\"menu-wrapper\">\n                        <Menu\n                            getPlaylists={getPlaylists}\n                            logout={logout}\n                            setView={setView}\n                            playlists={playlists}\n                            uri={uri}\n                        />\n                    </div>\n                    <div className=\"browser-wrapper\">\n                        {/* <a class=\"github\" href=\"https://github.com/kenjikatahira/react-spotify-player\" target=\"_blank\" rel=\"noopener noreferrer\" >\n                            <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149\" class=\"attachment-full size-full\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\n                        </a> */}\n                        <div className=\"browser-inner-wrapper\">\n                            <View\n                                uri={uri}\n                                tracks={tracks}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"now-playing-wrapper\">\n                        <NowPlayingBar />\n                    </div>\n                </StyledMain>\n            );\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        logged: state.logged,\n        playlists: state.playlists,\n        uri: state.uri\n    };\n};\n\nexport default connect(mapStateToProps, {\n    logout,\n    getUser,\n    getPlaylists,\n    setView,\n    getPlayer,\n    getRecentlyTracks\n})(Main);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\n\nimport { isLogged } from './actions';\n\nimport Main from './components/main';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.isLogged();\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <Main></Main>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        logged : state.logged\n    };\n}\n\nexport default connect(mapStateToProps, { isLogged })(App);\n","import React from 'react';\nimport thunk from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport App from './App';\n\nconst store = createStore(\n  reducers,applyMiddleware(\n    thunk\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}