{"version":3,"sources":["assets/Rolling-1.2s-184px.gif","serviceWorker.js","utils/index.js","api/spotify.js","components/login.js","config.js","api/player.js","api/index.js","assets/spotify.js","components/menu.js","components/nowPlayingInfo.js","components/timer/index.js","components/timer/timerContainer.js","components/nowPlayingBar.js","assets/loadingImg.js","components/loading.js","components/tracklist.js","components/tracklistHeader.js","pages/playlist.js","components/grid.js","pages/album.js","components/relatedArtists.js","pages/artist.js","components/userWidget.js","components/topBar.js","pages/search.js","constants.js","pages/gridTemplate.js","components/main.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","getSession","isAuthenticated","access_token","localStorage","getItem","token_type","removeItem","console","log","get_device_id","expires_at","JSON","parse","Date","valueOf","orderList","item","arr","key","indexOf","before","newArr","found","forEach","n","i","includes","push","formatTrackDuration","millis","minutes","Math","floor","seconds","toFixed","get_user","axios","get","headers","get_search","query","type","size","get_featured_playlist","country","get_recently_tracks","get_album","id","uri","split","length","get_artists_albums","get_playlist_cover_image","get_playlist_items","get_a_playlist","get_artist_top_tracks","get_artist","get_related_artists","get_new_releases","StyledLogin","styled","div","process","Login","response","this","props","onLogin","err","Error","className","style","backgroundImage","backgroundSize","clientId","redirectUri","onSuccess","onFailure","scope","href","target","React","Component","previous","lastUri","fetch","method","play","next","pause","resume","a","uris","queue","map","body","stringify","player","Spotify","Player","playerInstance","name","getOAuthToken","callback","getViewRoute","fetchHome","content","fetchBrowse","fetchCountries","fetchSavedSongs","fetchRecentlyTracks","fetchAlbum","fetchPlaylist","fetchArtist","fetchFollowing","fetchSearchTerm","searchTerm","promises","Promise","all","Object","values","artist","data","album","tracks","getTracksImage","track","items","images","searchFactory","entries","value","message","grid","newReleasesFactory","newReleases","recentlyTracks","user","topArtists","featuredPlaylists","factoryRecentlyTracks","ids","albums","filter","factoryPlaylists","playlists","factoryTopArtists","top_artists","_countries","countries","resolves","labels","index","savedTracksFactory","savedTracks","artists","totalDuration","duration","reduce","total","duration_ms","playlistData","playlist","playlistInfo","playlistCover","image","tableFactory","head","header","total_duration","owner","followers","description","public","table","error","artistAlbumsFactory","artistAlbums","_albums","album_type","releaseDate","release_date","replace","label","topTracks","relatedArtists","_singles","albumImage","url","fetchPlaylists","recently","followingFactory","following","getUser","SpotifyLogo","viewBox","fill","d","StyledMenu","Styled","ul","menuItems","icon","aria-hidden","el","Menu","setUri","useState","setPlaylists","useEffect","then","renderList","display_name","data-owner","onClick","rel","StyledNowPlayingInfo","NowPlayingInfo","currentTrack","trackName","albumUri","artistName","artistUri","src","alt","StyledTimer","Timer","count","fixed","TimerContainer","onChangePosition","paused","position","state","setState","timer","cb","start","setTimeout","stop","clearTimeout","undefined","StyledPlayingBar","NowPlaying","barTracking","setBarTracking","shuffle","put","keys","prev","disallows","resuming","width","LoadingImg","gif","StyledLoading","Loading","StyledTracklist","Tracklist","hasLimit","limit","copyright","setLimit","filteredItems","setFilteredItems","getArtistTd","hasImage","renderIcon","ev","stopPropagation","setArtist","setAlbum","placeholder","onChange","toLowerCase","onFilter","StyledHeader","TracklistHeader","isPlaying","setSticky","useInView","threshold","ref","inView","backgroundPosition","dangerouslySetInnerHTML","__html","getDescription","getSongsLenght","tracksDuration","buttonLabel","StyledPlaylist","Playlist","useContext","SpotifyContext","setTopBar","setData","StyledGrid","Grid","onViewPort","entry","dataset","loaded","renderAlbums","as","data-src","backgroundColor","Fragment","Album","StyledRelatedArtists","RelatedArtists","o","StyledArtist","Artist","StyledUserWidget","UserWidget","product","class","role","StyledtopBar","TopBar","sticky","title","onSearch","search","e","persist","blur","onKeyDown","StyledSearch","Search","StyledGridTemplate","GridTemplate","prevUri","useRef","current","usePrev","Pages","createContext","StyledMain","Main","setPlayer","setCurrentTrack","setSearchTerm","getPlayingNow","devices","is_active","actions","device","script","document","createElement","async","appendChild","prevProps","setItem","querySelector","scroll","home","onSpotifyWebPlaybackSDKReady","addListener","device_id","set_device_id","track_window","current_track","connect","term","Provider","renderView","App","isLogged","setIsLogged","expires_in","setSession","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2bb5f7dd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rolling-1.2s-184px.f6b49911.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const setSession = ({access_token,token_type,expires_in}) => {\n    const expires_at = new Date().valueOf() + 3600000;\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('expires_at', expires_at);\n    console.log('setsession')\n}\n\nexport const removeSession = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('expires_at');\n    console.log('removesession')\n}\n\nexport const getSession = () => {\n    if(isAuthenticated()) {\n        return {\n            access_token : localStorage.getItem('access_token'),\n            token_type : localStorage.getItem('token_type')\n        }\n    } else {\n        removeSession();\n        return {}\n    }\n}\n\nexport const set_device_id = (device_id) => {\n    console.log('Ready - Device ID - Localstorage', device_id);\n    localStorage.setItem('device_id', device_id);\n}\n\nexport const get_device_id = () => {\n    return localStorage.getItem('device_id')\n}\n\nexport const isAuthenticated = () => {\n    let expires_at = JSON.parse(localStorage.getItem('expires_at'));\n    return expires_at && new Date().valueOf() < expires_at;\n}\n\nexport const orderList = (item,arr) => {\n    const key = arr.indexOf(item)\n    let before = [],newArr = [], found = false;\n    arr.forEach((n,i) => {\n        if(i === key) found = true;\n        if(!found) {\n            before.push(n);\n        } else {\n            if(!newArr.includes(n)) {\n                newArr.push(n);\n            }\n        }\n    });\n\n    before.forEach(i => {\n        newArr.push(i);\n    });\n\n    return newArr;\n}\n\nexport const formatTrackDuration = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n}\n\nexport const delay = async (time) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve,time);\n    })\n}\n\nexport const label = (uri) => {\n    const dict = {\n        home : 'Home',\n        'recently-played' : 'Recently Played'\n    }\n    return dict[uri]\n}\n","import axios from 'axios';\n\nimport { getSession, get_device_id } from '../utils';\n\n/**\n * Scope to provide the right acess to information\n * @type scope\n */\nexport const scope = 'user-read-private user-library-read user-read-playback-state user-read-playback-position user-modify-playback-state user-top-read user-read-recently-played streaming user-read-email user-follow-read'\n\n/**\n * Basic request with the token provided\n * @function get\n * @param request url\n * @return {Promise}\n */\nexport const get = (url) => {\n    return axios.get(url, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user data\n * @function get_user\n * @return {Promise}\n */\nexport const get_user = () => {\n    return axios.get('https://api.spotify.com/v1/me', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a search results\n * @function get_search\n * @return {Promise}\n */\nexport const get_search = ({query,type,size}) => {\n    size = size ? size : 8;\n    return axios.get(`https://api.spotify.com/v1/search?q=${query}&type=${type}&limit=${size}`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request user's saved tracks\n * @function get_saved_tracks\n * @return {Promise}\n */\nexport const get_saved_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/tracks?limit=30', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the featured playlists from a country\n * @function get_featured_playlist\n * @return {Promise}\n */\nexport const get_featured_playlist = (country='CA') => {\n    return axios.get('https://api.spotify.com/v1/browse/featured-playlists?country='+country+'&limit=8', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const get_current_track = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const set_shuffle = (state) => {\n    return axios.put(`https://api.spotify.com/v1/me/player/shuffle?state=${state}&device_id=${get_device_id()}`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the top artists list\n * @function top_artists\n * @return {Promise}\n */\nexport const top_artists = () => {\n    return axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the recently listened music of the user\n * @function get_recently_tracks\n * @return {Promise}\n */\nexport const get_recently_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Retrieves the devices avaiable\n * @function get_devices\n * @return {Promise}\n */\nexport const get_devices = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/devices', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user's playlists\n * @function get_playlists\n * @return {Promise}\n */\nexport const get_playlists = () => {\n    return axios.get('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a album\n * @function get_album\n * @return {Promise}\n */\nexport const get_album = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/albums/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist's albums\n * @function get_artists_albums\n * @return {Promise}\n */\nexport const get_artists_albums = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/albums`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_cover_image\n * @return {Promise}\n */\nexport const get_playlist_cover_image = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/images`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_items\n * @return {Promise}\n */\nexport const get_playlist_items = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/tracks`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_a_playlist\n * @return {Promise}\n */\nexport const get_a_playlist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/playlists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n/**\n * Request for a get_artist_top_tracks\n * @function get_artist_top_tracks\n * @return {Promise}\n */\nexport const get_artist_top_tracks = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/top-tracks?country=BR`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist\n * @function get_artist\n * @return {Promise}\n */\nexport const get_artist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist related artists\n * @function get_related_artists\n * @return {Promise}\n */\nexport const get_related_artists = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1] + '/related-artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a track\n * @function get_track\n * @return {Promise}\n */\nexport const get_track = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/tracks/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for user's following list\n * @function get_following\n * @return {Promise}\n */\nexport const get_following = () => {\n    return axios.get('https://api.spotify.com/v1/me/following?type=artist&limit=20', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for country's new releases\n * @function get_new_releases\n * @return {Promise}\n */\nexport const get_new_releases = (country='BR') => {\n    return axios.get('https://api.spotify.com/v1/browse/new-releases?country='+country+'&limit=10', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n","import React from 'react';\nimport SpotifyLogin from 'react-spotify-login';\nimport styled from 'styled-components';\nimport { clientId, redirectUri } from '../config';\nimport { scope } from '../api/spotify';\n\nconst StyledLogin = styled.div`\n    @font-face {\n        font-family: 'Cooper Black';\n        src: url(${process.env.PUBLIC_URL}/assets/cooper_black.ttf);\n    }\n    position:relative;\n    display:flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    font-family: \"Cooper Black\";\n    background: rgba(28,28,28);\n    color: #fff;\n    overflow: none;\n    margin:0 auto;\n    width:100%;\n    height: 100vh;\n    text-align: center;\n    background-position: center center;\n\n    .title {\n        padding: 20px;\n        font-size: 2em;\n        p {\n            font-size: 22px;\n        }\n    }\n\n    .btn {\n        border: 1px solid #ffffff;\n        font-size: 17px;\n        color: #ffffff;\n    }\n\n    footer {\n        position: absolute;\n        bottom: 10px;\n        right: 15px;\n        font-family: 'helvetica';\n        font-size: 11px;\n        opacity: 0.7;\n        a {\n            color :#fff;\n        }\n    }\n`\n\nclass Login extends React.Component {\n    onSuccess(response) {\n        this.props.onLogin(response);\n    }\n    onFailure(err) {\n        throw new Error(err);\n    }\n    render() {\n        return (\n            <StyledLogin className=\"login\" style={{backgroundImage : `url('${process.env.PUBLIC_URL}/assets/unsplash.jpg')`, backgroundSize : 'cover'}}>\n                <div className=\"login-button container\">\n                    <SpotifyLogin\n                        className=\"btn\"\n                        clientId={clientId}\n                        redirectUri={redirectUri}\n                        onSuccess={(response) => { this.onSuccess(response) }}\n                        onFailure={this.onFailure}\n                        scope={scope}\n                    />\n                </div>\n                <footer>\n                    <span>Photo by <a href=\"https://unsplash.com/@simonweisser?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" target=\"_blank\">Simon Weisser</a> on <a href=\"https://unsplash.com/s/photos/music?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText\" target=\"_blank\">Unsplash</a></span>\n                </footer>\n            </StyledLogin>\n        )\n    }\n}\n\nexport default Login\n","export const clientId = '38a9d82012ce4dcc81269de4479a74fa';\nexport const clientSecret  = '31cafd8a23394dbfa3bc848199a97bfd';\nexport const redirectUri = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://kenjikatahira.github.io/react-spotify-player/';\n","import { orderList, getSession, get_device_id } from \"../utils\";\n\nconst init = () => {\n    console.log('____init___');\n    const player = new window.Spotify.Player({\n        playerInstance: new window.Spotify.Player({ name: 'Kenjicas Player' }),\n        name: 'Kenjicas Player',\n        getOAuthToken: callback => callback(getSession().access_token)\n    });\n\n    player.play = play;\n    player.next = next;\n    player.previous = previous;\n    player.pause = pause;\n    player.resume = resume;\n\n    return player;\n}\n\nconst previous = (lastUri) => {\n    try {\n        fetch('https://api.spotify.com/v1/me/player/previous',{\n            method : 'POST',\n            headers : {\n                'content-type' : 'application/json',\n                'authorization' : `${getSession().token_type} ${getSession().access_token}`\n            }\n        });\n    } catch(err) {\n        play({uri : lastUri})\n    }\n\n}\n\nconst next = () => {\n    fetch('https://api.spotify.com/v1/me/player/next',{\n        method : 'POST',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst pause = () => {\n    fetch('https://api.spotify.com/v1/me/player/pause',{\n        method : 'PUT',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst resume = async () => {\n   fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n       method: 'PUT',\n       headers: {\n           'Content-Type': 'application/json',\n           'Authorization': `Bearer ${getSession().access_token}`\n       }\n   });\n}\n\nconst play = async ({uri,uris}) => {\n    let queue = orderList(uri,(uris || []).map(({uri}) => uri));\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris : queue.length ? queue : [uri] }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\nexport default {\n    init\n}\n","import {\n    formatTrackDuration\n} from '../utils';\n\nimport {\n    get_featured_playlist,\n    get_saved_tracks,\n    get_recently_tracks,\n    get_a_playlist,\n    top_artists,\n    get_album,\n    get_playlist_items,\n    get_artist,\n    get_related_artists,\n    get_artists_albums,\n    get_playlist_cover_image,\n    get_artist_top_tracks,\n    get_playlists,\n    get_user,\n    get_following,\n    get_new_releases,\n    get_search\n} from './spotify';\n\n/**\n * Get the data for the route\n *\n * @function getViewRoute\n * @return {Object} data for the view\n */\nexport const getViewRoute = async ({uri}) => {\n    let content;\n    if(uri === 'home') {\n        content = await fetchHome();\n    } else if(uri === 'browse') {\n        content = await fetchBrowse({uri});\n    } else if(uri === 'featured-playlists-countries') {\n        content = await fetchCountries();\n    } else if(uri === 'liked-songs') {\n        content = await fetchSavedSongs();\n    } else if(uri === 'recently-played') {\n        content = await fetchRecentlyTracks();\n    } else if(uri.indexOf('spotify:album') >= 0) {\n        content = await fetchAlbum(uri);\n    } else if(uri.indexOf('spotify:playlist') >= 0) {\n        content = await fetchPlaylist(uri);\n    } else if(uri.indexOf('spotify:artist') >= 0) {\n        content = await fetchArtist(uri);\n    } else if(uri === 'artists-list') {\n        content = await fetchFollowing(uri)\n    }\n    return content;\n}\n\n/**\n * Retrieves data based on search term\n *\n * @function fetchSearchTerm\n * @return {Object} grid layout with artist,album and track suggestions\n */\nexport const fetchSearchTerm = async ({searchTerm}) => {\n    try {\n        const promises = [\n            get_search({query: searchTerm,type:'artist',size: 4}),\n            get_search({query: searchTerm,type:'album'}),\n            get_search({query: searchTerm,type:'track',size: 4})\n        ];\n\n        const [\n            {data:artist},\n            {data:album},\n            {data:tracks}\n        ] = await Promise.all(Object.values(promises));\n\n        const getTracksImage = (track) => {\n            track.items.forEach(item => {\n                item.images = item.album.images;\n            })\n        }\n\n        Object.values(tracks).forEach(getTracksImage)\n\n        const searchFactory = (response) => {\n            let n;\n            Object.entries(response).forEach(([key,value]) => {\n                n = {\n                    message : key,\n                    items : value.items\n                }\n            });\n            return n;\n        }\n\n\n        return {\n            type : 'search',\n            grid : {\n                tracks : searchFactory(tracks),\n                artist : searchFactory(artist),\n                album : searchFactory(album),\n            }\n        }\n\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n/**\n * Retrieves browse list\n *\n * @function fetchBrowse\n * @return {Void}\n */\nexport const fetchBrowse = async ({uri,country}) => {\n    try {\n        const promises = [get_new_releases(country)];\n        let [{data}] = await Promise.all(Object.values(promises));\n\n        data = Object.values(data)[0];\n\n        const newReleasesFactory = (response) => {\n            return {\n                type : uri,\n                message : 'New Releases',\n                items : response.items\n            }\n        }\n        return {\n            type : 'browse',\n            grid : {\n                newReleases : newReleasesFactory(data)\n            }\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n/**\n * Retrieves home data\n *\n * @function fetchHome\n * @return {Void}\n */\nexport const fetchHome = async () => {\n    try {\n        const promises = [get_recently_tracks(),get_user(),top_artists()];\n        const [ { data : recentlyTracks }, { data : user }, { data : topArtists } ] = await Promise.all(Object.values(promises));\n        const { data : featuredPlaylists } = await get_featured_playlist(user.country);\n        /**\n         * Model array of recently tracks to albums for the homepage view\n         *\n         * @function factoryRecentlyTracks\n         * @return {Void}\n         */\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (response) => {\n            return {\n                message : response.message,\n                items : response.playlists.items,\n                type : 'playlists'\n            }\n        }\n        /**\n         * Model user's top artists response for the homepage view\n         *\n         * @function factoryTopArtists\n         * @return {Void}\n         */\n        const factoryTopArtists = (response) => {\n            return {\n                message : 'Top Artists',\n                items : response.items,\n                type : 'top-artists'\n            };\n        }\n\n        return {\n            type : 'home',\n            grid : {\n                featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                top_artists : factoryTopArtists(topArtists),\n                recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n            }\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n/**\n * Retrieves countries playlists data\n *\n * @function fetchCountries\n * @return {Void}\n */\nexport const fetchCountries = async () => {\n    try {\n        let _countries = ['NZ','CH','CA','US','IT','FR','JP','RU','IS'];\n        let countries = ['NZ','CH','CA','US','IT','FR','JP','RU','IS'];\n\n        countries = countries.map(async (country) => await get_featured_playlist(country));\n\n        const resolves = await Promise.all(countries)\n\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (resolves) => {\n            const labels = {\n                'BR' : 'Brasil',\n                'CH' : 'Chile',\n                'CA' : 'Canada',\n                'US' : 'United States',\n                'RU' : 'Russia',\n                'IT' : 'Italy',\n                'JP' : 'Japan',\n                'NZ' : 'New Zealand'\n            }\n            return resolves.map(({data},index) => {\n                return {\n                    message :`${data.message} ${labels[_countries[index]] ? ' - ' + labels[_countries[index]] : ''}`,\n                    items : data.playlists.items,\n                    type : 'playlists'\n                }\n            })\n        }\n\n        return {\n            type : 'home',\n            grid : factoryPlaylists(resolves)\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n\n/**\n * Retrieves user's saved tracks\n *\n * @function fetchSavedSongs\n * @return {Void}\n */\nexport const fetchSavedSongs = async() => {\n    try {\n        const { data } = await get_saved_tracks();\n        /**\n         * Model array of recently tracks to albums for the saved tracks\n         *\n         * @function savedTracksFactory\n         * @return {Void}\n         */\n        const savedTracksFactory = (response) => {\n            let tracks = response.items.map(item => item.track);\n\n            tracks = tracks.map(item => {\n                return {\n                    images : item.album.images,\n                    name : item.name,\n                    uri : item.uri,\n                    album : {\n                        uri : item.album.uri\n                    },\n                    artists : item.artists\n                };\n            });\n\n            return {\n                savedTracks : {\n                    message : 'Saved Tracks',\n                    type : 'saved-tracks',\n                    items : tracks\n                }\n            }\n        }\n\n        return {\n            grid : savedTracksFactory(data)\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n\n}\n\n/**\n * Calculate a album or tracklist duration\n *\n * @function totalDuration\n * @return {String} Formated duration\n */\nconst totalDuration = (tracks) => {\n    if(!tracks) return false;\n    let initialValue = 0;\n    const duration = tracks.reduce((total,{duration_ms}) => total + duration_ms,initialValue);\n\n    return formatTrackDuration(Math.floor(duration / 60));\n}\n\n/**\n * Retrieves a playlist\n *\n * @function fetchPlaylist\n * @return {Object} playlist's data\n */\nconst fetchPlaylist = async (uri) => {\n    try {\n        let playlistData = {};\n        const promises = {\n            playlist : get_playlist_items({uri}),\n            playlistInfo : get_a_playlist({uri}),\n            playlistCover : get_playlist_cover_image({uri}),\n        }\n        const [ playlist, playlistInfo, playlistCover ] = await Promise.all(Object.values(promises));\n\n        const [image] = playlistCover.data;\n\n        playlistData.tracks = playlist.data.items.map((i) => i.track).filter((i) => i);\n\n        const tableFactory = (data) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    album : i.album,\n                    artists : i.artists,\n                    uri : i.uri,\n                }\n            }\n            return {\n                head :  ['name','artist','album','duration'],\n                body  : data.tracks.map(trackModel)\n            }\n        }\n\n        return {\n            type : 'playlist',\n            header : {\n                type : 'playlist',\n                name : playlistInfo.data.name,\n                image: image,\n                tracks : tableFactory(playlistData).body,\n                total_duration : totalDuration(playlistData.tracks),\n                owner : playlistInfo.data.owner,\n                followers : playlistInfo.data.followers.total,\n                description : playlistInfo.data.description,\n                public : playlistInfo.data.public\n            },\n            table : tableFactory(playlistData)\n        }\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves a album\n *\n * @function fetchAlbum\n * @return {Object} album's data\n */\nconst fetchAlbum = async (uri) => {\n    try {\n        const {data: album} = await get_album({uri});\n        const { data : albums } = await get_artists_albums({uri : album.artists[0].uri});\n\n        const [image] = album.images;\n\n        const tableFactory = (album) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    uri : i.uri,\n                    artists : i.artists\n                }\n            }\n            return {\n                head :  ['name','artist','duration'],\n                body  : album.tracks.items.map(trackModel)\n            }\n        }\n\n        const artistAlbumsFactory = (albums) => {\n            const ids = [];\n            const artistAlbums = {}\n\n            const _albums = {\n                message : 'More by ' + album.artists[0].name,\n                type : 'artist',\n                items : albums.items.filter((i , index) => {\n                    // Remove repeated albums and itself from the list . Limited by four albums only\n                    if(!ids.includes(i.name) && i.album_type === 'album' && i.id !== album.id && index <= 4) {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            if(_albums.items.length) {\n                artistAlbums._albums = _albums;\n            }\n\n            return artistAlbums;\n        }\n\n        return {\n            type: 'album',\n            releaseDate : album.release_date.replace(/(\\d{4})-\\d{2}-\\d{2}/g,'$1'),\n            label : album.label,\n            header : {\n                type : 'album',\n                artists : album.artists,\n                name : album.name,\n                image : image,\n                tracks : tableFactory(album).body,\n                total_duration : totalDuration(album.tracks.items),\n                releaseDate : album.release_date.replace(/(\\d{4})-\\d{2}-\\d{2}/g,'$1')\n            },\n            table : tableFactory(album),\n            grid : artistAlbumsFactory(albums)\n        };\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves a artist\n *\n * @function fetchArtist\n * @return {Object} artist's data\n */\nconst fetchArtist = async (uri) => {\n    try {\n        let artist = {};\n        const { data } = await get_artist({uri});\n        const { data : topTracks } = await get_artist_top_tracks({uri});\n        const { data : albums } = await get_artists_albums({uri});\n        const { data : relatedArtists } = await get_related_artists({uri});\n\n        const [image] = data.images;\n\n        if(!artist.tracks) {\n            artist.tracks = topTracks.tracks;\n        }\n\n        const artistAlbumsFactory = (albums) => {\n            const ids = [];\n            const artistAlbums = {}\n\n            const _albums = {\n                message : 'Albums',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'album') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            const _singles = {\n                message : 'Singles',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'single') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            if(_albums.items.length) {\n                artistAlbums._albums = _albums;\n            }\n            if(_singles.items.length) {\n                artistAlbums._singles = _singles;\n            }\n\n            return artistAlbums;\n        }\n\n        const tableFactory = (artist) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    uri : i.uri,\n                    albumImage : i.album.images[2].url\n                }\n            }\n            return {\n                head :  ['Popular'],\n                body  : artist.tracks.map(trackModel)\n            }\n        }\n\n        return {\n            type : 'artist',\n            header : {\n                type : 'artist',\n                name : data.name,\n                image : image,\n                tracks : tableFactory(artist).body\n            },\n            table : tableFactory(artist),\n            grid : artistAlbumsFactory(albums),\n            relatedArtists : relatedArtists\n        };\n\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves user's playlists\n *\n * @function fetchPlaylists\n * @return {Object} Playlists\n */\nexport const fetchPlaylists = async () => {\n    try {\n        const { data } = await get_playlists();\n        return data;\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Model array of recently tracks to albums for the homepage view\n *\n * @function fetchRecentlyTracks\n * @return {Void}\n */\nexport const fetchRecentlyTracks = async () => {\n    try {\n        const { data } = await get_recently_tracks();\n\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n\n        return {\n            grid : {\n                recently : factoryRecentlyTracks(data)\n            }\n        };\n\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n\n/**\n * Retrieves user's followings\n *\n * @function fetchFollowing\n * @return {Object} User info\n */\nexport const fetchFollowing = async (uri) => {\n    try {\n        const { data } = await get_following(uri);\n\n        const followingFactory = (response) => {\n            const data = Object.values(response)[0];\n            return {\n                following : {\n                    type : uri,\n                    message : 'Your Artists',\n                    items : data.items\n                }\n            }\n        }\n\n        return {\n            grid : followingFactory(data)\n        }\n    } catch(e) {\n        console.error(e)\n    }\n}\n\n/**\n * Retrieves user's info\n *\n * @function getUser\n * @return {Object} User info\n */\nexport const getUser = async () => {\n    try {\n        const { data } = await get_user();\n        return data;\n    } catch(e) {\n        console.error(e)\n    }\n}\n","import React from 'react';\n\nconst SpotifyLogo = (props) => (\n    <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo\"><path fill=\"currentColor\" d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"></path></svg>\n)\n\nexport default SpotifyLogo;\n","import React,{ useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nimport { fetchPlaylists } from './../api';\n\nimport SpotifyLogo from './../assets/spotify';\n\nconst StyledMenu = Styled.ul`\n    list-style: none;\n    padding: 15px;\n    white-space: nowrap;\n    color : #B3B3B3;\n    margin-bottom: 0;\n\n    .logo-wrapper {\n        display:flex;\n        flex-direction: row;\n        justify-content: space-between;\n\n        .spotify-logo {\n            width:120px;\n            padding-right: 0;\n            padding-left:5px;\n            display:inline-block;\n            color:#fff;\n            align-self: center;\n        }\n\n        .made {\n            padding: 10px 0;\n            margin-left: 5px;\n            align-self: center;\n            font-size: 12px;\n            text-align: center;\n        }\n    }\n\n    .fixed-pages {\n        position: sticky;\n\n        li {\n            padding: 0;\n            margin-bottom: 15px;\n            font-size: 13px;\n            font-weight: 700;\n            svg {\n                margin-right: 10px;\n                font-weight: 500;\n            }\n        }\n    }\n\n    hr   {\n        display: block;\n        unicode-bidi: isolate;\n        margin-block-start: 0.9em;\n        margin-block-end: 0.9em;\n        margin-inline-start: auto;\n        margin-inline-end: auto;\n        background: #282828;\n    }\n\n    li {\n        position:relative;\n        padding: 0;\n        cursor: pointer;\n        font-size: 11px;\n        font-weight: 800;\n        margin-bottom: 8px;\n\n        &.lead {\n            margin-bottom: 0;\n            font-size: 14px;\n            font-weight: 100;\n            text-transform: uppercase;\n            margin-bottom: 10px;\n        }\n\n        &.active:before {\n            content : \"\";\n            border-left: 3px solid #1db954;\n            position: absolute;\n            height: 17px;\n            left: -14px;\n            top: 0;\n        }\n\n        &:hover:after {\n                content: attr(data-owner);\n                position: relative;\n                height:10px;\n                left: 0px;\n                color: #ccc;\n                white-space: nowrap;\n        }\n    }\n`\n\n// Menu de itens fixos\nlet  menuItems = [\n    {\n        name: \"Home\",\n        uri: \"home\",\n        icon: <i key=\"home\" className=\"fas fa-home\">home</i>,\n    },\n    {\n        name: \"Browse\",\n        uri: \"browse\",\n        icon: <i key=\"browse\" className=\"fa fa-folder-open\" aria-hidden=\"true\"></i>,\n    },\n    {\n        el: <li key=\"your-library\" className=\"lead\"> Your Library </li>\n    },\n    {\n        name: \"Recently Played\",\n        uri: \"recently-played\"\n    },\n    {\n        name: \"Countries\",\n        uri: \"featured-playlists-countries\"\n    },\n    {\n        name: \"Liked Songs\",\n        uri: \"liked-songs\"\n    },\n    {\n        name: \"Artists\",\n        uri: \"artists-list\"\n    },\n    {\n        el: <hr key=\"sep\" className=\"separator\"></hr>\n    },\n    {\n        el: <li key=\"lead-playlists\" className=\"lead\"> Playlists </li>\n    }\n];\n\nconst Menu = ({uri, setUri}) => {\n    const [playlists,setPlaylists] = useState(null)\n\n    useEffect(() => {\n        if(!playlists) {\n            fetchPlaylists()\n                .then(setPlaylists);\n        }\n    },[playlists]);\n\n    const renderList = (item,index) => {\n        const display_name = ((item || {}).owner || {}).display_name\n        if(item.el) {\n            return item.el;\n        } else {\n            return (\n                <li\n                    key={item.uri+'#'+index}\n                    className={uri === item.uri ? \"active\" : \"\"}\n                    data-owner={display_name ? ` * by ${display_name}`: \"\" }\n                    id={item.uri}\n                    onClick={() => setUri(item.uri)}\n                >\n                    {item.icon ? item.icon : ''} {item.name}\n                </li>\n            );\n        }\n    }\n    if(((playlists || {}).items || []).length) {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <SpotifyLogo />\n                    <span className=\"made\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kenjikatahira/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n                <div className=\"playlists-wrapper\">\n                    {playlists.items.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    } else {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <SpotifyLogo />\n                    <span className=\"made\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kenjikatahira/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    }\n}\n\nMenu.propTypes = {\n    uri : PropTypes.string,\n    setUri : PropTypes.func\n}\n\nexport default Menu;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledNowPlayingInfo = Styled.div`\n    display: grid;\n    grid-template-columns: 18%;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main\";\n\n    text-align: center;\n    font-size: 11px;\n    height:8vh;\n\n    .image {\n        align-self: center;\n        img {\n            height:7vh;\n            padding: 6px;\n        }\n    }\n\n    .info {\n        align-self: center;\n        justify-self: start;\n        text-align: left;\n        .playing-artist {\n            color: #999;\n        }\n        .track {\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            width:100%;\n        }\n        .playing-artist,.track {\n            cursor: pointer;\n            margin-bottom: 2px;\n            &:last-child {\n                margin-bottom: 0;\n            }\n        }\n    }\n`\n\nconst NowPlayingInfo = ({currentTrack,setUri}) => {\n    const image = ((((currentTrack || {}).album || {}).images || [])[0] || {}).url;\n    const { name: trackName } = (currentTrack || {});\n    const { uri: albumUri } = ((currentTrack || {}).album || {});\n    const { name: artistName, uri: artistUri } = (((currentTrack || {}).artists || [])[0] || {});\n    return (\n        <StyledNowPlayingInfo className=\"now-playing-info\">\n            <div className=\"image\">\n                <img src={image} alt={image} />\n            </div>\n            <div className=\"info\">\n                <div className=\"track\" onClick={() => setUri(albumUri)}><b>{trackName}</b></div>\n                <div className=\"playing-artist\" onClick={() => setUri(artistUri)}>{artistName}</div>\n            </div>\n        </StyledNowPlayingInfo>\n    )\n}\n\nNowPlayingInfo.propTypes = {\n    currentTrack : PropTypes.object\n}\n\nexport default NowPlayingInfo;\n\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {formatTrackDuration} from './../../utils';\n\nconst StyledTimer = Styled.div`\n    text-align: center;\n    font-size: 13px;\n`\n\nconst Timer = ({count,fixed}) => {\n    return (\n        <StyledTimer className=\"timer\">\n            {formatTrackDuration(fixed ? fixed : count)}\n        </StyledTimer>\n    )\n}\n\nTimer.propTypes = {\n    count : PropTypes.number,\n    fixed : PropTypes.number\n}\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from '.';\n\nconst TimerContainer = ({currentTrack,fixed,onChangePosition}) => {\n    const {\n        paused,\n        position\n    } = currentTrack;\n\n    let [state, setState] = useState({\n        count : position || 0,\n        currentTrack\n    });\n\n    // se trocar a musica, zera a contagem\n    if((currentTrack || {}).id !== (state.currentTrack || {}).id) {\n        setState({\n            count: 0,\n            currentTrack : currentTrack\n        });\n    }\n\n    const timer = (cb) => {\n        const _timer = {\n            start : () => setTimeout(() => {\n                setState({\n                    count : state.count + 1000,\n                    currentTrack\n                });\n                onChangePosition(state.count);\n            }, 1000),\n            stop : () => {\n                if((this || {}).start) {\n                    clearTimeout(this.start);\n                }\n            }\n        }\n        _timer[cb]();\n    }\n\n    useEffect(() => {\n        if(!paused && position !== undefined)  {\n            timer('start');\n        } else if(paused){\n            timer('stop');\n        }\n    });\n\n    return (\n        <Timer count={state.count} fixed={fixed} />\n    )\n}\n\nTimerContainer.propTypes = {\n    currentTrack : PropTypes.object,\n    fixed : PropTypes.string,\n    onChangePosition : PropTypes.func\n}\n\nexport default TimerContainer;\n\n","import React, { useState } from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { set_shuffle } from './../api/spotify';\n\nimport NowPlayingInfo from './nowPlayingInfo';\nimport TimerContainer from './timer/timerContainer';\nimport Timer from './timer';\n\nconst StyledPlayingBar = Styled.div`\n    background-color: #282828;\n    border-top: 1px solid #000;\n    display: grid;\n    grid-template-columns: 20%;\n    grid-template-rows: auto;\n    grid-template-areas:\n        \"sidebar sidebar main main . rightbar\"\n        \"footer footer footer footer footer footer\";\n\n    .playing-wrapper {\n        grid-area: sidebar;\n    }\n\n    .controls-buttons {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        align-self: center;\n        width: 150px;\n        margin-bottom: 8px;\n\n        &.right {\n            grid-area: rightbar;\n            width: 100%;\n            display:flex;\n            justify-content: flex-end;\n            align-items: center;\n            padding-right:20px;\n            margin-bottom: 0;\n        }\n\n        .control-button {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: #b3b3b3;\n            position: relative;\n            width: 32px;\n            min-width: 32px;\n            height: 32px;\n\n            &.play,&.pause {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                border: none;\n                border-radius: 32px;\n                svg {\n                    position: relative;\n                }\n                &:hover {\n                    background: none;\n                }\n            }\n        }\n    }\n\n    .inner-now-playing {\n        grid-area: main;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        .playback-bar {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            width: 80%;\n            max-width: 722px;\n            align-self: center;\n            align-items: center;\n                position: relative;\n\n            .timer-label {\n                position:absolute;\n                &:first-child {\n                    left: -30px;\n                }\n                &:last-child {\n                    right: -30px;\n                }\n            }\n\n            .playback-progress-bar {\n                width: 100%;\n                margin: 0 10px;\n                background-color:#1a1a1a;\n\n                .progress-bar-inner {\n                    background-color: #b3b3b3;\n                    border-radius: 2px;\n                    height: 4px;\n                    width: 0;\n                }\n            }\n        }\n    }\n`\n\nconst NowPlaying = ({player, currentTrack, setUri}) => {\n\n    const [barTracking,setBarTracking] = useState(0);\n\n    const togglePlayButton =() => {\n        if(((currentTrack || {}).disallows || {}).resuming) {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button pause\"\n                    onClick={player.pause}\n                >\n                    <FontAwesomeIcon icon=\"pause\" />\n                </button>\n            )\n        } else {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button play\"\n                    onClick={() => {\n                        player.resume()\n                    }}\n                >\n                    <FontAwesomeIcon icon=\"play\" />\n                </button>\n            )\n        }\n    }\n\n    const onChangePosition = (position) => setBarTracking(Math.floor(100*position/(currentTrack || {}).duration_ms))\n\n    const shuffle = () => {\n        set_shuffle(true).then(data => {\n            console.log('shuffle',data)\n        });\n    }\n\n    if(Object.keys((player || {})).length === 0 && (currentTrack || {})) return (<div className=\"now-playing\"></div>)\n    return(\n        <StyledPlayingBar className=\"now-playing\">\n            <div className=\"playing-wrapper\">\n                <NowPlayingInfo currentTrack={currentTrack} setUri={setUri} />\n            </div>\n            <div className=\"inner-now-playing\">\n                <div className=\"controls-buttons\">\n                    <button className=\"btn control-button\" onClick={player.prev}>\n                        <FontAwesomeIcon icon=\"backward\" />\n                    </button>\n                    {togglePlayButton()}\n                    <button className=\"btn control-button\" onClick={player.next}>\n                        <FontAwesomeIcon icon=\"forward\" />\n                    </button>\n                </div>\n                <div className=\"playback-bar\">\n                    <span className=\"timer-label\"><TimerContainer currentTrack={currentTrack || {}} onChangePosition={onChangePosition} /></span>\n                    <div className=\"playback-progress-bar\">\n                        <div className=\"progress-bar-inner\" style={{width: barTracking+'%'}}></div>\n                    </div>\n                    <span className=\"timer-label\">\n                    {\n                        (currentTrack || {}).duration_ms && <Timer fixed={(currentTrack || {}).duration_ms} />\n                    }\n                    </span>\n                </div>\n            </div>\n            <div className=\"controls-buttons right\">\n                {/* <button className=\"btn control-button\" onClick={player.prev}>\n                    <FontAwesomeIcon icon=\"microphone\" />\n                </button> */}\n                <button className=\"btn control-button\" onClick={() => shuffle()}>\n                    <FontAwesomeIcon icon=\"random\" />\n                </button>\n                {/* <button className=\"btn control-button\" onClick={player.next}>\n                    <FontAwesomeIcon icon=\"redo-alt\" />\n                </button> */}\n            </div>\n        </StyledPlayingBar>\n    )\n}\n\nNowPlaying.propTypes = {\n    player : PropTypes.object,\n    currentTrack : PropTypes.object\n}\n\n\nexport default NowPlaying;\n\n","import React from 'react';\nimport gif from './Rolling-1.2s-184px.gif';\n\nconst LoadingImg = () => (\n    <img src={gif} alt=\"loading\" />\n)\n\nexport default LoadingImg;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport LoadingImg from './../assets/loadingImg';\n\nconst StyledLoading = Styled.div`\n    position: relative;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    font-size: 28px;\n    height: 92vh;\n    img {\n        width: 90px;\n    }\n`\n\nconst Loading = () => {\n    return (\n        <StyledLoading>\n            <div className=\"loading\">\n                <LoadingImg />\n            </div>\n        </StyledLoading>\n    )\n}\n\nexport default Loading;\n","import React,{ useState } from \"react\";\nimport Styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PropTypes from 'prop-types';\n\nconst StyledTracklist = Styled.div`\n    width: 90%;\n    margin: 0 auto;\n    margin-bottom: 20px;\n    .filter {\n        padding: 3px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n            background: inherit;\n            border-style: none;\n            color: #f5f5f5;\n        }\n    }\n    .toggleShow {\n        font-size: 13px;\n        padding: 15px;\n        padding-left: 0;\n        background: none;\n        border: none;\n        color: #fff;\n    }\n    .copyright {\n        margin: 15px 0;\n        color: #aaa;\n    }\n    table {\n        list-style: none;\n        margin: 0;\n        padding: 10px;\n        color: #f5f5f5;\n\n        th {\n            color: #d1d1d1;\n            font-size: 12px;\n            text-transform: uppercase;\n            border-top: none;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            &:fist-child {\n                width: 30px;\n            }\n        }\n\n        tr {\n            &:not(.header):hover td {\n                background: rgba(255, 255, 255, 0.1);\n\n                .top-number {\n                    visibility: hidden;\n                }\n            }\n        }\n\n        td {\n            font-size: 13px;\n            vertical-align: middle;\n\n            &:nth-child(1) {\n                width: 20px;\n            }\n            &:last-child {\n                width: 80px;\n                text-align: center;\n            }\n        }\n\n        tr,\n        td {\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            cursor: pointer;\n            padding: 8px;\n            white-space: nowrap;\n            max-width: 220px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n\n            &:hover {\n                .action {\n                    visibility: visible;\n                }\n            }\n\n            &.has-image {\n                height:40px;\n                padding: 1px 0;\n\n                .list-image {\n                    width: 40px;\n                    margin-right: 15px;\n                }\n\n                .top-number {\n                    visibility: visible;\n                }\n\n                span {\n                    vertical-align: middle;\n                    svg {\n                        position: relative;\n                        top: 2px;\n                        right: 10px;\n                    }\n                }\n            }\n\n            .top-number {\n                visibility: hidden;\n            }\n\n            .action {\n                border: 1px solid #fff;\n                padding: 5px;\n                width: 20px;\n                height: 20px;\n                border-radius: 100%;\n                visibility: hidden;\n\n                &.selected {\n                    visibility: visible;\n                }\n            }\n\n            span.link:hover {\n                border-bottom: 1px solid #fff;\n            }\n        }\n    }\n`\n\nconst Tracklist = ({table,player,limit : hasLimit,setUri, copyright,currentTrack}) => {\n    const [limit,setLimit] = useState(hasLimit || null);\n    const [filteredItems,setFilteredItems] = useState([]);\n\n    const setArtist = ({ artist, total, index }) => {\n        const { id, uri, name } = artist;\n        return (\n            <span\n                key={id+'#'+index}\n                onClick={(ev) => {\n                    ev.stopPropagation();\n                    setUri(uri);\n                }}\n            >\n                {total > 1 && index !== total - 1 ? `${name}, ` : name}\n            </span>\n        );\n    }\n\n    const setAlbum = (ev,item) => {\n        ev.stopPropagation();\n        setUri(item.album.uri);\n    }\n\n    const renderIcon = (uri='',hasImage) => {\n        if(uri === (currentTrack || {}).uri) {\n            return <FontAwesomeIcon className={hasImage ? 'action' : 'action selected'} icon=\"pause\" />\n        } else{\n            return <FontAwesomeIcon className=\"action\" icon=\"play\" />\n        }\n    }\n\n    const getArtistTd = ({albumImage,name},index) => {\n        if(!albumImage) return;\n        return (\n            <>\n                <span>\n                    <img className=\"list-image\" src={albumImage} alt={name} />\n                </span>\n                <span className=\"top-number\">{index+1}</span>\n            </>\n        )\n    }\n\n    const renderList = (item,index) => {\n        return (\n            <tr\n                key={item.id+'#'+index}\n                onClick={() => {\n                    player.play({\n                        uri: item.uri,\n                        uris: table.body\n                    });\n                }}\n            >\n                <td className={item.albumImage ? 'has-image' : ''}>\n                    <span>{getArtistTd(item,index)}</span>\n                    <span>\n                        {renderIcon(item.uri,!!item.albumImage)}\n                    </span>\n                </td>\n                {\n                    item.name &&\n                    <td>\n                        <span>{item.name}</span>\n                    </td>\n                }\n                {\n                    item.artists &&\n                    <td>\n                        <span className=\"link\">{item.artists && Object.values(item.artists).map((artist, index) => setArtist({ artist,total: (item.artists || []).length, index }))}</span>\n                    </td>\n                }\n                {\n                    item.album &&\n                    <td>\n                        <span className=\"link\" onClick={(ev) => setAlbum(ev,item)}> {item.album.name} </span>\n                    </td>\n                }\n                {\n                item.duration_ms &&\n                <td>\n                    <span> {item.duration_ms} </span>\n                </td>\n                }\n            </tr>\n        );\n    }\n\n    const onFilter = (ev) => {\n        setFilteredItems(table.body.filter(({name}) => name.toLowerCase().replace('ã','a').indexOf(ev.target.value.toLowerCase()) > -1 ))\n    }\n\n    const showMore = () =>{\n        setLimit(+limit === 5 ? 10 : 5);\n    }\n\n    return (\n        <StyledTracklist className=\"tracklist\">\n            <div className=\"filter\">\n                <input type=\"text\" placeholder=\"Filter\" onChange={(ev) => { onFilter(ev) }} />\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr className=\"header\">\n                        <th scope=\"col\"></th>\n                        {table.head.map(i => (<th key={i}>{i}</th>))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {((filteredItems || []).length > 0 ? filteredItems : table.body).map((i,index) => {\n                        if((limit)) {\n                            return (index < +limit) && renderList(i,index);\n                        } else {\n                            return renderList(i,index);\n                        }\n                    })}\n                </tbody>\n            </table>\n            { limit && <button className=\"toggleShow\" onClick={showMore}>show {+limit === 5 ? 'more' : 'less' }</button>}\n            { copyright && <div className=\"copyright\">{copyright}</div>}\n        </StyledTracklist>\n    );\n}\n\nTracklist.propTypes = {\n    table : PropTypes.object,\n    limit : PropTypes.string,\n    setUri : PropTypes.func,\n    copyright : PropTypes.string,\n    currentTrack : PropTypes.object\n}\n\nexport default Tracklist;\n","import React, { useEffect } from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { useInView } from 'react-intersection-observer';\n\nconst StyledHeader = Styled.div`\n    display: flex;\n    width: 90%;\n    margin: 0 auto;\n    margin-bottom: 15px;\n    align-items: center;\n    .artwork-wrapper {\n        overflow: auto;\n        width: 260px;\n        .artwork {\n            width: 100%;\n            padding-bottom: 100%;\n        }\n    }\n\n    .info {\n        align-self: flex-end;\n        padding: 0 25px;\n        p { margin: 0; }\n        .info-type {\n            position: relative;\n            top: 5px;\n            text-transform: uppercase;\n            font-weight: 500;\n            font-size: 15px;\n        }\n        .info-name {\n            font-size: 48px;\n            line-height: 60px;\n            padding: 0.1em 0px;\n            font-weight: 600;\n            margin-bottom: 0;\n        }\n        .info-description {\n            max-width: 500px;\n        }\n        .info-details {\n            padding: 1px 0px 13px;\n            color:#aaa;\n            font-size: 12px;\n        }\n        .info-tracks {\n            margin-right: 4px;\n        }\n        .info-owner {\n            font-size: 14px;\n            strong { color:#fff; }\n            &:after {\n                content: \"•\";\n                margin: 0px 4px;\n            }\n        }\n        .info-release-date {\n            &:after {\n                content: \"•\";\n                margin: 0px 4px;\n            }\n        }\n        .info-artist {\n            display: block;\n            strong { color:#fff; }\n            &:after {\n                padding: 0 6px;\n            }\n        }\n    }\n\n    .info-interactive {\n        .play,.pause {\n            cursor: pointer;\n            background: #1DB954;\n            border-radius: 15px;\n            font-size: 11px;\n            letter-spacing: 2px;\n            font-weight: bold;\n            width: 106px;\n            padding: 4px;\n            text-align: center;\n        }\n    }\n`\n\nconst TracklistHeader = ({player,header,isPlaying, setSticky}) => {\n    const [ ref, inView, entry ] = useInView({\n        threshold: 0.8\n    });\n\n    const getDescription = (description) => {\n        return (\n            <>\n                <div dangerouslySetInnerHTML={{__html: description }} />\n            </>\n        )\n    }\n\n    const tracksDuration = (total_duration) => {\n        return (\n            <span className=\"info-duration\">\n                {`- ${total_duration} hrs`}\n            </span>\n        )\n    }\n\n    const getSongsLenght = (tracks) => {\n        return (\n            <span className=\"info-tracks\">\n                {`${(tracks || []).length} songs`}\n            </span>\n        )\n    }\n\n    const releaseDate = (releaseDate) => <span className=\"info-release-date\">{releaseDate}</span>\n\n    const {\n        tracks,\n        image,\n        name,\n        description,\n        owner,\n        total_duration,\n        type\n    } = header;\n\n    const buttonLabel = (isPlaying) => {\n        if(!isPlaying) {\n            return (\n                <div className=\"play\" onClick={ () => { player.play({uris : (tracks || []) })}}> PLAY </div>\n            )\n        } else {\n            return (\n                <div className=\"pause\" onClick={ () => { player.pause({uris : (tracks || []) })}}> PAUSE </div>\n            )\n        }\n    }\n\n    useEffect(()=>{\n        setSticky(!inView);\n    },[inView])\n\n    return (\n        <StyledHeader className=\"tracklist-header\">\n            {(image && image.url &&\n                <div className=\"artwork-wrapper\">\n                    <div className=\"artwork\" ref={ref} style={\n                        { backgroundImage: `url(${image.url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }></div>\n                </div>\n            )}\n            <div className=\"col info d-flex flex-column\">\n                <strong className=\"info-type\">{type}</strong>\n                <h3 className=\"info-name\">{name}</h3>\n                    {getDescription(description)}\n                <div className=\"info-details\">\n                    {\n                        (owner || {}).display_name && (\n                            <span className=\"info-owner\">\n                                Created by <strong>{(owner || {}).display_name}</strong>\n                            </span>\n                        )\n                    }\n                    {\n                        (type === 'album' && header.artists.length) && (\n                            <span className=\"info-artist\">\n                                By <strong>{(header.artists || [])[0].name}</strong>\n                            </span>\n                        )\n                    }\n                    { type === 'album' && releaseDate((header || {}).releaseDate)}\n                    { type !== 'artist' && getSongsLenght(tracks) }\n                    { type !== 'artist' && total_duration && tracksDuration(total_duration) }\n                </div>\n                <div className=\"info-interactive\">\n                    {buttonLabel(isPlaying)}\n                </div>\n            </div>\n        </StyledHeader>\n    )\n}\n\nTracklistHeader.propTypes = {\n    player : PropTypes.object,\n    header : PropTypes.object\n}\n\nexport default TracklistHeader\n","import React, {useState,useEffect,useContext} from \"react\";\nimport Styled from 'styled-components';\n\nimport { getViewRoute } from './../api';\nimport { SpotifyContext } from \"../components/main\";\n\nimport Loading from \"./../components/loading\";\nimport Tracklist from \"./../components/tracklist\";\nimport TracklistHeader from './../components/tracklistHeader';\n\nconst StyledPlaylist = Styled.div`\n`\n\nconst Playlist = () => {\n    const {uri,setUri,player,setTopBar,currentTrack,setSticky} = useContext(SpotifyContext);\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri,setTopBar]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const { table, header } = data;\n        return (\n            <StyledPlaylist className=\"playlist\">\n                <TracklistHeader\n                    player={player}\n                    header={header}\n                    isPlaying={((currentTrack || {}).disallows || {}).resuming}\n                    setSticky={setSticky}\n                />\n                <Tracklist\n                    table={table}\n                    setUri={setUri}\n                    player={player}\n                    currentTrack={currentTrack}\n                />\n            </StyledPlaylist>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nexport default Playlist;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\nimport { InView } from 'react-intersection-observer';\n\nconst StyledGrid = Styled.div`\n    width:90%;\n    margin:0 auto;\n\n    h2 {\n        margin: 26px 15px;\n        border-bottom: 1px solid #ffffff1a;\n        padding-bottom: 17px;\n    }\n\n    .albums-row {\n        display: flex;\n        flex-direction: row;\n        flex-flow: row wrap;\n        width: 100%;\n        padding: 10px 0;\n        margin-bottom: 25px;\n        padding: 10px;\n        overflow: auto;\n        max-width: 100%;\n        .album {\n            position: relative;\n            padding-right: 20px;\n            padding-left: 20px;\n            cursor: pointer;\n            .image {\n                width: 100%;\n                padding-bottom: 100%;\n            }\n            .card-title {\n                font-size: 14px;\n            }\n            .card-body {\n                padding: 10px 0;\n            }\n            .card-body .card-text {\n                display : block;\n                font-weight: bold;\n                font-size:13px;\n                padding: 0;\n                margin: 0;\n            }\n            .overlay {\n                position: absolute;\n                bottom:0;\n                left:0;\n                right:0;\n                display: flex;\n                flex-direction: row;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                margin-bottom:50%;\n            }\n            &:hover .overlay {\n                opacity: 1;\n            }\n        }\n    }\n`\n\nconst Grid = ({grid, player, setUri}) => {\n    const onViewPort = (inView, entry) => {\n        if(inView) {\n            const el = entry.target;\n            let { src, loaded } = el.dataset;\n            if(!loaded) {\n                el.style.backgroundImage = `url(${src})`\n                entry.target.dataset.loaded = true;\n            }\n        }\n    }\n\n    const renderAlbums = ({images,uri,id,name,artists}) => {\n        return (\n            <div className=\"album col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={id}>\n                <InView className=\"image\"\n                    as=\"div\" data-src={(images || {}).length && images[0].url} onChange={onViewPort}\n                    onClick={() => {\n                        if(uri.indexOf('spotify:track') !== -1) {\n                            player.play({uri})\n                        } else {\n                            setUri(uri)\n                        }\n                     }}\n                    style={\n                        { backgroundColor:'#212121', backgroundSize :'cover', backgroundPosition:'center center' }\n                    }\n                >\n                </InView>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{ artists && artists[0].name}</p>\n                    <p className=\"card-title\">{name}</p>\n                </div>\n            </div>\n        )\n    }\n\n    const renderRow = ({message,type,items}) => {\n        if(items) {\n            return (\n                <React.Fragment key={message}>\n                    <h2> {message} </h2>\n                    <div className=\"albums-row\" key={type}>\n                        {items.map(renderAlbums)}\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n\n    return (\n        <StyledGrid className=\"grid\">\n            {Object.values((grid || {})).map(renderRow)}\n        </StyledGrid>\n    );\n}\n\nGrid.propTypes = {\n    grid : PropTypes.object,\n    player : PropTypes.object,\n    setUri : PropTypes.func\n}\n\nexport default Grid;\n","import React, { useState, useEffect, useContext } from \"react\";\n\nimport { getViewRoute } from './../api';\nimport { SpotifyContext } from \"../components/main\";\n\nimport TracklistHeader from \"./../components/tracklistHeader\";\nimport Tracklist from \"./../components/tracklist\";\nimport Loading from \"../components/loading\";\nimport Grid from \"../components/grid\";\n\nconst Album = () => {\n    const {uri,player,setUri,setTopBar, currentTrack,setSticky} = useContext(SpotifyContext);\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri,setTopBar]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const {table,header,label,releaseDate,grid} = data;\n        return (\n            <div className=\"album\">\n                <TracklistHeader\n                    player={player}\n                    header={header}\n                    isPlaying={((currentTrack || {}).disallows || {}).resuming}\n                    setSticky={setSticky}\n                />\n                <Tracklist\n                    table={table}\n                    setUri={setUri}\n                    player={player}\n                    copyright={`© ${releaseDate} ${label}`}\n                    currentTrack={currentTrack}\n                />\n                <Grid grid={grid} setUri={setUri} player={player} />\n            </div>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nexport default Album;\n","import React from \"react\";\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledRelatedArtists = Styled.div`\n    padding: 15px 0;\n    ul {\n        padding: 0;\n        li {\n            display: flex;\n            flex-direction: row;\n            align-items : center;\n            list-style:none;\n            height: 44px;\n            cursor: pointer;\n            font-size: 12px;\n            .image {\n                height:30px;\n                width: 30px;\n                border-radius: 50%;\n            }\n            .name {\n                padding-left: 10px;\n            }\n        }\n    }\n`\n\nconst RelatedArtists = ({setUri, relatedArtists}) => {\n    const renderArtist = (artist) => {\n        return (\n            <li\n                key={artist.id}\n                onClick={() => setUri(artist.uri)}\n            >\n                <div\n                    className=\"image\"\n                    style={\n                        { backgroundImage: `url(${artist.images[2].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }\n                >\n                </div>\n                <div className=\"name\">\n                    {artist.name}\n                </div>\n            </li>\n        )\n    }\n    return (\n        <StyledRelatedArtists className=\"relatedArtists\">\n            <h4>Fans Also Like</h4>\n            <ul>\n                {relatedArtists.artists.filter((o,index) => index < 6).map(renderArtist)}\n            </ul>\n        </StyledRelatedArtists>\n    )\n}\n\nRelatedArtists.propTypes = {\n    setUri : PropTypes.func,\n    relatedArtists : PropTypes.object\n}\n\nexport default RelatedArtists;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport Styled from 'styled-components';\nimport { getViewRoute } from './../api';\n\nimport { SpotifyContext } from \"../components/main\";\nimport TracklistHeader from \"./../components/tracklistHeader\";\nimport RelatedArtists from \"./../components/relatedArtists\";\nimport Tracklist from \"./../components/tracklist\";\nimport Grid from \"./../components/grid\";\nimport Loading from \"../components/loading\";\n\n\nconst StyledArtist = Styled.div`\n    padding: 20px 0;\n    .container {\n        margin-left: 20px;\n    }\n    .artist-top-related {\n        display: grid;\n        grid-template-columns: 14vw;\n        grid-template-rows: auto;\n        grid-template-areas:\n          \"topTracks topTracks topTracks topTracks topTracks related\";\n    }\n    .tracklist {\n        grid-area : topTracks;\n        padding: 15px 32px;\n    }\n    .related-artists {\n        grid-area : related;\n        padding: 0 5px 24px;\n    }\n`\n\nconst Artist = () => {\n    const { uri, setUri, player, setTopBar, currentTrack, setSticky } = useContext(SpotifyContext)\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri,setTopBar]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const { table, header, relatedArtists, grid } = data;\n        return (\n            <StyledArtist className=\"artist\">\n                <TracklistHeader\n                    header={header}\n                    player={player}\n                    isPlaying={((currentTrack || {}).disallows || {}).resuming}\n                    setSticky={setSticky}\n                />\n                <div className=\"artist-top-related\">\n                    <Tracklist\n                        table={table}\n                        limit=\"5\"\n                        player={player}\n                        setUri={setUri}\n                        currentTrack={currentTrack}\n                    />\n                    <RelatedArtists relatedArtists={relatedArtists} setUri={setUri} />\n                </div>\n                <Grid grid={grid} setUri={setUri} player={player} />\n            </StyledArtist>\n        );\n    } else {\n        return (\n            <Loading />\n        )\n    }\n}\n\nexport default Artist;\n","import React, { useState, useEffect } from \"react\";\nimport Styled from 'styled-components';\nimport { getUser } from '../api';\n\nconst StyledUserWidget = Styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    grid-area : user;\n\n    .avatar {\n        margin-right: 10px;\n        img {\n            border-radius: 50%;\n            width: 28px;\n        }\n    }\n\n    .user {\n        font-size: 15px;\n        line-height: 25px;\n    }\n`\n\nconst UserWidget = () => {\n    const [data,setData] = useState(null);\n    const getImage = () => {\n        if(data.images.length) {\n            return <img src={data.images[0].url} alt=\"userimage\" />\n        } else {\n            return ''\n        }\n    }\n\n    const setAlert = () => {\n        return (\n            <div class=\"alert alert-danger\" role=\"alert\">\n                You need a premium account to play the songs. =(\n            </div>\n        )\n    }\n\n    useEffect(() => {\n        if(!data) {\n            getUser()\n                .then(setData);\n        }\n    },[data]);\n\n    if(!data) { return <div></div> }\n    return (\n        <StyledUserWidget className=\"user-widget\">\n            {data.product !== 'premium' && setAlert()}\n            <div className=\"avatar\">\n                {getImage()}\n            </div>\n            <div className=\"user\">\n                {data.display_name}\n            </div>\n        </StyledUserWidget>\n    )\n}\n\nexport default UserWidget;\n","import React from \"react\";\nimport Styled from 'styled-components';\nimport UserWidget from \"./userWidget\";\nimport PropTypes from 'prop-types';\n\n\nconst StyledtopBar = Styled.div`\n    width:100%;\n    height:60px;\n    display: grid;\n    grid-template-columns: 14vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"search . . . user\"\n      \"additional-bar additional-bar additional-bar additional-bar additional-bar\";\n    position: sticky;\n    top: 0;\n    align-items: center;\n    z-index: 30;\n\n    .search {\n        width: 176px;\n        height: 24px;\n        border-radius: 27px;\n        background: inherit;\n        border-style: none;\n        background-color: #f5f5f5;\n        margin: 16px 20px;\n        z-index: 999;\n    }\n\n    .user-widget {\n        padding: 16px 20px;\n        z-index: 999;\n    }\n\n    .additional-bar {\n        width: 100%;\n        opacity : 0;\n        grid-area: additional-bar;\n        height: 0;\n        border-bottom: 1px solid #333;\n        transition: .3s;\n        padding: 10px 21px;\n        font-weight: bold;\n    }\n\n    &.sticky {\n        background:#111;\n        animation: mushroom-bottom .4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        .additional-bar {\n            opacity: 1;\n            background: #111;\n            height: auto;\n\n            h2 {\n                animation: fade-in .4s cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.4s both;\n            }\n        }\n    }\n\n`\n\nconst TopBar = ({sticky,title,setUri,onSearch}) => {\n    const search = (e) => {\n        e.persist();\n        if (e.key === 'Enter') {\n            setUri('search');\n            onSearch(e.target.value);\n            e.target.value = '';\n            e.target.blur();\n        }\n    }\n\n    const renderContent = () => {\n        return (\n            <>\n                <input onKeyDown={search} className=\"search\" type=\"search\"></input>\n                <UserWidget />\n                <div className=\"additional-bar\">\n                    <h2>{title}</h2>\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <>\n        <StyledtopBar className={sticky ? 'top-bar sticky' : 'top-bar'}>\n            {renderContent()}\n        </StyledtopBar>\n        </>\n    )\n}\n\nTopBar.propTypes = {\n    title : PropTypes.string\n}\n\nexport default TopBar;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport Styled from 'styled-components';\n\nimport { fetchSearchTerm } from '../api';\nimport Grid from \"../components/grid\";\nimport { SpotifyContext } from \"../components/main\";\n\nimport Loading from \"./../components/loading\";\n\nconst StyledSearch = Styled.div`\n`\n\nconst Search = () => {\n    const { searchTerm, setUri, uri, player } = useContext(SpotifyContext);\n    const [data,setData] = useState(null);\n    useEffect(() => {\n        if(searchTerm && searchTerm !== '') {\n            fetchSearchTerm({searchTerm}).then(data => {\n                setData(data);\n            });\n        }\n    },[searchTerm]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        return (\n            <StyledSearch className=\"search\">\n                <Grid grid={(data || {}).grid} player={player} setUri={setUri} />\n            </StyledSearch>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nexport default Search;\n","export default {\n    \"home\" : {\n        \"title\" : \"Home\"\n    },\n    \"browse\" : {\n        \"title\" : \"Browse\"\n    },\n    \"recently-played\" : {\n        \"title\" : \"Recently Played\"\n    },\n    \"Countries\" : {\n        \"title\" : \"Countries Featured Playlists\"\n    },\n    \"liked-songs\" : {\n        \"title\" : \"Liked Songs\"\n    },\n    \"artists-list\" : {\n        \"title\" : \"Artists\"\n    },\n    \"featured-playlists-countries\" : {\n        \"title\" : \"Featured Playlists\"\n    }\n}\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\nimport Styled from 'styled-components';\nimport { getViewRoute } from '../api';\nimport { SpotifyContext } from \"../components/main\";\n\nimport Pages from '../constants';\nimport Grid from \"../components/grid\";\n\nconst StyledGridTemplate = Styled.div`\n    width: 90%;\n    margin: 0 auto;\n`\n\nconst usePrev = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n        ref.current = value;\n    });\n    return ref.current;\n}\nconst GridTemplate = () => {\n    const {player, setUri, uri, setTopBar} = useContext(SpotifyContext);\n    const [data, setData] = useState(null);\n    const prevUri = usePrev(uri);\n\n    useEffect(() => {\n        if(uri !== prevUri) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar((Pages[uri] || {}).title || uri)\n        }\n    },[uri,prevUri,setTopBar]);\n\n    return (\n        <StyledGridTemplate className={uri}>\n            <Grid grid={(data || {}).grid} player={player} setUri={setUri} />\n        </StyledGridTemplate>\n    )\n}\nexport default GridTemplate;\n","import React, {useState, useEffect} from \"react\";\nimport Styled from 'styled-components';\nimport { label, set_device_id } from './../utils';\nimport Player from './../api/player';\nimport { get_current_track,get_devices } from './../api/spotify';\n\nimport Menu from './menu';\nimport NowPlayingBar from './nowPlayingBar';\nimport Playlist from \"../pages/playlist\";\nimport Album from \"../pages/album\";\nimport Artist from \"../pages/artist\";\nimport TopBar from \"./topBar\";\nimport Search from \"../pages/search\";\nimport Grid from \"../pages/gridTemplate\";\n\nexport const SpotifyContext = React.createContext();\n\nconst StyledMain = Styled.div`\n    display: grid;\n    grid-template-columns: 15vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main main main main\"\n      \"footer footer footer footer footer footer\"\n      \"devicesBar devicesBar devicesBar devicesBar devicesBar devicesBar\";\n    overflow: hidden;\n    font-family: \"Montserrat\";\n    color: #F5F5F5;\n    overflow: none;\n\n    a {\n        color: #F5F5F5;\n    }\n\n    .github {\n        position: absolute;\n        top:0;\n        right:0;\n        z-index:1000;\n        width:120px;\n        img {\n            width: 120px;\n            height: 120px;\n        }\n    }\n\n    .search {\n        padding: 0 8px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n        }\n    }\n\n    .menu-wrapper, .browser-wrapper {\n        position: relative;\n        overflow-x: hidden;\n        overflow-y: auto;\n        height: 82vh;\n        background-repeat: no-repeat;\n        background-attachment: local;\n\n        &::-webkit-scrollbar {\n            width: 1em;\n            background-color: hsla(0,0%,100%,.3);\n        }\n        &::-webkit-scrollbar-thumb {\n            min-height: 30px;\n            max-height: none;\n            background-color: hsla(0,0%,100%,.3);\n        }\n    }\n\n    .menu-wrapper {\n        grid-area: sidebar;\n        justify-content: stretch;\n        &::-webkit-scrollbar {\n            background: #212121;\n        }\n    }\n\n    .browser-wrapper {\n        grid-area: main;\n        background: #202020;\n        /* background: linear-gradient(0deg, #0c0c0c 0%, #0c0c0c 40%, #212121 100%); */\n        .browser-inner-wrapper {\n            max-width: 100%;\n            margin-bottom: 1em;\n        }\n    }\n\n    .now-playing-wrapper {\n        position: relative;\n        width: 100%;\n        background-color: #282828;\n        grid-area: footer;\n    }\n\n    .devices-bar-wrapper {\n        grid-area: devicesBar;\n    }\n`\n\nconst Main = () => {\n    const [player,setPlayer] = useState(null);\n    const [uri,setUri] = useState(localStorage.getItem('lastUri') || 'home');\n    const [currentTrack,setCurrentTrack] = useState(null);\n    const [title,setTopBar] = useState(null);\n    const [sticky,setSticky] = useState(false);\n    const [searchTerm,setSearchTerm] = useState(null);\n\n    const getPlayingNow = () => {\n        get_devices().then((response) => {\n            let { devices } = response.data;\n            [devices] = devices.filter(i => i.is_active);\n            get_current_track().then(({data}) => {\n                if(data) {\n                    const { actions : { disallows }} = data;\n                    if((data || {}).item) {\n                        setCurrentTrack({...data.item, device: devices, disallows });\n                    }\n                }\n            });\n        })\n    }\n\n    // init - adds the sdk spotify player lib\n    useEffect(() => {\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n        document.body.appendChild(script);\n        getPlayingNow();\n    }, [])\n\n    const onChangeUri = (prevProps) => {\n        setUri(uri);\n\n        localStorage.setItem('lastUri',uri);\n        document.querySelector('.browser-wrapper').scroll(0,0);\n\n        if(\n            uri.indexOf('playlist') === -1 &&\n            uri.indexOf('album') === -1 &&\n            uri.indexOf('artist') === -1\n        ) {\n            setTopBar(\n                label(uri)\n            );\n        }\n\n        return () => {\n            setUri(null);\n        }\n    }\n\n    // uri\n    useEffect(onChangeUri, [uri])\n\n    // player\n    useEffect(() => {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            setPlayer(Player.init());\n        };\n\n        if(player) {\n            const onReady = ({device_id}) => {\n                set_device_id(device_id);\n            }\n            const onChanged = (state) => {\n                if(state && state.track_window) {\n                    setCurrentTrack({...state.track_window.current_track, ...state})\n                } else {\n                    console.log(state)\n                }\n            }\n            player.addListener('ready', onReady);\n            player.addListener('player_state_changed', onChanged);\n            player.connect();\n        }\n    },[player])\n\n\n\n    const renderView = () => {\n        if(uri) {\n            if(uri.indexOf('spotify:playlist') !== -1) {\n                return <Playlist />\n            } else if(uri.indexOf('spotify:album') !== -1) {\n                return <Album />\n            } else if(uri.indexOf('spotify:artist') !== -1) {\n                return <Artist />\n            } else if(uri.indexOf('search') !== -1) {\n                return <Search />\n            } else {\n                return <Grid />\n            }\n        }\n    }\n\n    const onSearch = term => setSearchTerm(term);\n\n    return (\n        <StyledMain className=\"main\">\n            <div className=\"menu-wrapper\">\n                <Menu\n                    setUri={setUri}\n                    uri={uri}\n                />\n            </div>\n            <div\n                className=\"browser-wrapper\"\n            >\n                <TopBar title={title} setUri={setUri} onSearch={onSearch} sticky={sticky} />\n                <SpotifyContext.Provider\n                    value={{uri,setUri,setTopBar,player,currentTrack,searchTerm,setSticky}}\n                >\n                    {renderView()}\n                </SpotifyContext.Provider>\n            </div>\n            <div className=\"now-playing-wrapper\">\n                <NowPlayingBar currentTrack={currentTrack} setUri={setUri} player={player} />\n            </div>\n        </StyledMain>\n    );\n}\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\n\nimport { setSession,getSession } from './utils';\n\nimport Login from './components/login';\nimport Main from './components/main';\n\nconst App = () => {\n    const [isLogged,setIsLogged] = useState(false);\n\n    // init\n    useEffect(() => {\n        if(getSession().access_token) {\n            setIsLogged(true);\n        }\n    }, [])\n\n    const onLogin = (response) => {\n        setSession(response);\n        setIsLogged(response.access_token ? true : false)\n    }\n\n    const renderView = () => {\n        if(isLogged) {\n            return (\n                <Main />\n            )\n        } else {\n            return (\n                <Login onLogin={onLogin}/>\n            )\n        }\n    }\n\n    return (\n        <div className={isLogged ? 'app' : 'app login'}>\n            {renderView()}\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}