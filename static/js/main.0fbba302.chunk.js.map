{"version":3,"sources":["assets/Rolling-1.2s-184px.gif","serviceWorker.js","utils/index.js","api/spotify.js","components/login.js","config.js","api/player.js","api/index.js","assets/spotify.js","components/menu.js","components/nowPlayingInfo.js","components/timer/index.js","components/timer/timerContainer.js","components/nowPlayingBar.js","components/grid.js","pages/home.js","assets/loadingImg.js","components/loading.js","components/tracklist.js","components/tracklistHeader.js","pages/playlist.js","pages/album.js","components/relatedArtists.js","pages/artist.js","components/userWidget.js","components/topBar.js","pages/recentlyPlayed.js","components/main.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","getSession","isAuthenticated","access_token","localStorage","getItem","token_type","removeItem","console","log","get_device_id","expires_at","JSON","parse","Date","valueOf","orderList","item","arr","key","indexOf","before","newArr","found","forEach","n","i","includes","push","formatTrackDuration","millis","minutes","Math","floor","seconds","toFixed","get_recently_tracks","axios","get","headers","get_album","id","uri","split","length","get_artists_albums","get_playlist_cover_image","get_playlist_items","get_a_playlist","get_artist_top_tracks","get_artist","get_related_artists","StyledLogin","styled","div","process","Login","response","this","props","onLogin","err","Error","style","backgroundImage","backgroundSize","className","clientId","redirectUri","onSuccess","onFailure","scope","React","Component","previous","lastUri","fetch","method","play","next","pause","resume","a","uris","queue","map","body","stringify","player","Spotify","Player","playerInstance","name","getOAuthToken","callback","getViewRoute","getHome","content","getRecentlyTracks","fetchAlbum","fetchPlaylist","fetchArtist","promises","Promise","all","Object","values","recentlyTracks","data","featuredPlaylists","topArtists","factoryRecentlyTracks","ids","albums","items","track","album","filter","href","message","type","factoryPlaylists","playlists","factoryTopArtists","grid","top_artists","totalDuration","tracks","duration","reduce","total","duration_ms","playlistData","playlist","playlistInfo","playlistCover","image","tableFactory","head","artists","header","total_duration","owner","followers","description","public","table","error","images","release_date","replace","releaseDate","label","artist","topTracks","relatedArtists","artistAlbumsFactory","artistAlbums","_albums","album_type","_singles","getPlaylists","recently","getUser","SpotifyLogo","viewBox","fill","d","StyledMenu","Styled","ul","menuItems","icon","aria-hidden","el","Menu","setUri","useState","setPlaylists","useEffect","then","renderList","index","display_name","data-owner","onClick","target","rel","StyledNowPlayingInfo","NowPlayingInfo","currentTrack","url","src","alt","StyledTimer","Timer","count","fixed","TimerContainer","onChangePosition","paused","position","state","setState","timer","cb","start","setTimeout","stop","clearTimeout","undefined","StyledPlayingBar","NowPlaying","barTracking","setBarTracking","keys","prev","disallows","resuming","width","StyledGrid","Grid","renderAlbums","backgroundPosition","Fragment","StyledHome","Home","setData","LoadingImg","gif","StyledLoading","Loading","StyledTracklist","Tracklist","hasLimit","limit","copyright","setLimit","filteredItems","setFilteredItems","renderIcon","ev","stopPropagation","setArtist","setAlbum","placeholder","onChange","toLowerCase","value","onFilter","StyledHeader","TracklistHeader","dangerouslySetInnerHTML","__html","getDescription","getSongsLenght","tracksDuration","StyledPlaylist","Playlist","setTopBar","Album","StyledRelatedArtists","RelatedArtists","o","StyledArtist","Artist","StyledUserWidget","UserWidget","StyledtopBar","TopBar","scroll","title","renderContent","backgroundColor","StyledRecentlyPlayed","RecentlyPlayed","StyledMain","Main","setPlayer","setCurrentTrack","setScroll","script","document","createElement","async","appendChild","setItem","home","onSpotifyWebPlaybackSDKReady","addListener","device_id","set_device_id","track_window","current_track","connect","onScroll","e","scrollTop","renderView","App","isLogged","setIsLogged","expires_in","setSession","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0fbba302.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rolling-1.2s-184px.f6b49911.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const setSession = ({access_token,token_type,expires_in}) => {\n    const expires_at = new Date().valueOf() + 3600000;\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('expires_at', expires_at);\n    console.log('setsession')\n}\n\nexport const removeSession = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('expires_at');\n    console.log('removesession')\n}\n\nexport const getSession = () => {\n    if(isAuthenticated()) {\n        return {\n            access_token : localStorage.getItem('access_token'),\n            token_type : localStorage.getItem('token_type')\n        }\n    } else {\n        removeSession();\n        return {}\n    }\n}\n\nexport const set_device_id = (device_id) => {\n    console.log('Ready - Device ID - Localstorage', device_id);\n    localStorage.setItem('device_id', device_id);\n}\n\nexport const get_device_id = () => {\n    return localStorage.getItem('device_id')\n}\n\nexport const isAuthenticated = () => {\n    let expires_at = JSON.parse(localStorage.getItem('expires_at'));\n    return expires_at && new Date().valueOf() < expires_at;\n}\n\nexport const orderList = (item,arr) => {\n    const key = arr.indexOf(item)\n    let before = [],newArr = [], found = false;\n    arr.forEach((n,i) => {\n        if(i === key) found = true;\n        if(!found) {\n            before.push(n);\n        } else {\n            if(!newArr.includes(n)) {\n                newArr.push(n);\n            }\n        }\n    });\n\n    before.forEach(i => {\n        newArr.push(i);\n    });\n\n    return newArr;\n}\n\nexport const formatTrackDuration = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n}\n\nexport const delay = async (time) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve,time);\n    })\n}\n\nexport const label = (uri) => {\n    const dict = {\n        home : 'Home',\n        'recently-played' : 'Recently Played'\n    }\n    return dict[uri]\n}\n","import axios from 'axios';\n\nimport { getSession } from '../utils';\n\n/**\n * Scope to provide the right acess to information\n * @type scope\n */\nexport const scope = 'user-read-private user-library-read user-read-playback-state user-read-playback-position user-modify-playback-state user-top-read user-read-recently-played streaming user-read-email'\n\n/**\n * Basic request with the token provided\n * @function get\n * @param request url\n * @return {Promise}\n */\nexport const get = (url) => {\n    return axios.get(url, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user data\n * @function get_user\n * @return {Promise}\n */\nexport const get_user = () => {\n    return axios.get('https://api.spotify.com/v1/me', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request user's saved tracks\n * @function get_saved_tracks\n * @return {Promise}\n */\nexport const get_saved_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/tracks?limit=30', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the featured playlists from a country\n * @function get_featured_playlist\n * @return {Promise}\n */\nexport const get_featured_playlist = () => {\n    return axios.get('https://api.spotify.com/v1/browse/featured-playlists?country=BR&limit=4', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const get_current_track = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the top artists list\n * @function top_artists\n * @return {Promise}\n */\nexport const top_artists = () => {\n    return axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the recently listened music of the user\n * @function get_recently_tracks\n * @return {Promise}\n */\nexport const get_recently_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Retrieves the devices avaiable\n * @function get_devices\n * @return {Promise}\n */\nexport const get_devices = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/devices', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user's playlists\n * @function get_playlists\n * @return {Promise}\n */\nexport const get_playlists = () => {\n    return axios.get('https://api.spotify.com/v1/me/playlists?limit=20&offset=0', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a album\n * @function get_album\n * @return {Promise}\n */\nexport const get_album = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/albums/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist's albums\n * @function get_artists_albums\n * @return {Promise}\n */\nexport const get_artists_albums = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/albums`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_cover_image\n * @return {Promise}\n */\nexport const get_playlist_cover_image = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/images`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_items\n * @return {Promise}\n */\nexport const get_playlist_items = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/tracks`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_a_playlist\n * @return {Promise}\n */\nexport const get_a_playlist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/playlists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n/**\n * Request for a get_artist_top_tracks\n * @function get_artist_top_tracks\n * @return {Promise}\n */\nexport const get_artist_top_tracks = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/top-tracks?country=BR`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist\n * @function get_artist\n * @return {Promise}\n */\nexport const get_artist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist related artists\n * @function get_related_artists\n * @return {Promise}\n */\nexport const get_related_artists = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1] + '/related-artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_track\n * @return {Promise}\n */\nexport const get_track = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/tracks/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n","import React from 'react';\nimport SpotifyLogin from 'react-spotify-login';\nimport styled from 'styled-components';\nimport { clientId, redirectUri } from '../config';\nimport { scope } from '../api/spotify';\n\nconst StyledLogin = styled.div`\n    @font-face {\n        font-family: 'Cooper Black';\n        src: url(${process.env.PUBLIC_URL}/assets/cooper_black.ttf);\n    }\n\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    font-family: \"Cooper Black\";\n    background: rgba(28,28,28);\n    border: 2em solid #ffffff;\n    color: #fff;\n    overflow: none;\n    height: 100vh;\n    text-align: center;\n\n    .title {\n        padding: 20px;\n        font-size: 2em;\n        p {\n            font-size: 22px;\n        }\n    }\n\n    .btn {\n        border: 1px solid #ffffff;\n        font-size: 17px;\n        color: #ffffff;\n    }\n`\n\nclass Login extends React.Component {\n    onSuccess(response) {\n        this.props.onLogin(response);\n    }\n    onFailure(err) {\n        throw new Error(err);\n    }\n    render() {\n        return (\n            <StyledLogin style={{backgroundImage : `url('${process.env.PUBLIC_URL}/assets/background.jpg')`, backgroundSize : 'cover'}}>\n                <div className=\"login container\">\n                    <SpotifyLogin\n                        className=\"btn\"\n                        clientId={clientId}\n                        redirectUri={redirectUri}\n                        onSuccess={(response) => { this.onSuccess(response) }}\n                        onFailure={this.onFailure}\n                        scope={scope}\n                    />\n                </div>\n            </StyledLogin>\n        )\n    }\n}\n\nexport default Login\n","export const clientId = '38a9d82012ce4dcc81269de4479a74fa';\nexport const clientSecret  = '31cafd8a23394dbfa3bc848199a97bfd';\nexport const redirectUri = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://kenjikatahira.github.io/react-spotify-player/';\n","import { orderList, getSession, get_device_id } from \"../utils\";\n\nconst init = () => {\n    console.log('____init___');\n    const player = new window.Spotify.Player({\n        playerInstance: new window.Spotify.Player({ name: 'Kenjicas Player' }),\n        name: 'Kenjicas Player',\n        getOAuthToken: callback => callback(getSession().access_token)\n    });\n\n    player.play = play;\n    player.next = next;\n    player.previous = previous;\n    player.pause = pause;\n    player.resume = resume;\n\n    return player;\n}\n\nconst previous = (lastUri) => {\n    try {\n        fetch('https://api.spotify.com/v1/me/player/previous',{\n            method : 'POST',\n            headers : {\n                'content-type' : 'application/json',\n                'authorization' : `${getSession().token_type} ${getSession().access_token}`\n            }\n        });\n    } catch(err) {\n        play({uri : lastUri})\n    }\n\n}\n\nconst next = () => {\n    fetch('https://api.spotify.com/v1/me/player/next',{\n        method : 'POST',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst pause = () => {\n    fetch('https://api.spotify.com/v1/me/player/pause',{\n        method : 'PUT',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst resume = async () => {\n   fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n       method: 'PUT',\n       headers: {\n           'Content-Type': 'application/json',\n           'Authorization': `Bearer ${getSession().access_token}`\n       }\n   });\n}\n\nconst play = async ({uri,uris}) => {\n    let queue = orderList(uri,(uris || []).map(({uri}) => uri));\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris : queue.length ? queue : [uri] }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\nexport default {\n    init\n}\n","import {\n    formatTrackDuration\n} from '../utils';\n\nimport {\n    get_featured_playlist,\n    get_saved_tracks,\n    get_recently_tracks,\n    get_a_playlist,\n    top_artists,\n    get_album,\n    get_playlist_items,\n    get_artist,\n    get_related_artists,\n    get_artists_albums,\n    get_playlist_cover_image,\n    get_artist_top_tracks,\n    get_playlists,\n    get_user,\n} from './spotify';\n\n/**\n * Get the data for the route\n *\n * @function getViewRoute\n * @return {Object} data for the view\n */\nexport const getViewRoute = async ({uri}) => {\n    let content;\n    if(uri === 'home') {\n        content = await getHome();\n    } else if(uri === 'recently-played') {\n        content = await getRecentlyTracks();\n    } else if(uri.split(':').indexOf('album') >= 0) {\n        content = await fetchAlbum(uri);\n    } else if(uri.split(':').indexOf('playlist') >= 0) {\n        content = await fetchPlaylist(uri);\n    } else if(uri.split(':').indexOf('artist') >= 0) {\n        content = await fetchArtist(uri);\n    }\n    return content;\n}\n\n/**\n * Retrieves home data\n *\n * @function getHome\n * @return {Void}\n */\nexport const getHome = async () => {\n    try {\n        const promises = [get_recently_tracks(),get_featured_playlist(),top_artists()];\n        const [ { data : recentlyTracks }, { data : featuredPlaylists }, { data : topArtists } ] = await Promise.all(Object.values(promises));\n        /**\n         * Model array of recently tracks to albums for the homepage view\n         *\n         * @function factoryRecentlyTracks\n         * @return {Void}\n         */\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (response) => {\n            return {\n                message : response.message,\n                items : response.playlists.items,\n                type : 'playlists'\n            }\n        }\n        /**\n         * Model user's top artists response for the homepage view\n         *\n         * @function factoryTopArtists\n         * @return {Void}\n         */\n        const factoryTopArtists = (response) => {\n            return {\n                message : 'Top Artists',\n                items : response.items,\n                type : 'top-artists'\n            };\n        }\n\n        return {\n            type : 'home',\n            grid : {\n                featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                top_artists : factoryTopArtists(topArtists),\n                recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n            }\n        }\n    } catch(e) {\n        throw new Error(e);\n    }\n}\n\n/**\n * Retrieves user's saved tracks\n *\n * @function getSavedTracks\n * @return {Void}\n */\nexport const getSavedTracks = () => {\n    return dispatch => {\n        get_saved_tracks().then( ({data}) => {\n            /**\n             * Model array of recently tracks to albums for the saved tracks\n             *\n             * @function savedTracksFactory\n             * @return {Void}\n             */\n            const savedTracksFactory = (response) => {\n                let tracks = response.items.map(item => item.track);\n\n                tracks = tracks.map(item => {\n                    return {\n                        images : item.album.images,\n                        name : item.name,\n                        uri : item.uri,\n                        album : {\n                            uri : item.album.uri\n                        },\n                        artists : item.artists\n                    };\n                });\n\n                return {\n                    savedTracks : {\n                        message : 'Saved Tracks',\n                        type : 'saved-tracks',\n                        items : tracks\n                    }\n                }\n            }\n\n            dispatch({\n                type : 'GET_VIEW',\n                payload : {\n                    grid : savedTracksFactory(data)\n                }\n            });\n        })\n        .catch(err => console.log(err));\n    }\n}\n\n/**\n * Calculate a album or tracklist duration\n *\n * @function totalDuration\n * @return {String} Formated duration\n */\nconst totalDuration = (tracks) => {\n    if(!tracks) return false;\n    let initialValue = 0;\n    const duration = tracks.reduce((total,{duration_ms}) => total + duration_ms,initialValue);\n\n    return formatTrackDuration(Math.floor(duration / 60));\n}\n\n/**\n * Retrieves a playlist\n *\n * @function fetchPlaylist\n * @return {Object} playlist's data\n */\nconst fetchPlaylist = async (uri) => {\n    try {\n        let playlistData = {};\n        const promises = {\n            playlist : get_playlist_items({uri}),\n            playlistInfo : get_a_playlist({uri}),\n            playlistCover : get_playlist_cover_image({uri}),\n        }\n        const [ playlist, playlistInfo, playlistCover ] = await Promise.all(Object.values(promises));\n\n        const [image] = playlistCover.data;\n\n        playlistData.tracks = playlist.data.items.map((i) => i.track).filter((i) => i);\n\n        const tableFactory = (data) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    album : i.album,\n                    artists : i.artists,\n                    uri : i.uri,\n                }\n            }\n            return {\n                head :  ['name','artist','album','duration'],\n                body  : data.tracks.map(trackModel)\n            }\n        }\n\n        return {\n            type : 'playlist',\n            header : {\n                type : 'playlist',\n                name : playlistInfo.data.name,\n                image: image,\n                tracks : tableFactory(playlistData).body,\n                total_duration : totalDuration(playlistData.tracks),\n                owner : playlistInfo.data.owner,\n                followers : playlistInfo.data.followers.total,\n                description : playlistInfo.data.description,\n                public : playlistInfo.data.public\n            },\n            table : tableFactory(playlistData)\n        }\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves a album\n *\n * @function fetchAlbum\n * @return {Object} album's data\n */\nconst fetchAlbum = async (uri) => {\n    try {\n        const {data: album} = await get_album({uri});\n        const [image] = album.images;\n        console.log(album)\n        console.log(album.release_date.replace(/(\\d{4})-\\d{2}-\\d{2}/g,'$1'))\n        const tableFactory = (album) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    uri : i.uri,\n                    artists : i.artists\n                }\n            }\n            return {\n                head :  ['name','artist','duration'],\n                body  : album.tracks.items.map(trackModel)\n            }\n        }\n\n        return {\n            type: 'album',\n            releaseDate : album.release_date.replace(/(\\d{4})-\\d{2}-\\d{2}/g,'$1'),\n            label : album.label,\n            header : {\n                name : album.name,\n                image : image,\n                tracks : tableFactory(album).body,\n                total_duration : totalDuration(album.tracks.items)\n            },\n            table : tableFactory(album)\n        };\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves a artist\n *\n * @function fetchArtist\n * @return {Object} artist's data\n */\nconst fetchArtist = async (uri) => {\n    try {\n        let artist = {};\n        const { data } = await get_artist({uri});\n        const { data : topTracks } = await get_artist_top_tracks({uri});\n        const { data : albums } = await get_artists_albums({uri});\n        const { data : relatedArtists } = await get_related_artists({uri});\n\n        const [image] = data.images;\n\n        if(!artist.tracks) {\n            artist.tracks = topTracks.tracks;\n        }\n\n        const artistAlbumsFactory = (albums) => {\n            const ids = [];\n            const artistAlbums = {}\n\n            const _albums = {\n                message : 'Albums',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'album') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            const _singles = {\n                message : 'Singles',\n                type : 'artist',\n                items : albums.items.filter(i => {\n                    if(!ids.includes(i.name) && i.album_type === 'single') {\n                        ids.push(i.name);\n                        return true;\n                    }\n                    return false;\n                })\n            }\n\n            if(_albums.items.length) {\n                artistAlbums._albums = _albums;\n            }\n            if(_singles.items.length) {\n                artistAlbums._singles = _singles;\n            }\n\n            return artistAlbums;\n        }\n\n        const tableFactory = (artist) => {\n            const trackModel = (i) => {\n                return {\n                    id : i.id,\n                    name : i.name,\n                    duration_ms : formatTrackDuration(i.duration_ms),\n                    uri : i.uri\n                }\n            }\n            return {\n                head :  ['Popular'],\n                body  : artist.tracks.map(trackModel)\n            }\n        }\n\n        return {\n            type : 'artist',\n            header : {\n                type : 'artist',\n                name : data.name,\n                image : image,\n                tracks : tableFactory(artist).body\n            },\n            table : tableFactory(artist),\n            grid : artistAlbumsFactory(albums),\n            relatedArtists : relatedArtists\n        };\n\n    } catch(e) {\n        console.error(e);\n    }\n}\n\n/**\n * Retrieves user's playlists\n *\n * @function getPlaylists\n * @return {Object} Playlists\n */\nexport const getPlaylists = async () => {\n    try {\n        const { data } = await get_playlists();\n        return data;\n    } catch(e) {\n        console.log(e);\n    }\n}\n\n/**\n * Model array of recently tracks to albums for the homepage view\n *\n * @function getRecentlyTracks\n * @return {Void}\n */\nexport const getRecentlyTracks = async () => {\n    try {\n\n        const { data } = await get_recently_tracks();\n\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n\n        return {\n            grid : {\n                recently : factoryRecentlyTracks(data)\n            }\n        };\n\n    } catch(e) {\n        console.log(e);\n    }\n}\n\n\n/**\n * Retrieves user's info\n *\n * @function getUser\n * @return {Object} User info\n */\nexport const getUser = async () => {\n    try {\n        const { data } = await get_user();\n        return data;\n    } catch(e) {\n        console.log(e)\n    }\n}\n","import React from 'react';\n\nconst SpotifyLogo = (props) => (\n    <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo\"><path fill=\"currentColor\" d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"></path></svg>\n)\n\nexport default SpotifyLogo;\n","import React,{ useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nimport { getPlaylists } from './../api';\n\nimport SpotifyLogo from './../assets/spotify';\n\nconst StyledMenu = Styled.ul`\n    list-style: none;\n    padding: 15px;\n    white-space: nowrap;\n    color : #B3B3B3;\n    background: #000;\n\n    .logo-wrapper {\n        display:flex;\n        flex-direction: row;\n        justify-content: space-between;\n\n        .spotify-logo {\n            width:120px;\n            padding-right: 0;\n            padding-left:5px;\n            display:inline-block;\n            color:#fff;\n            align-self: center;\n        }\n\n        .made {\n            padding: 10px 0;\n            margin-left: 5px;\n            align-self: center;\n            font-size: 14px;\n            text-align: center;\n        }\n    }\n\n    .fixed-pages {\n        position: sticky;\n\n        li {\n            padding: 0;\n            margin-bottom: 15px;\n            font-size: 14px;\n            font-weight: 700;\n            svg {\n                margin-right: 10px;\n                font-weight: 500;\n                font-size: 18px;\n            }\n        }\n    }\n\n    hr   {\n        display: block;\n        unicode-bidi: isolate;\n        margin-block-start: 0.9em;\n        margin-block-end: 0.9em;\n        margin-inline-start: auto;\n        margin-inline-end: auto;\n        background: #282828;\n    }\n\n    li {\n        position:relative;\n        padding: 0;\n        cursor: pointer;\n        font-size: 13px;\n        font-weight: 800;\n        margin-bottom: 8px;\n\n        &.lead {\n            margin-bottom: 0;\n            font-size: 14px;\n            font-weight: 100;\n            text-transform: uppercase;\n            margin-bottom: 10px;\n        }\n\n        &.active:before {\n            content : \"\";\n            border-left: 3px solid #1db954;\n            position: absolute;\n            height: 17px;\n            left: -8px;\n            top: 0;\n        }\n\n        &:hover:after {\n                content: attr(data-owner);\n                position: relative;\n                height:10px;\n                font-size: 12px;\n                left: 0px;\n                color: #ccc;\n                white-space: nowrap;\n        }\n    }\n`\n\n// Menu de itens fixos\nlet  menuItems = [\n    {\n        name: \"Home\",\n        uri: \"home\",\n        icon: <i key=\"home\" className=\"fas fa-home\">home</i>,\n    },\n    {\n        name: \"Browse\",\n        uri: \"browse\",\n        icon: <i key=\"browse\" className=\"fa fa-folder-open\" aria-hidden=\"true\"></i>,\n    },\n    {\n        el: <li key=\"your-library\" className=\"lead\"> Your Library </li>\n    },\n    {\n        name: \"Recently Played\",\n        uri: \"recently-played\"\n    },\n    {\n        name: \"Liked Songs\",\n        uri: \"liked-songs\"\n    },\n    {\n        name: \"Albums\",\n        uri: \"albums\"\n    },\n    {\n        name: \"Bands\",\n        uri: \"bands\"\n    },\n    {\n        name: \"Podcasts\",\n        uri: \"podcasts\"\n    },\n    {\n        el: <hr key=\"sep\" className=\"separator\"></hr>\n    },\n    {\n        el: <li key=\"lead-playlists\" className=\"lead\"> Playlists </li>\n    }\n];\n\nconst Menu = ({uri, setUri}) => {\n    const [playlists,setPlaylists] = useState(null)\n\n    useEffect(() => {\n        if(!playlists) {\n            getPlaylists()\n                .then(setPlaylists);\n        }\n    },[playlists]);\n\n    const renderList = (item,index) => {\n        const display_name = ((item || {}).owner || {}).display_name\n        if(item.el) {\n            return item.el;\n        } else {\n            return (\n                <li\n                    key={item.uri+'#'+index}\n                    className={uri === item.uri ? \"active\" : \"\"}\n                    data-owner={display_name ? ` * by ${display_name}`: \"\" }\n                    id={item.uri}\n                    onClick={() => setUri(item.uri)}\n                >\n                    {item.icon ? item.icon : ''} {item.name}\n                </li>\n            );\n        }\n    }\n    if(((playlists || {}).items || []).length) {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <SpotifyLogo />\n                    <span className=\"made\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kenjikatahira/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n                <div className=\"playlists-wrapper\">\n                    {playlists.items.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    } else {\n        return (\n            <StyledMenu className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <SpotifyLogo />\n                    <span className=\"made\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/kenjikatahira/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n            </StyledMenu>\n        );\n    }\n}\n\nMenu.propTypes = {\n    uri : PropTypes.string,\n    setUri : PropTypes.func\n}\n\nexport default Menu;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledNowPlayingInfo = Styled.div`\n    display: grid;\n    grid-template-columns: 33%;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main\";\n\n    text-align: center;\n    font-size: 13px;\n    height:8vh;\n\n    .image {\n        grid-area: sidebar;\n        align-self: center;\n        img {\n            height:8vh;\n            padding: 6px;\n        }\n    }\n\n    .info {\n        grid-area: main;\n        align-self: center;\n        justify-self: start;\n        white-space: nowrap;\n        .playing-artist {\n            text-align: left;\n            color: #999;\n        }\n    }\n`\n\nconst NowPlayingInfo = ({currentTrack}) => {\n    const image = ((((currentTrack || {}).album || {}).images || [])[0] || {}).url;\n    const track = (currentTrack || {}).name;\n    const artist = (((currentTrack || {}).artists || [])[0] || {}).name;\n    return (\n        <StyledNowPlayingInfo className=\"now-playing-info\">\n            <div className=\"image\">\n                <img src={image} alt={image} />\n            </div>\n            <div className=\"info\">\n                <div className=\"track\"><b>{track}</b></div>\n                <div className=\"playing-artist\">{artist}</div>\n            </div>\n        </StyledNowPlayingInfo>\n    )\n}\n\nNowPlayingInfo.propTypes = {\n    currentTrack : PropTypes.object\n}\n\nexport default NowPlayingInfo;\n\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport {formatTrackDuration} from './../../utils';\n\nconst StyledTimer = Styled.div`\n    text-align: center;\n    font-size: 13px;\n`\n\nconst Timer = ({count,fixed}) => {\n    return (\n        <StyledTimer className=\"timer\">\n            {formatTrackDuration(fixed ? fixed : count)}\n        </StyledTimer>\n    )\n}\n\nTimer.propTypes = {\n    count : PropTypes.number,\n    fixed : PropTypes.number\n}\n\nexport default Timer;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Timer from '.';\n\nconst TimerContainer = ({currentTrack,fixed,onChangePosition}) => {\n    const {\n        paused,\n        position\n    } = currentTrack;\n\n    let [state, setState] = useState({\n        count : position || 0,\n        currentTrack\n    });\n\n    // se trocar a musica, zera a contagem\n    if((currentTrack || {}).id !== (state.currentTrack || {}).id) {\n        setState({\n            count: 0,\n            currentTrack : currentTrack\n        });\n    }\n\n    const timer = (cb) => {\n        const _timer = {\n            start : () => setTimeout(() => {\n                setState({\n                    count : state.count + 1000,\n                    currentTrack\n                });\n                onChangePosition(state.count);\n            }, 1000),\n            stop : () => {\n                if((this || {}).start) {\n                    clearTimeout(this.start);\n                }\n            }\n        }\n        _timer[cb]();\n    }\n\n    useEffect(() => {\n        if(!paused && position !== undefined)  {\n            timer('start');\n        } else if(paused){\n            timer('stop');\n        }\n    });\n\n    return (\n        <Timer count={state.count} fixed={fixed} />\n    )\n}\n\nTimerContainer.propTypes = {\n    currentTrack : PropTypes.object,\n    fixed : PropTypes.string,\n    onChangePosition : PropTypes.func\n}\n\nexport default TimerContainer;\n\n","import React, { useState } from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport NowPlayingInfo from './nowPlayingInfo';\nimport TimerContainer from './timer/timerContainer';\nimport Timer from './timer';\n\nconst StyledPlayingBar = Styled.div`\n    background-color: #282828;\n    border-top: 1px solid #000;\n    display: grid;\n    grid-template-columns: 20%;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main .\"\n      \"footer footer footer footer\";\n\n    .playing-wrapper {\n        grid-area: sidebar;\n    }\n    .inner-now-playing {\n        grid-area: main;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n\n        .controls-buttons {\n            display: flex;\n            flex-direction: row;\n            justify-content: space-around;\n            align-self: center;\n            width: 150px;\n\n            .control-button {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                color: #b3b3b3;\n                position: relative;\n                width: 32px;\n                min-width: 32px;\n                height: 32px;\n\n                &.play,&.pause {\n                    border: 1px solid #b3b3b3;\n                    border-radius: 32px;\n                    svg {\n                        position: relative;\n                    }\n                }\n\n                &.play {\n                    svg {\n                        top: -1px;\n                        left: 2px;\n                        height: 15px;\n                        width: 15px;\n                    }\n                }\n\n                &.pause {\n                    svg {\n                        position: relative;\n                        top: -1px;\n                        left: 1px;\n                        height: 15px;\n                        width: 15px;\n                    }\n                }\n            }\n        }\n\n        .playback-bar {\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            width: 45%;\n            max-width: 722px;\n            align-self: center;\n            align-items: center;\n\n            .playback-progress-bar {\n                width: 100%;\n                margin: 0 10px;\n                background-color:#1a1a1a;\n                .progress-bar-inner {\n                    background-color: #b3b3b3;\n                    border-radius: 2px;\n                    height: 4px;\n                    width: 0;\n                }\n            }\n        }\n    }\n`\n\nconst NowPlaying = ({player,currentTrack}) => {\n\n    const [barTracking,setBarTracking] = useState(0);\n\n    const togglePlayButton =() => {\n        if(((currentTrack || {}).disallows || {}).resuming) {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button pause\"\n                    onClick={player.pause}\n                >\n                    <FontAwesomeIcon icon=\"pause\" />\n                </button>\n            )\n        } else {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button play\"\n                    onClick={() => {\n                        player.resume()\n                    }}\n                >\n                    <FontAwesomeIcon icon=\"play\" />\n                </button>\n            )\n        }\n    }\n\n    const onChangePosition = (position) => setBarTracking(Math.floor(100*position/(currentTrack || {}).duration_ms))\n\n    if(Object.keys((player || {})).length === 0 && (currentTrack || {})) return (<div className=\"now-playing\"></div>)\n    return(\n        <StyledPlayingBar className=\"now-playing\">\n            <div className=\"playing-wrapper\">\n                <NowPlayingInfo currentTrack={currentTrack} />\n            </div>\n            <div className=\"inner-now-playing\">\n                <div className=\"controls-buttons\">\n                    <button className=\"btn control-button\" onClick={player.prev}>\n                        <FontAwesomeIcon icon=\"backward\" />\n                    </button>\n                    {togglePlayButton()}\n                    <button className=\"btn control-button\" onClick={player.next}>\n                        <FontAwesomeIcon icon=\"forward\" />\n                    </button>\n                </div>\n                <div className=\"playback-bar\">\n                    <TimerContainer currentTrack={currentTrack || {}} onChangePosition={onChangePosition} />\n                    <div className=\"playback-progress-bar\">\n                        <div className=\"progress-bar-inner\" style={{width: barTracking+'%'}}></div>\n                    </div>\n                    {\n                        (currentTrack || {}).duration_ms && <Timer fixed={(currentTrack || {}).duration_ms} />\n                    }\n                </div>\n            </div>\n        </StyledPlayingBar>\n    )\n}\n\nNowPlaying.propTypes = {\n    player : PropTypes.object,\n    currentTrack : PropTypes.object\n}\n\n\nexport default NowPlaying;\n\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nconst StyledGrid = Styled.div`\n    width:90%;\n    margin:0 auto;\n\n    h2 {\n        margin: 26px 15px;\n        border-bottom: 1px solid #ffffff1a;\n        padding-bottom: 17px;\n    }\n\n    .albums-row {\n        display: flex;\n        flex-direction: row;\n        flex-flow: row wrap;\n        width: 100%;\n        padding: 10px 0;\n        margin-bottom: 25px;\n        padding: 10px;\n        overflow: auto;\n        max-width: 100%;\n        .album {\n            position: relative;\n            padding-right: 10px;\n            padding-left: 10px;\n            cursor: pointer;\n            .image {\n                width: 100%;\n                padding-bottom: 100%;\n            }\n            .card-title {\n                font-size: 14px;\n            }\n            .card-body {\n                padding: 10px 0;\n            }\n            .card-body .card-text {\n                display : block;\n                font-weight: bold;\n                font-size:13px;\n                padding: 0;\n                margin: 0;\n            }\n            .overlay {\n                position: absolute;\n                bottom:0;\n                left:0;\n                right:0;\n                display: flex;\n                flex-direction: row;\n                justify-content: center;\n                align-items: center;\n                opacity: 0;\n                margin-bottom:50%;\n            }\n            &:hover .overlay {\n                opacity: 1;\n            }\n        }\n    }\n`\n\nconst Grid = ({grid, player, setUri}) => {\n    const renderAlbums = ({images,uri,id,name,artists}) => {\n        return (\n            <div className=\"album col-xs-12 col-sm-6 col-md-4 col-lg-3\" key={id}>\n                <div className=\"image\"\n                    onClick={() => { setUri(uri) }}\n                    style={\n                        { backgroundImage: `url(${images.length && images[0].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }\n                >\n                </div>\n                <div className=\"overlay\">\n                    {/* <button\n                        className=\"btn btn-outline-secondary control-button play\"\n                        onClick={() => {\n                            console.log(uri)\n                        }}\n                    >\n                        <FontAwesomeIcon icon=\"play\" />\n                    </button> */}\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"card-text\">{ artists && artists[0].name}</p>\n                    <p className=\"card-title\">{name}</p>\n                </div>\n            </div>\n        )\n    }\n\n    const renderRow = ({message,type,items}) => {\n        if(items) {\n            return (\n                <React.Fragment key={message}>\n                    <h2> {message} </h2>\n                    <div className=\"albums-row\" key={type}>\n                        {items.map(renderAlbums)}\n                    </div>\n                </React.Fragment>\n            )\n        }\n    }\n\n    return (\n        <StyledGrid className=\"grid\">\n            {Object.values((grid || {})).map(renderRow)}\n        </StyledGrid>\n    );\n}\n\nGrid.propTypes = {\n    grid : PropTypes.object,\n    player : PropTypes.object,\n    setUri : PropTypes.func\n}\n\nexport default Grid;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nimport { getViewRoute } from './../api';\n\n// import Loading from \"../components/loading\";\nimport Grid from \"../components/grid\";\n\nconst StyledHome = Styled.div`\n    width: 90%;\n    margin: 0 auto;\n`\nconst Home = ({player, setUri}) => {\n    const [data,setData] = useState(null);\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri : 'home'})\n                .then(setData);\n        }\n    },[data]);\n\n    return (\n        <StyledHome className=\"home\">\n            <Grid grid={(data || {}).grid} player={player} setUri={setUri} />\n        </StyledHome>\n    )\n}\n\nHome.propTypes = {\n    player : PropTypes.object,\n    setUri : PropTypes.func\n}\n\nexport default Home;\n","import React from 'react';\nimport gif from './Rolling-1.2s-184px.gif';\n\nconst LoadingImg = () => (\n    <img src={gif} alt=\"loading\" />\n)\n\nexport default LoadingImg;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport LoadingImg from './../assets/loadingImg';\n\nconst StyledLoading = Styled.div`\n    position: relative;\n    display: grid;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    font-size: 28px;\n    height: 92vh;\n    img {\n        width: 90px;\n    }\n`\n\nconst Loading = () => {\n    return (\n        <StyledLoading>\n            <div className=\"loading\">\n                <LoadingImg />\n            </div>\n        </StyledLoading>\n    )\n}\n\nexport default Loading;\n","import React,{ useState } from \"react\";\nimport Styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport PropTypes from 'prop-types';\n\nconst StyledTracklist = Styled.div`\n    padding: 0 32px 24px;\n    .filter {\n        padding: 3px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n            background: inherit;\n            border-style: none;\n            color: #f5f5f5;\n        }\n    }\n    .toggleShow {\n        padding: 16px;\n        background: none;\n        border: none;\n        color: hsla(0,0%,100%,.7);\n    }\n    .copyright {\n        margin: 15px 0;\n        color: #aaa;\n    }\n    table {\n        list-style: none;\n        margin: 0;\n        padding: 10px;\n        color: #f5f5f5;\n\n        th {\n            color: #d1d1d1;\n            font-size: 13px;\n            text-transform: uppercase;\n            border-top: none;\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            &:fist-child {\n                width: 30px;\n            }\n        }\n\n        tr {\n            &:not(.header):hover td {\n                background: rgba(255, 255, 255, 0.1);\n            }\n        }\n\n        td {\n            &:nth-child(1) {\n                width: 20px;\n            }\n            &:last-child {\n                width: 80px;\n                text-align: center;\n            }\n        }\n\n        tr,\n        td {\n            border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n            cursor: pointer;\n            padding: 8px;\n            white-space: nowrap;\n            max-width: 220px;\n            overflow: hidden;\n\n            &:hover {\n                .action {\n                    visibility: visible;\n                }\n            }\n\n            .action {\n                border: 1px solid #fff;\n                padding: 5px;\n                width: 20px;\n                height: 20px;\n                border-radius: 100%;\n                visibility: hidden;\n\n                &.selected {\n                    visibility: visible;\n                }\n            }\n\n            span.link:hover {\n                border-bottom: 1px solid #fff;\n            }\n        }\n    }\n`\n\nconst Tracklist = ({table,player,limit : hasLimit,setUri, copyright,currentTrack}) => {\n    const [limit,setLimit] = useState(hasLimit || null);\n    const [filteredItems,setFilteredItems] = useState([]);\n\n    const setArtist = ({ artist, total, index }) => {\n        const { id, uri, name } = artist;\n        return (\n            <span\n                key={id+'#'+index}\n                onClick={(ev) => {\n                    ev.stopPropagation();\n                    setUri(uri);\n                }}\n            >\n                {total > 1 && index !== total - 1 ? `${name}, ` : name}\n            </span>\n        );\n    }\n\n    const setAlbum = (ev,item) => {\n        ev.stopPropagation();\n        setUri(item.album.uri);\n    }\n\n    const renderIcon = (uri='') => {\n        if(uri === (currentTrack || {}).uri) {\n            return <FontAwesomeIcon className=\"action selected\" icon=\"pause\" />\n        } else{\n            return <FontAwesomeIcon className=\"action\" icon=\"play\" />\n        }\n    }\n\n    const renderList = (item,index) => {\n        return (\n            <tr\n                key={item.id+'#'+index}\n                onClick={() => {\n                    player.play({\n                        uri: item.uri,\n                        uris: table.body\n                    });\n                }}\n            >\n                <td>\n                    <span>{renderIcon(item.uri)}</span>\n                </td>\n                {\n                    item.name &&\n                    <td>\n                        <span>{item.name}</span>\n                    </td>\n                }\n                {\n                    item.artists &&\n                    <td>\n                        <span className=\"link\">{item.artists && Object.values(item.artists).map((artist, index) => setArtist({ artist,total: (item.artists || []).length, index }))}</span>\n                    </td>\n                }\n                {\n                    item.album &&\n                    <td>\n                        <span className=\"link\" onClick={(ev) => setAlbum(ev,item)}> {item.album.name} </span>\n                    </td>\n                }\n                {\n                item.duration_ms &&\n                <td>\n                    <span> {item.duration_ms} </span>\n                </td>\n                }\n            </tr>\n        );\n    }\n\n    const onFilter = (ev) => {\n        setFilteredItems(table.body.filter(({name}) => name.toLowerCase().replace('ã','a').indexOf(ev.target.value.toLowerCase()) > -1 ))\n    }\n\n    const showMore = () =>{\n        setLimit(+limit === 5 ? 10 : 5);\n    }\n\n    return (\n        <StyledTracklist className=\"tracklist\">\n            <div className=\"filter\">\n                <input type=\"text\" placeholder=\"Filter\" onChange={(ev) => { onFilter(ev) }} />\n            </div>\n            <table className=\"table\">\n                <thead>\n                    <tr className=\"header\">\n                        <th scope=\"col\"></th>\n                        {table.head.map(i => (<th key={i}>{i}</th>))}\n                    </tr>\n                </thead>\n                <tbody>\n                    {((filteredItems || []).length > 0 ? filteredItems : table.body).map((i,index) => {\n                        if((limit)) {\n                            return (index < +limit) && renderList(i,index);\n                        } else {\n                            return renderList(i,index);\n                        }\n                    })}\n                </tbody>\n            </table>\n            { limit && <button className=\"toggleShow\" onClick={showMore}>show {+limit === 5 ? 'more' : 'less' }</button>}\n            { copyright && <div className=\"copyright\">{copyright}</div>}\n        </StyledTracklist>\n    );\n}\n\nTracklist.propTypes = {\n    table : PropTypes.object,\n    limit : PropTypes.string,\n    setUri : PropTypes.func,\n    copyright : PropTypes.string\n}\n\nexport default Tracklist;\n","import React from 'react';\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledHeader = Styled.div`\n        padding: 15px 32px;\n        margin-bottom: 15px;\n        display: flex;\n        align-items: center;\n        .artwork-wrapper {\n            overflow: auto;\n            width: 240px;\n            .artwork {\n                width: 100%;\n                padding-bottom: 100%;\n            }\n        }\n\n        .info {\n            align-self: flex-end;\n            padding: 0 25px;\n            p { margin: 0; }\n            .info-type {\n                position: relative;\n                top: 5px;\n                text-transform: uppercase;\n                font-weight: 500;\n                font-size: 15px;\n            }\n            .info-name {\n                font-size: 64px;\n                line-height: 64px;\n                padding: 0.08em 0px;\n                font-weight: 600;\n                margin-bottom: 0;\n            }\n            .info-description {\n                max-width: 500px;\n            }\n            .info-details {\n                padding: 1px 0px 13px;\n                color:#aaa;\n            }\n            .info-tracks {\n                margin-right: 4px;\n            }\n            .info-owner {\n                strong { color:#fff; }\n                &:after {\n                    content:\"*\";\n                    padding: 0 6px;\n                }\n            }\n        }\n\n        .info-interactive {\n            .play {\n                cursor: pointer;\n                background: #1DB954;\n                border-radius: 15px;\n                font-size: 11px;\n                letter-spacing: 2px;\n                font-weight: bold;\n                width: 106px;\n                padding: 4px;\n                text-align: center;\n            }\n        }\n`\n\nconst TracklistHeader = ({player,header}) => {\n    const getDescription = (description) => {\n        return (\n            <>\n                <div dangerouslySetInnerHTML={{__html: description }} />\n            </>\n        )\n    }\n\n    const tracksDuration = (total_duration) => {\n        return (\n            <span className=\"info-duration\">\n                {`- ${total_duration} hrs`}\n            </span>\n        )\n    }\n\n    const getSongsLenght = (tracks) => {\n        return (\n            <span className=\"info-tracks\">\n                {`${(tracks || []).length} songs`}\n            </span>\n        )\n    }\n\n    const {\n        tracks,\n        image,\n        name,\n        description,\n        owner,\n        total_duration,\n        type\n    } = header;\n\n    return (\n        <StyledHeader className=\"tracklist-header\">\n            {(image && image.url &&\n                <div className=\"artwork-wrapper\">\n                    <div className=\"artwork\" style={\n                        { backgroundImage: `url(${image.url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }></div>\n                </div>\n            )}\n            <div className=\"col info d-flex flex-column\">\n                <strong className=\"info-type\">{type}</strong>\n                <h3 className=\"info-name\">{name}</h3>\n                    {getDescription(description)}\n                <div className=\"info-details\">\n                    {\n                        (owner || {}).display_name && (\n                            <span className=\"info-owner\">\n                                Created by <strong>{(owner || {}).display_name}</strong>\n                            </span>\n                        )\n                    }\n                        { type !== 'artist' && getSongsLenght(tracks) }\n                        { type !== 'artist' && total_duration && tracksDuration(total_duration) }\n                </div>\n                <div className=\"info-interactive\">\n                    <div className=\"play\" onClick={ () => { player.play({uris : (tracks || []) })}}> PLAY </div>\n                </div>\n            </div>\n        </StyledHeader>\n    )\n}\n\nTracklistHeader.propTypes = {\n    player : PropTypes.object,\n    header : PropTypes.object\n}\n\nexport default TracklistHeader\n","import React, {useState,useEffect} from \"react\";\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { getViewRoute } from './../api';\n\nimport Loading from \"./../components/loading\";\nimport Tracklist from \"./../components/tracklist\";\nimport TracklistHeader from './../components/tracklistHeader';\n\nconst StyledPlaylist = Styled.div`\n`\n\nconst Playlist = ({uri,setUri,player,setTopBar,currentTrack}) => {\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const { table, header } = data;\n        return (\n            <StyledPlaylist className=\"playlist\">\n                <TracklistHeader\n                    player={player}\n                    header={header}\n                />\n                <Tracklist\n                    table={table}\n                    setUri={setUri}\n                    player={player}\n                    currentTrack={currentTrack}\n                />\n            </StyledPlaylist>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nPlaylist.propTypes = {\n    player : PropTypes.object,\n    setUri : PropTypes.func,\n    uri : PropTypes.string\n}\n\nexport default Playlist;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { getViewRoute } from './../api';\n\nimport TracklistHeader from \"./../components/tracklistHeader\";\nimport Tracklist from \"./../components/tracklist\";\nimport Loading from \"../components/loading\";\n\nconst Album = ({uri,player,setUri}) => {\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        }\n    },[data,uri]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const {table,header,label,releaseDate} = data;\n        return (\n            <div className=\"album\">\n                <TracklistHeader\n                    player={player}\n                    header={header}\n                />\n                <Tracklist\n                    table={table}\n                    setUri={setUri}\n                    player={player}\n                    copyright={`© ${releaseDate} ${label}`}\n                />\n            </div>\n        );\n    } else {\n        return (\n            <Loading />\n        );\n    }\n}\n\nAlbum.propTypes = {\n    player : PropTypes.object,\n    setUri : PropTypes.func,\n    uri : PropTypes.string\n}\n\nexport default Album;\n","import React from \"react\";\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledRelatedArtists = Styled.div`\n    padding: 15px 0;\n    ul {\n        padding: 0;\n        li {\n            display: flex;\n            flex-direction: row;\n            align-items : center;\n            list-style:none;\n            height: 50px;\n            cursor: pointer;\n            .image {\n                height:30px;\n                width: 30px;\n                border-radius: 50%;\n            }\n            .name {\n                padding-left: 10px;\n            }\n        }\n    }\n`\n\nconst RelatedArtists = ({setUri, relatedArtists}) => {\n    const renderArtist = (artist) => {\n        return (\n            <li\n                key={artist.id}\n                onClick={() => setUri(artist.uri)}\n            >\n                <div\n                    className=\"image\"\n                    style={\n                        { backgroundImage: `url(${artist.images[2].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                    }\n                >\n                </div>\n                <div className=\"name\">\n                    {artist.name}\n                </div>\n            </li>\n        )\n    }\n    return (\n        <StyledRelatedArtists className=\"relatedArtists\">\n            <h4>Fans Also Like</h4>\n            <ul>\n                {relatedArtists.artists.filter((o,index) => index < 6).map(renderArtist)}\n            </ul>\n        </StyledRelatedArtists>\n    )\n}\n\nRelatedArtists.propTypes = {\n    setUri : PropTypes.func,\n    relatedArtists : PropTypes.object\n}\n\nexport default RelatedArtists;\n","import React, { useState, useEffect } from \"react\";\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { getViewRoute } from './../api';\n\nimport TracklistHeader from \"./../components/tracklistHeader\";\nimport RelatedArtists from \"./../components/relatedArtists\";\nimport Tracklist from \"./../components/tracklist\";\nimport Grid from \"./../components/grid\";\nimport Loading from \"../components/loading\";\n\nconst StyledArtist = Styled.div`\n    padding: 20px 0;\n    .container {\n        margin-left: 20px;\n    }\n    .artist-top-related {\n        display: grid;\n        grid-template-columns: 14vw;\n        grid-template-rows: auto;\n        grid-template-areas:\n          \"topTracks topTracks topTracks topTracks topTracks related\";\n    }\n    .tracklist {\n        grid-area : topTracks;\n        padding: 15px 32px;\n    }\n    .related-artists {\n        grid-area : related;\n        padding: 0 5px 24px;\n    }\n`\n\nconst Artist = ({uri, setUri, player, setTopBar}) => {\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri})\n                .then(setData);\n        } else {\n            setTopBar(data.header.name);\n        }\n    },[data,uri]);\n\n    // reseta o data\n    useEffect(() => {\n        setData(null);\n    },[uri])\n\n    if (data) {\n        const { table, header, relatedArtists, grid } = data;\n        return (\n            <StyledArtist className=\"artist\">\n                <TracklistHeader header={header}\n                    player={player}\n                />\n                <div className=\"artist-top-related\">\n                    <Tracklist\n                        table={table}\n                        limit=\"5\"\n                        player={player}\n                        setUri={setUri}\n                    />\n                    <RelatedArtists relatedArtists={relatedArtists} setUri={setUri} />\n                </div>\n                <Grid grid={grid} setUri={setUri} player={player} />\n            </StyledArtist>\n        );\n    } else {\n        return (\n            <Loading />\n        )\n    }\n}\n\nArtist.propTypes = {\n    player : PropTypes.object,\n    setUri : PropTypes.func,\n    uri : PropTypes.string\n}\n\nexport default Artist;\n","import React, { useState, useEffect } from \"react\";\nimport Styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../api';\n\nconst StyledUserWidget = Styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    grid-area : user;\n\n    .avatar {\n        margin-right: 10px;\n        img {\n            border-radius: 50%;\n            width: 28px;\n        }\n    }\n\n    .user {\n        font-size: 15px;\n        line-height: 25px;\n    }\n`\n\nconst UserWidget = () => {\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        console.log(data)\n        if(!data) {\n            getUser()\n                .then(setData);\n        }\n    },[data]);\n    if(!data) { return <div></div> }\n    return (\n        <StyledUserWidget className=\"user-widget\">\n            <div className=\"avatar\">\n                <img src={data.images[0].url} alt=\"user-image\" />\n            </div>\n            <div className=\"user\">\n                {data.display_name}\n            </div>\n        </StyledUserWidget>\n    )\n}\n\nUserWidget.propTypes = {\n}\n\nexport default UserWidget;\n","import React, { useState, useEffect } from \"react\";\nimport Styled from 'styled-components';\nimport UserWidget from \"./userWidget\";\n\nconst StyledtopBar = Styled.div`\n    width:100%;\n    height:60px;\n    display: grid;\n    grid-template-columns: 14vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"search . . . user\"\n      \"additional-bar additional-bar additional-bar additional-bar additional-bar\";\n    position: sticky;\n    top: 0;\n    align-items: center;\n    z-index: 30;\n\n    .search {\n        width: 176px;\n        height: 24px;\n        border-radius: 27px;\n        background: inherit;\n        border-style: none;\n        background-color: #f5f5f5;\n        margin: 16px 20px;\n        z-index: 999;\n    }\n\n    .user-widget {\n        padding: 16px 20px;\n        z-index: 999;\n    }\n\n    .additional-bar {\n        width: 100%;\n        opacity : 0;\n        grid-area: additional-bar;\n        height: 0;\n        border-bottom: 1px solid #333;\n        transition: .3s;\n        padding: 10px 32px;\n        font-weight: bold;\n    }\n\n    &.sticky {\n        animation: mushroom-bottom .4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        .additional-bar {\n            opacity: 1;\n            background: rgba(0,0,0,1);\n            height: 70px;\n\n            h2 {\n                animation: fade-in .4s cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.4s both;\n            }\n        }\n    }\n\n`\n\nconst TopBar = ({scroll,title}) => {\n    const threshold = 250;\n    const renderContent = () => {\n        return (\n            <>\n                <input className=\"search\" type=\"search\"></input>\n                <UserWidget />\n                <div className=\"additional-bar\">\n                    <h2>{title}</h2>\n                </div>\n            </>\n        )\n    }\n\n    if(scroll >= 300) {\n        return (\n            <>\n            <StyledtopBar className=\"top-bar sticky\" style={{ backgroundColor : 'rgba(0,0,0,' + 100*scroll/threshold + '%)'}}>\n                {renderContent()}\n            </StyledtopBar>\n            </>\n        )\n    } else {\n        return (\n            <StyledtopBar className=\"top-bar\" style={{ backgroundColor : 'rgba(0,0,0,' + 100*scroll/threshold + '%)'}}>\n                {renderContent()}\n            </StyledtopBar>\n        )\n    }\n}\n\n\nexport default TopBar;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport Styled from 'styled-components';\n\nimport { getViewRoute } from './../api';\n\n// import Loading from \"../components/loading\";\nimport Grid from \"../components/grid\";\n\nconst StyledRecentlyPlayed = Styled.div`\n    width: 90%;\n    margin: 0 auto;\n`\nconst RecentlyPlayed = ({player, setUri}) => {\n    const [data,setData] = useState(null);\n\n    useEffect(() => {\n        if(!data) {\n            getViewRoute({uri : 'recently-played'})\n                .then(setData);\n        }\n    },[data]);\n\n    return (\n        <StyledRecentlyPlayed className=\"recently-played\">\n            <Grid grid={(data || {}).grid} player={player} setUri={setUri} />\n        </StyledRecentlyPlayed>\n    )\n}\n\nRecentlyPlayed.propTypes = {\n    player : PropTypes.object,\n    setUri : PropTypes.func\n}\n\nexport default RecentlyPlayed;\n","import React, {useState,useEffect} from \"react\";\nimport Styled from 'styled-components';\n\nimport { label, set_device_id } from './../utils';\nimport Player from './../api/player';\n\nimport Menu from './menu';\nimport NowPlayingBar from './nowPlayingBar';\nimport Home from './../pages/home';\nimport Playlist from \"../pages/playlist\";\nimport Album from \"../pages/album\";\nimport Artist from \"../pages/artist\";\nimport TopBar from \"./topBar\";\nimport RecentlyPlayed from \"../pages/recentlyPlayed\";\n\nconst StyledMain = Styled.div`\n    display: grid;\n    grid-template-columns: 14vw;\n    grid-template-rows: auto;\n    grid-template-areas:\n      \"sidebar main main main main main\"\n      \"footer footer footer footer footer footer\"\n      \"devicesBar devicesBar devicesBar devicesBar devicesBar devicesBar\";\n    overflow: hidden;\n    font-family: \"Lato\";\n    color: #F5F5F5;\n    overflow: none;\n\n    a {\n        color: #F5F5F5;\n    }\n\n    .github {\n        position: absolute;\n        top:0;\n        right:0;\n        z-index:1000;\n        width:120px;\n        img {\n            width: 120px;\n            height: 120px;\n        }\n    }\n\n    .search {\n        padding: 8px 69px;\n        input {\n            width: 176px;\n            height: 25px;\n            border-radius: 27px;\n        }\n    }\n\n\n    .menu-wrapper, .browser-wrapper {\n        position: relative;\n        overflow-x: hidden;\n        overflow-y: auto;\n        height: 92vh;\n        background-repeat: no-repeat;\n        background-attachment: local;\n\n        &::-webkit-scrollbar {\n            width: 1em;\n            background: hsla(0,0%,100%,.3);\n        }\n        &::-webkit-scrollbar-thumb {\n            min-height: 30px;\n            max-height: none;\n            background: hsla(0,0%,100%,.3);\n        }\n    }\n\n    .menu-wrapper {\n        grid-area: sidebar;\n        background: #000;\n        justify-content: stretch;\n        &::-webkit-scrollbar {\n            background: #000;\n        }\n    }\n\n    .browser-wrapper {\n        grid-area: main;\n        linear-gradient(0deg, #0c0c0c 0%, #0c0c0c 80%, #0c0c0c 100%)\n        .browser-inner-wrapper {\n            max-width: 100%;\n            margin-bottom: 1em;\n        }\n    }\n\n    .now-playing-wrapper {\n        position: relative;\n        width: 100%;\n        background-color: #282828;\n        grid-area: footer;\n    }\n\n    .devices-bar-wrapper {\n        grid-area: devicesBar;\n    }\n`\n\nconst Main = () => {\n    const [player,setPlayer] = useState(null);\n    const [uri,setUri] = useState(localStorage.getItem('lastUri') || 'home');\n    const [currentTrack,setCurrentTrack] = useState(null);\n    const [scroll,setScroll] = useState(0);\n    const [title,setTopBar] = useState(null);\n\n    // init - adds the sdk spotify player lib\n    useEffect(() => {\n        const script = document.createElement(\"script\");\n        script.src = \"https://sdk.scdn.co/spotify-player.js\";\n        script.async = true;\n        document.body.appendChild(script);\n    }, [])\n\n    // uri\n    useEffect(() => {\n        setUri(uri);\n        localStorage.setItem('lastUri',uri);\n        if(\n            uri.indexOf('playlist') === -1 &&\n            uri.indexOf('album') === -1 &&\n            uri.indexOf('artist') === -1\n        ) {\n            setTopBar(\n                label(uri)\n            );\n        }\n        return () => {\n            setUri(null);\n        }\n    }, [uri])\n\n    // player\n    useEffect(() => {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            setPlayer(Player.init());\n        };\n        if(player) {\n            player.addListener('ready', ({device_id}) => {\n                set_device_id(device_id);\n                // player.play({uri : 'spotify:track:3y4I9VECfNbDXYN2bXh9hV'});\n            });\n            player.addListener('player_state_changed', (state) => {\n                if(state && state.track_window) {\n                    setCurrentTrack({...state.track_window.current_track, ...state})\n                } else {\n                    console.log(state)\n                }\n            });\n            player.connect();\n        }\n    },[player])\n\n    const renderView = () => {\n        if(uri) {\n            if(uri.indexOf('home') !== -1) {\n                return <Home player={player} setUri={setUri}/>\n            } else if(uri.indexOf('recently-played') !== -1) {\n                return <RecentlyPlayed player={player} setUri={setUri}/>\n            } else if(uri.indexOf('spotify:playlist') !== -1) {\n                return <Playlist uri={uri} player={player} setUri={setUri} setTopBar={setTopBar} currentTrack={currentTrack} />\n            } else if(uri.indexOf('spotify:album') !== -1) {\n                return <Album uri={uri} player={player} setUri={setUri} setTopBar={setTopBar} currentTrack={currentTrack} />\n            } else if(uri.indexOf('spotify:artist') !== -1) {\n                return <Artist uri={uri} player={player} setUri={setUri} setTopBar={setTopBar} currentTrack={currentTrack} />\n            } else {\n                return <h3>{uri}</h3>\n            }\n        }\n    }\n\n    const onScroll = (e) => setScroll(e.target.scrollTop);\n\n    return (\n        <StyledMain className=\"main\">\n            <div className=\"menu-wrapper\">\n                <Menu\n                    setUri={setUri}\n                    uri={uri}\n                />\n            </div>\n            <div\n                className=\"browser-wrapper\"\n                onScroll={onScroll}\n            >\n                <TopBar scroll={scroll} title={title} />\n                {renderView()}\n            </div>\n            <div className=\"now-playing-wrapper\">\n                <NowPlayingBar currentTrack={currentTrack} player={player} />\n            </div>\n        </StyledMain>\n    );\n}\n\nexport default Main;\n","import React, { useState, useEffect } from 'react';\nimport './style.scss';\n\nimport { setSession,getSession } from './utils';\n\nimport Login from './components/login';\nimport Main from './components/main';\n\nconst App = () => {\n    const [isLogged,setIsLogged] = useState(false);\n\n    // init\n    useEffect(() => {\n        if(getSession().access_token) {\n            setIsLogged(true);\n        }\n    }, [])\n\n    const onLogin = (response) => {\n        setSession(response);\n        setIsLogged(response.access_token ? true : false)\n    }\n\n    if(isLogged) {\n        return (\n            <div className=\"app\">\n                <Main />\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"app\">\n                <Login onLogin={onLogin}/>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}