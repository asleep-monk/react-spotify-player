{"version":3,"sources":["serviceWorker.js","reducers/index.js","utils/index.js","api/index.js","api/player.js","actions/index.js","components/loading/index.js","pages/home/index.js","components/tracklist-header/index.js","components/tracklist/index.js","pages/playlist/index.js","components/relatedArtists/index.js","components/grid/index.js","pages/artist/index.js","pages/saved-tracks/index.js","pages/album/index.js","components/view/index.js","components/login/index.js","config.js","components/menu/index.js","components/nowPlayingInfo/index.js","components/timer/index.js","components/timerContainer/index.js","components/nowPlayingBar/index.js","components/main/index.js","App.js","index.js","middlewares/index.js"],"names":["Boolean","window","location","hostname","match","combineReducers","user","state","action","type","payload","logged","playlists","home","uri","view","player","featured_paylists","current_state","grid","getSession","access_token","localStorage","getItem","token_type","get_device_id","isAuthenticated","expires_at","JSON","parse","Date","valueOf","orderList","item","arr","key","indexOf","before","newArr","found","forEach","n","i","includes","push","formatTrackDuration","millis","minutes","Math","floor","seconds","toFixed","get_featured_playlist","axios","get","headers","get_album","id","split","length","get_artists_albums","get_playlist_cover_image","get_playlist_items","get_a_playlist","get_artist_top_tracks","get_artist","get_related_artists","previous","lastUri","fetch","method","err","play","next","pause","resume","a","uris","queue","map","body","stringify","console","log","Spotify","Player","playerInstance","name","getOAuthToken","callback","totalDuration","tracks","duration","reduce","total","duration_ms","fetchPlaylist","playlistData","promises","playlist","playlistInfo","playlistCover","Promise","all","Object","values","images","data","items","track","filter","total_duration","owner","followers","description","public","album","artists","table","head","fetchAlbum","fetchArtist","ids","artist","topTracks","albums","relatedArtists","artistAlbums","message","album_type","artistSingles","getViewRoute","content","setView","props","dispatch","setItem","getView","clearView","logout","removeItem","status","Loading","className","Main","this","getHome","onClick","style","backgroundImage","url","backgroundSize","backgroundPosition","row","renderAlbums","bind","keys","renderRow","React","Component","connect","recentlyTracks","featuredPlaylists","topArtists","factoryPlaylists","response","factoryTopArtists","limit","href","factoryRecentlyTracks","top_artists","StyledHeader","Styled","div","TracklistHeader","src","alt","dangerouslySetInnerHTML","__html","getDescription","display_name","Tracklist","filteredItems","index","ev","stopPropagation","device_id","setArtist","setAlbum","setState","toLowerCase","replace","target","value","placeholder","onChange","onFilter","scope","renderList","showMore","Playlist","nextProps","RelatedArtists","undefined","Grid","Artist","SavedTracks","getSavedTracks","then","savedTracks","factorySavedTracks","Album","View","StyledLogin","styled","process","Login","login","clientId","redirectUri","onSuccess","onFailure","expires_in","setSession","Menu","getPlaylists","menuItems","icon","el","data-owner","viewBox","fill","d","NowPlayingInfo","current_track","image","Timer","count","fixed","TimerContainer","paused","position","useState","timer","cb","start","setTimeout","stop","clearTimeout","useEffect","NowPlaying","addListener","connected","configurePlayer","setCurrentState","set_device_id","teste","togglePlayButton","shuffle","repeat_mode","track_window","next_tracks","previous_tracks","initiated","getPlayer","run","onSpotifyWebPlaybackSDKReady","lastPage","getUser","App","isLogged","store","createStore","reducers","applyMiddleware","thunk","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"wgBAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCmFSC,cAAgB,CAC3BC,KAtFgB,WAAsB,IAArBC,EAAoB,uDAAd,GAAGC,EAAW,uCACrC,MAfa,aAeVA,EAAOC,KACC,2BAAKF,GAAWC,EAAOE,SALvB,WAORF,EAAOC,KACC,GAEJF,GAgFPI,OArDiB,WAAsB,IAArBJ,EAAoB,uDAAd,GAAGC,EAAW,uCACtC,MArCa,aAqCVA,EAAOC,MAvCA,UA0CPD,EAAOC,MAzCC,WA4CRD,EAAOC,KALCD,EAAOE,QAQXH,GA4CPK,UAhEqB,WAAsB,IAArBL,EAAoB,uDAAd,GAAGC,EAAW,uCAC1C,MAtCkB,kBAsCfA,EAAOC,KACC,2BAAKF,GAAWC,EAAOE,SA7BvB,WA+BRF,EAAOC,KACC,GAEJF,GA0DPM,KA/EgB,WAAsB,IAArBN,EAAoB,uDAAd,GAAGC,EAAW,uCACrC,MAvBa,aAuBVA,EAAOC,KACC,2BAAKF,GAAWC,EAAOE,SAE3BH,GA4EPO,IA3Ce,WAA0B,IAAzBP,EAAwB,uDAAlB,OAAOC,EAAW,uCACxC,MA3Da,aA2DVA,EAAOC,KACCD,EAAOE,QAEXH,GAwCPQ,KArCgB,WAAsB,IAArBR,EAAoB,uDAAd,GAAGC,EAAW,uCACrC,MAjEa,aAiEVA,EAAOC,KACCD,EAAOE,QAjEH,eAmEZF,EAAOC,KACC,GAEJF,GA+BPS,OA5BkB,WAAsB,IAArBT,EAAoB,uDAAd,GAAGC,EAAW,uCACvC,MAzEe,eAyEZA,EAAOC,KACCD,EAAOE,QAEXH,GAyBPU,kBA5E2B,WAAsB,IAArBV,EAAoB,uDAAd,GAAGC,EAAW,uCAChD,MAvB2B,2BAuBxBA,EAAOC,KACC,2BAAKF,GAAWC,EAAOE,SAE3BH,GAyEPW,cAvBwB,WAAsB,IAArBX,EAAoB,uDAAd,GAAGC,EAAW,uCAC7C,MA/EsB,sBA+EnBA,EAAOC,KACCD,EAAOE,QAEXH,GAoBPY,KAjBgB,WAAsB,IAArBZ,EAAoB,uDAAd,GAAGC,EAAW,uCACrC,MArFqB,qBAqFlBA,EAAOC,KACCD,EAAOE,QAEXH,K,mECjFEa,EAAa,WACtB,MAAO,CACHC,aAAeC,aAAaC,QAAQ,gBACpCC,WAAaF,aAAaC,QAAQ,gBAS7BE,EAAgB,WACzB,OAAOH,aAAaC,QAAQ,cAGnBG,EAAkB,WAC3B,IAAIC,EAAaC,KAAKC,MAAMP,aAAaC,QAAQ,eACjD,OAAOI,IAAc,IAAIG,MAAOC,UAAYJ,GAGnCK,EAAY,SAACC,EAAKC,GAC3B,IAAMC,EAAMD,EAAIE,QAAQH,GACpBI,EAAS,GAAGC,EAAS,GAAIC,GAAQ,EAgBrC,OAfAL,EAAIM,SAAQ,SAACC,EAAEC,GACRA,IAAMP,IAAKI,GAAQ,GAClBA,EAGID,EAAOK,SAASF,IAChBH,EAAOM,KAAKH,GAHhBJ,EAAOO,KAAKH,MAQpBJ,EAAOG,SAAQ,SAAAE,GACXJ,EAAOM,KAAKF,MAGTJ,GAGEO,EAAsB,SAACC,GAChC,IAAIC,EAAUC,KAAKC,MAAMH,EAAS,KAC9BI,GAAYJ,EAAS,IAAS,KAAMK,QAAQ,GAChD,MAAM,GAAN,OAAUJ,EAAV,YAAsBG,EAAU,GAAK,IAAM,IAA3C,OAAiDA,I,gBCJxCE,EAAwB,WACjC,OAAOC,IAAMC,IAAI,0EAA2E,CACxFC,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAgFxCmC,EAAY,SAAC,GAAW,IAC3BC,EAD0B,EAAT3C,IACR4C,MAAM,KACrB,OAAOL,IAAMC,IAAI,qCAAuCG,EAAGA,EAAGE,OAAO,GAAI,CACrEJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAUxCuC,EAAqB,SAAC,GAAW,IACpCH,EADmC,EAAT3C,IACjB4C,MAAM,KACrB,OAAOL,IAAMC,IAAN,6CAAgDG,EAAGA,EAAGE,OAAO,GAA7D,WAA0E,CAC7EJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAUxCwC,EAA2B,SAAC,GAAW,IAC1CJ,EADyC,EAAT3C,IACvB4C,MAAM,KACrB,OAAOL,IAAMC,IAAN,+CAAkDG,EAAGA,EAAGE,OAAO,GAA/D,WAA4E,CAC/EJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAUxCyC,EAAqB,SAAC,GAAW,IACpCL,EADmC,EAAT3C,IACjB4C,MAAM,KACrB,OAAOL,IAAMC,IAAN,+CAAkDG,EAAGA,EAAGE,OAAO,GAA/D,WAA4E,CAC/EJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAUxC0C,EAAiB,SAAC,GAAW,IAChCN,EAD+B,EAAT3C,IACb4C,MAAM,KACrB,OAAOL,IAAMC,IAAI,wCAA0CG,EAAGA,EAAGE,OAAO,GAAI,CACxEJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAWxC2C,EAAwB,SAAC,GAAW,IACvCP,EADsC,EAAT3C,IACpB4C,MAAM,KACrB,OAAOL,IAAMC,IAAN,6CAAgDG,EAAGA,EAAGE,OAAO,GAA7D,0BAAyF,CAC5FJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAUxC4C,EAAa,SAAC,GAAW,IAC5BR,EAD2B,EAAT3C,IACT4C,MAAM,KACrB,OAAOL,IAAMC,IAAI,sCAAwCG,EAAGA,EAAGE,OAAO,GAAI,CACtEJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBAUxC6C,EAAsB,SAAC,GAAW,IACrCT,EADoC,EAAT3C,IAClB4C,MAAM,KACrB,OAAOL,IAAMC,IAAI,sCAAwCG,EAAGA,EAAGE,OAAO,GAAK,mBAAoB,CAC3FJ,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBC1O/C8C,EAAW,SAACC,GACd,IACIC,MAAM,gDAAgD,CAClDC,OAAS,OACTf,QAAU,CACN,eAAiB,mBACjB,wBAAqBnC,IAAaI,WAAlC,YAAgDJ,IAAaC,iBAGvE,MAAMkD,GACJC,EAAK,CAAC1D,IAAMsD,MAKdK,EAAO,WACTJ,MAAM,4CAA4C,CAC9CC,OAAS,OACTf,QAAU,CACN,eAAiB,mBACjB,wBAAqBnC,IAAaI,WAAlC,YAAgDJ,IAAaC,kBAKnEqD,EAAQ,WACVL,MAAM,6CAA6C,CAC/CC,OAAS,MACTf,QAAU,CACN,eAAiB,mBACjB,wBAAqBnC,IAAaI,WAAlC,YAAgDJ,IAAaC,kBAKnEsD,EAAM,uCAAG,sBAAAC,EAAA,sDACZP,MAAM,uDAAD,OAAwD5C,KAAmB,CAC5E6C,OAAQ,MACRf,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BnC,IAAaC,iBALpC,2CAAH,qDAUNmD,EAAI,uCAAG,iCAAAI,EAAA,sDAAQ9D,EAAR,EAAQA,IAAI+D,EAAZ,EAAYA,KACjBC,EAAQ9C,EAAUlB,GAAK+D,GAAQ,IAAIE,KAAI,qBAAEjE,QAC7CuD,MAAM,uDAAD,OAAwD5C,KAAmB,CAC5E6C,OAAQ,MACRU,KAAMpD,KAAKqD,UAAU,CAAEJ,KAAOC,EAAMnB,OAASmB,EAAQ,CAAChE,KACtDyC,QAAS,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BnC,IAAaC,iBAPvC,2CAAH,sDAYK,EA1EF,WACT6D,QAAQC,IAAI,eACZ,IAAMnE,EAAS,IAAIf,OAAOmF,QAAQC,OAAO,CACrCC,eAAgB,IAAIrF,OAAOmF,QAAQC,OAAO,CAAEE,KAAM,oBAClDA,KAAM,kBACNC,cAAe,SAAAC,GAAQ,OAAIA,EAASrE,IAAaC,iBASrD,OANAL,EAAOwD,KAAOA,EACdxD,EAAOyD,KAAOA,EACdzD,EAAOmD,SAAWA,EAClBnD,EAAO0D,MAAQA,EACf1D,EAAO2D,OAASA,EAET3D,GCqGL0E,EAAgB,SAACC,GACnB,IAAIA,EAAQ,OAAO,EACnB,IACMC,EAAWD,EAAOE,QAAO,SAACC,EAAD,UAAyBA,EAAzB,EAAQC,cADpB,GAGnB,OAAOlD,EAAoBG,KAAKC,MAAM2C,EAAW,MAG/CI,EAAa,uCAAG,WAAOlF,GAAP,2BAAA8D,EAAA,6DACdqB,EAAe,GACbC,EAAW,CACbC,SAAWrC,EAAmB,CAAChD,QAC/BsF,aAAerC,EAAe,CAACjD,QAC/BuF,cAAgBxC,EAAyB,CAAC/C,SAL5B,SAOsCwF,QAAQC,IAAIC,OAAOC,OAAOP,IAPhE,0CAOVC,EAPU,KAOAC,EAPA,KAOcC,EAPd,KASlBJ,EAAaxF,KAAO,WACpBwF,EAAaS,OAASL,EAAcM,KACpCV,EAAaxC,GAAK0C,EAASQ,KAAKlD,GAChCwC,EAAaN,OAASQ,EAASQ,KAAKC,MAAM7B,KAAI,SAACrC,GAAD,OAAOA,EAAEmE,SAAOC,QAAO,SAACpE,GAAD,OAAOA,KAE5EuD,EAAac,eAAiBrB,EAAcO,EAAaN,QACzDM,EAAae,MAAQZ,EAAaO,KAAKK,MACvCf,EAAagB,UAAYb,EAAaO,KAAKM,UAAUnB,MACrDG,EAAaV,KAAOa,EAAaO,KAAKpB,KACtCU,EAAaiB,YAAcd,EAAaO,KAAKO,YAC7CjB,EAAakB,OAASf,EAAaO,KAAKQ,OAGxClB,EAAaN,OAASM,EAAaN,OAAOZ,KAAI,SAAArC,GAC1C,MAAO,CACHe,GAAKf,EAAEe,GACP8B,KAAO7C,EAAE6C,KACTQ,YAAclD,EAAoBH,EAAEqD,aACpCqB,MAAQ1E,EAAE0E,MACVC,QAAU3E,EAAE2E,QACZvG,IAAM4B,EAAE5B,QAIhBmF,EAAaqB,MAAQ,CACjBC,KAAQ,CAAC,OAAO,SAAS,QAAQ,YACjCvC,KAAQiB,EAAaN,QAnCP,kBAsCXM,GAtCW,4CAAH,sDAyCbuB,EAAU,uCAAG,WAAO1G,GAAP,mBAAA8D,EAAA,6DACXwC,EAAQ,GADG,SAEM5D,EAAU,CAAC1C,QAFjB,uBAER6F,EAFQ,EAERA,KAEPS,EAAM3G,KAAO,QACb2G,EAAM7B,KAAOoB,EAAKpB,KAClB6B,EAAML,eAAiBrB,EAAciB,EAAKhB,OAAOiB,OAEjDQ,EAAMzB,OAASgB,EAAKhB,OAAOiB,MAAM7B,KAAI,SAACrC,GAClC,MAAO,CACHe,GAAKf,EAAEe,GACP8B,KAAO7C,EAAE6C,KACTQ,YAAclD,EAAoBH,EAAEqD,aACpCjF,IAAM4B,EAAE5B,IACRuG,QAAU3E,EAAE2E,YAKpBD,EAAMV,OAASC,EAAKD,OAEpBU,EAAME,MAAQ,CACVC,KAAQ,CAAC,OAAO,SAAS,YACzBvC,KAAQoC,EAAMzB,QAvBH,kBA2BRyB,GA3BQ,4CAAH,sDA8BVK,EAAW,uCAAG,WAAO3G,GAAP,iCAAA8D,EAAA,6DACV8C,EAAM,GACRC,EAAS,GAFG,SAGO1D,EAAW,CAACnD,QAHnB,uBAGR6F,EAHQ,EAGRA,KAHQ,SAImB3C,EAAsB,CAAClD,QAJ1C,uBAID8G,EAJC,EAIRjB,KAJQ,UAKgB/C,EAAmB,CAAC9C,QALpC,wBAKD+G,EALC,EAKRlB,KALQ,UAMwBzC,EAAoB,CAACpD,QAN7C,wBAMDgH,EANC,EAMRnB,KAERgB,EAAOlH,KAAO,SACdkH,EAAOpC,KAAOoB,EAAKpB,KACnBoC,EAAOjB,OAASC,EAAKD,OAEjBiB,EAAOhC,SACPgC,EAAOhC,OAASiC,EAAUjC,QAG9BgC,EAAOhC,OAASgC,EAAOhC,OAAOZ,KAAI,SAAArC,GAC9B,MAAO,CACHe,GAAKf,EAAEe,GACP8B,KAAO7C,EAAE6C,KACTQ,YAAclD,EAAoBH,EAAEqD,aACpCjF,IAAM4B,EAAE5B,QAIhB6G,EAAOE,OAAS,CACZE,aAAe,CACXC,QAAU,SACVvH,KAAO,SACPmG,MAAQiB,EAAOjB,MAAME,QAAO,SAAApE,GACxB,OAAIgF,EAAI/E,SAASD,EAAE6C,OAA0B,UAAjB7C,EAAEuF,aAC1BP,EAAI9E,KAAKF,EAAE6C,OACJ,OAKnB2C,cAAgB,CACZF,QAAU,UACVvH,KAAO,SACPmG,MAAQiB,EAAOjB,MAAME,QAAO,SAAApE,GACxB,OAAIgF,EAAI/E,SAASD,EAAE6C,OAA0B,WAAjB7C,EAAEuF,aAC1BP,EAAI9E,KAAKF,EAAE6C,OACJ,QAOvBoC,EAAOL,MAAQ,CACXC,KAAQ,CAAC,WACTvC,KAAQ2C,EAAOhC,QAGnBgC,EAAOG,eAAiBA,EAvDR,kBAyDTH,GAzDS,4CAAH,sDA4DXQ,EAAY,uCAAG,+BAAAvD,EAAA,4DAAQ9D,EAAR,EAAQA,KAElB4C,MAAM,KAAKtB,QAAQ,UAAY,GAFrB,gCAGGoF,EAAW1G,GAHd,OAGbsH,EAHa,mCAIPtH,EAAI4C,MAAM,KAAKtB,QAAQ,aAAe,GAJ/B,kCAKG4D,EAAclF,GALjB,QAKbsH,EALa,oCAMPtH,EAAI4C,MAAM,KAAKtB,QAAQ,WAAa,GAN7B,kCAOGqF,EAAY3G,GAPf,QAObsH,EAPa,wCAUVA,GAVU,4CAAH,sDAsJLC,EAAU,SAACC,GACpB,8CAAO,WAAMC,GAAN,SAAA3D,EAAA,uDAEF0D,GAAS,IAAIxH,KAAOb,OAAOqB,aAAakH,QAAQ,WAAWF,EAAMxH,KAClEyH,EAAS,CACL9H,KAAO,WACPC,SAAW4H,GAAS,IAAIxH,KAAO,SALhC,2CAAP,uDAeS2H,EAAU,SAAC,GAAW,IAAV3H,EAAS,EAATA,IACrB,8CAAO,WAAMyH,GAAN,eAAA3D,EAAA,sEACgBuD,EAAa,CAACrH,QAD9B,OACGC,EADH,OAEHwH,EAAS,CACL9H,KAAO,WACPC,QAAUK,IAJX,2CAAP,uDAcS2H,EAAY,WACrB,OAAO,SAAAH,GACHA,EAAS,CACL9H,KAAO,aACPC,QAAU,OAUTiI,EAAS,WAClB,OAAO,SAAAJ,GH1bPjH,aAAasH,WAAW,gBACxBtH,aAAasH,WAAW,cACxBtH,aAAasH,WAAW,cACxBtH,aAAasH,WAAW,cACxB1D,QAAQC,IAAI,iBGwbRoD,EAAS,CACL9H,KAAO,SACPC,QAAU,CACNmI,QAAS,EACTxH,cAAe,OC5bhByH,G,kBAVC,WACZ,OACI,oCACI,yBAAKC,UAAU,WACX,6CCGVC,E,kLAGEC,KAAKX,MAAMY,Y,mCAGF/C,GAAW,IAAD,OACnB,OACI,yBAAK4C,UAAU,iBAAiBI,QAAS,WAAQ,EAAKb,MAAMD,QAAQ,CAACvH,IAAMqF,EAASrF,OAASqB,IAAKgE,EAAS1C,IACvG,yBAAKsF,UAAU,QAAQK,MACnB,CAAEC,gBAAgB,OAAD,OAASlD,EAASO,OAAO/C,QAAUwC,EAASO,OAAO,GAAG4C,IAAtD,KAA8DC,eAAgB,QAASC,mBAAmB,mBAE/H,yBAAKT,UAAU,aACX,uBAAGA,UAAU,cAAc5C,EAASZ,MACpC,2BAAOwD,UAAU,aAAa5C,EAASe,iB,gCAM7CuC,GACN,OACI,oCACI,gCAAMA,EAAIzB,QAAV,KACA,yBAAKe,UAAU,aAAa5G,IAAKsH,EAAIhJ,MAChCgJ,EAAI7C,MAAM7B,IAAIkE,KAAKS,aAAaC,KAAKV,W,+BAOlD,OAAGzC,OAAOoD,KAAKX,KAAKX,MAAMzH,MAAM8C,OAExB,yBAAKoF,UAAU,QACVvC,OAAOC,OAAOwC,KAAKX,MAAMzH,MAAMkE,IAAIkE,KAAKY,UAAUF,KAAKV,QAK5D,kBAAC,EAAD,U,GAxCGa,IAAMC,WAoDVC,eANS,SAACzJ,GACrB,MAAO,CACHM,KAAMN,EAAMM,QAIoB,CACpCqI,QFdmB,WACnB,8CAAO,WAAMX,GAAN,6BAAA3D,EAAA,6DACGsB,EAAW,CFiDd7C,IAAMC,IAAI,uDAAwD,CACrEC,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,iBEpDL+B,IFmCrCC,IAAMC,IAAI,4CAA6C,CAC1DC,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,kBEvC1C,SAE8FiF,QAAQC,IAAIC,OAAOC,OAAOP,IAFxH,mCAEc+D,EAFd,KAEOtD,KAAkCuD,EAFzC,KAEkCvD,KAAqCwD,EAFvE,KAEgExD,KAgC7DyD,EAAmB,SAACC,GACtB,MAAO,CACHrC,QAAUqC,EAASrC,QACnBpB,MAAQyD,EAASzJ,UAAUgG,MAC3BnG,KAAO,cAST6J,EAAoB,SAACD,GACvB,MAAO,CACHrC,QAAU,cACVpB,MAAQyD,EAASzD,MACjBnG,KAAO,gBAIf8H,EAAS,CACL9H,KAAO,WACPC,QAAU,CACNuJ,eAjDsB,SAACI,GAC3B,IAAK3C,EAAM,GACPG,EAASwC,EAASzD,MAAM7B,KAAI,SAAA9C,GAAI,OAAIA,EAAK4E,MAAMO,SAQnD,OANAS,EAASA,EAAOf,QAAO,SAAA7E,GACnB,OAAGyF,EAAI/E,SAASV,EAAKwB,MACrBiE,EAAI9E,KAAKX,EAAKwB,IACPxB,MAGJ,CACHwC,KAAO4F,EAAS5F,KAChB8F,MAAQF,EAASE,MACjBC,KAAOH,EAASG,KAChBxC,QAAU,kBACVpB,MAAQiB,EACRpH,KAAO,mBAiCUgK,CAAsBR,GACvCC,kBAAoBE,EAAiBF,GACrCQ,YAAcJ,EAAkBH,MA5DrC,4CAAP,uDEcA9B,WAFW2B,CAGZhB,G,wlDC/DH,IAAM2B,GAAeC,KAAOC,IAAV,MA6HHC,GAjES,SAAC,GAAoB,IAAnBxC,EAAkB,EAAlBA,MAAMtH,EAAY,EAAZA,OAExB2E,EAOA2C,EAPA3C,OACAe,EAMA4B,EANA5B,OACAnB,EAKA+C,EALA/C,KACA2B,EAIAoB,EAJApB,YACAF,EAGAsB,EAHAtB,MACAD,EAEAuB,EAFAvB,eACAtG,EACA6H,EADA7H,KA2BJ,OACI,kBAACkK,GAAD,CAAc5B,UAAU,oBAClBrC,EAAO/C,QAAU+C,EAAO,GAAG4C,KACzB,yBAAKP,UAAU,sCACX,yBAAKgC,IAAKrE,EAAO,GAAG4C,IAAK0B,IAAKzF,GAAQ,MAG9C,yBAAKwD,UAAU,+BACX,4BAAQA,UAAU,aAAatI,GAC/B,wBAAIsI,UAAU,aAAaxD,GAjChB,SAAC2B,GACpB,OACI,oCACI,yBAAK+D,wBAAyB,CAACC,OAAQhE,MA+BlCiE,CAAejE,GACpB,yBAAK6B,UAAU,iBAEN/B,GAAS,IAAIoE,cACV,0BAAMrC,UAAU,cAAhB,cACe,iCAAU/B,GAAS,IAAIoE,eAIhC,WAAT3K,GAzBb,0BAAMsI,UAAU,eAAhB,WACSpD,GAAU,IAAIhC,OADvB,WA0BcoD,GAlCd,0BAAMgC,UAAU,iBAAhB,YACUhC,EADV,UAoCI,yBAAKgC,UAAU,oBACX,yBAAKA,UAAU,OAAOI,QAAU,WAAQnI,EAAOwD,KAAK,CAACK,KAAQc,GAAU,OAAvE,cClHd0F,I,wDACF,WAAY/C,GAAQ,IAAD,8BACf,cAAMA,IACD/H,MAAQ,CACT+K,cAAgB,GAChBf,MAAQjC,EAAMiC,OAAS,MAJZ,E,mEASftB,KAAKX,MAAMI,c,mCAGuB,IAAD,OAAxBf,EAAwB,EAAxBA,OAAQ7B,EAAgB,EAAhBA,MAAOyF,EAAS,EAATA,MAChB9H,EAAkBkE,EAAlBlE,GAAI3C,EAAc6G,EAAd7G,IAAKyE,EAASoC,EAATpC,KACjB,OACI,0BACIpD,IAAKsB,EAAG,IAAI8H,EACZpC,QAAS,SAACqC,GACNA,EAAGC,kBACH,EAAKnD,MAAMD,QAAQ,CAAEvH,UAGxBgF,EAAQ,GAAKyF,IAAUzF,EAAQ,EAA/B,UAAsCP,EAAtC,MAAiDA,K,+BAKrDiG,EAAGvJ,GACRuJ,EAAGC,kBACHxC,KAAKX,MAAMD,QAAQ,CAAEvH,IAAKmB,EAAKmF,MAAMtG,Q,iCAG9BmB,EAAKsJ,GAAQ,IAAD,OACnB,OACI,wBACIpJ,IAAKF,EAAKwB,GAAG,IAAI8H,EACjBpC,QAAS,WACL,EAAKb,MAAMtH,OAAOwD,KAAK,CACnB1D,IAAKmB,EAAKnB,IACV+D,KAAM,EAAKyD,MAAMvH,KAAK4E,OACtB+F,UAAW,EAAKpD,MAAMoD,cAI9B,4BACI,8BAAM,uBAAG3C,UAAU,uBAGnB9G,EAAKsD,MACL,4BACI,8BAAOtD,EAAKsD,OAIhBtD,EAAKoF,SACL,4BACI,0BAAM0B,UAAU,QAAQ9G,EAAKoF,SAAWb,OAAOC,OAAOxE,EAAKoF,SAAStC,KAAI,SAAC4C,EAAQ4D,GAAT,OAAmB,EAAKI,UAAU,CAAEhE,SAAO7B,OAAQ7D,EAAKoF,SAAW,IAAI1D,OAAQ4H,eAI3JtJ,EAAKmF,OACL,4BACI,0BAAM2B,UAAU,OAAOI,QAAS,SAACqC,GAAD,OAAQ,EAAKI,SAASJ,EAAGvJ,KAAzD,IAAkEA,EAAKmF,MAAM7B,KAA7E,MAIRtD,EAAK8D,aACL,4BACI,kCAAQ9D,EAAK8D,YAAb,S,+BAOPyF,GACLvC,KAAK4C,SAAS,CACVP,cAAgBrC,KAAKX,MAAMvH,KAAKuG,MAAMtC,KAAK8B,QAAO,qBAAEvB,KAAeuG,cAAcC,QAAQ,OAAI,KAAK3J,QAAQoJ,EAAGQ,OAAOC,MAAMH,gBAAkB,S,iCAKhJ7C,KAAK4C,SAAS,CAAEtB,MAA8B,KAArBtB,KAAK1I,MAAMgK,MAAc,GAAK,M,+BAGjD,IAAD,OACGxJ,EAASkI,KAAKX,MAAdvH,KACR,GAAIA,EAAK4E,OACL,OACI,oCACI,yBAAKoD,UAAU,aACX,yBAAKA,UAAU,UACX,2BAAOtI,KAAK,OAAOyL,YAAY,SAASC,SAAU,SAACX,GAAS,EAAKY,SAASZ,OAE9E,2BAAOzC,UAAU,SACb,+BACI,wBAAIA,UAAU,UACV,wBAAIsD,MAAM,QACTtL,EAAKuG,MAAMC,KAAKxC,KAAI,SAAArC,GAAC,OAAK,wBAAIP,IAAKO,GAAIA,QAGhD,iCACOuG,KAAK1I,MAAM+K,eAAiB,IAAI3H,OAAS,EAAIsF,KAAK1I,MAAM+K,cAAgBvK,EAAKuG,MAAMtC,MAAMD,KAAI,SAACrC,EAAE6I,GAC/F,OAAI,EAAKhL,MAAMgK,MACHgB,GAAS,EAAKhL,MAAMgK,OAAU,EAAK+B,WAAW5J,EAAE6I,GAEjD,EAAKe,WAAW5J,EAAE6I,QAKvCtC,KAAKX,MAAMiC,OAAS,4BAAQxB,UAAU,aAAaI,QAASF,KAAKsD,SAAS5C,KAAKV,OAA3D,QAA8F,KAArBA,KAAK1I,MAAMgK,MAAc,OAAS,c,GAhHjIT,IAAMC,YA8HfC,gBANS,SAACzJ,GACrB,MAAO,CACHS,OAAQT,EAAMS,UAIiB,CAAEqH,UAAQK,aAAlCsB,CAA+CqB,IC1HxDmB,G,mLAGEvD,KAAKX,MAAMG,QAAQ,CACf3H,IAAKmI,KAAKX,MAAMxH,Q,iDAIG2L,KAEjBA,EAAU1L,MAAQ,IAAI4E,QAAU,IAAIhC,UACpCsF,KAAKX,MAAMvH,MAAQ,IAAI4E,QAAU,IAAIhC,QACvCsF,KAAKX,MAAMxH,MAAQ2L,EAAU3L,KAE7BmI,KAAKX,MAAMG,QAAQ,CAAE3H,IAAK2L,EAAU3L,Q,+BAIlC,IACE6E,EAAWsD,KAAKX,MAAMvH,KAAtB4E,OADH,EAMDsD,KAAKX,MAHLvH,EAHC,EAGDA,KACA2K,EAJC,EAIDA,UACA1K,EALC,EAKDA,OAGJ,OAAI2E,EAEI,yBAAKoD,UAAU,YACX,kBAAC,GAAD,CACIT,MAAOvH,EACPC,OAAQA,EACR0K,UAAWA,IAEf,kBAAC,GAAD,CACI3K,KAAMA,EACN2K,UAAWA,KAMnB,kBAAC,EAAD,U,GA1CO5B,IAAMC,WAyDdC,gBATS,SAACzJ,GACrB,MAAO,CACHO,IAAKP,EAAMO,IACXC,KAAMR,EAAMQ,KACZC,OAAQT,EAAMS,OACd0K,UAAWnL,EAAMmL,aAIe,CACpCjD,UACAJ,WAFW2B,CAGZwC,IC/CYE,I,MAtBQ,SAAC,GAAY,IAE5B5E,EAF2B,EAAV/G,KAEjB+G,eAWJ,OACI,yBAAKiB,UAAU,mBACX,iCACwB4D,IAAnB7E,GAAgCA,EAAeT,QAAQtC,KAX/C,SAAC4C,GAClB,OACI,wBAAIxF,IAAKwF,EAAOlE,IACXkE,EAAOpC,aCElBqH,I,2LAGE3D,KAAKX,MAAMI,c,sCAGmC,IAAD,OAAlC5H,EAAkC,EAAlCA,IAAKyE,EAA6B,EAA7BA,KAAMmB,EAAuB,EAAvBA,OAAQW,EAAe,EAAfA,QAAS5D,EAAM,EAANA,GACvC,OACI,yBAAKsF,UAAU,iBAAiBI,QAAS,SAACqC,GAASA,EAAGC,kBAAmB,EAAKnD,MAAMD,QAAQ,CAACvH,IAAMA,KAASqB,IAAKsB,GAC7G,yBAAKsF,UAAU,QAAQK,MACnB,CAAEC,gBAAgB,OAAD,OAAS3C,EAAO/C,QAAU+C,EAAO,GAAG4C,IAApC,KAA4CC,eAAgB,QAASC,mBAAmB,mBAE7G,yBAAKT,UAAU,YAAYI,QAAS,SAACqC,GAASA,EAAGC,kBAAmB,EAAKnD,MAAMtH,OAAOwD,KAAK,CAAE1D,IAAMA,MAC/F,mCACA,uBAAGiI,UAAU,cAAcxD,GAC3B,2BAAOwD,UAAU,YAAYI,QAAS,SAACqC,GAASA,EAAGC,kBAAmB,EAAKnD,MAAMD,QAAQ,CAACvH,IAAMuG,EAAQ,GAAGvG,QAAUuG,EAAQ,GAAG9B,U,mCAM/G,IAAtByC,EAAqB,EAArBA,QAAQvH,EAAa,EAAbA,KAAKmG,EAAQ,EAARA,MACpB,OACI,oCACI,gCAAMoB,EAAN,KACA,yBAAKe,UAAU,aAAa5G,IAAK1B,GAC5BmG,EAAM7B,IAAIkE,KAAKS,aAAaC,KAAKV,W,+BAMxC,IACE9H,EAAS8H,KAAKX,MAAdnH,KACR,OAAGA,GAAQqF,OAAOoD,KAAKzI,GAAMwC,OAErB,yBAAKoF,UAAU,QACVvC,OAAOC,OAAOtF,GAAM4D,IAAIkE,KAAKY,UAAUF,KAAKV,QAKjD,kBAAC,EAAD,U,GA1CGa,IAAMC,YAsDVC,gBANS,SAACzJ,GACrB,MAAO,CACHS,OAAQT,EAAMS,UAIkB,CACpCqH,UACAK,aAFWsB,CAGZ4C,ICxDGC,G,mLAEE5D,KAAKX,MAAMG,QAAQ,CAAE3H,IAAKmI,KAAKX,MAAMxH,Q,yCAEtB2L,KAETA,EAAU1L,MAAQ,IAAI4E,QAAU,IAAIhC,UACpCsF,KAAKX,MAAMvH,MAAQ,IAAI4E,QAAU,IAAIhC,QACvCsF,KAAKX,MAAMxH,MAAQ2L,EAAU3L,KAE7BmI,KAAKX,MAAMG,QAAQ,CAAE3H,IAAK2L,EAAU3L,Q,+BAGlC,IAAD,EACoBmI,KAAKX,MAAtBvH,EADH,EACGA,KAAMC,EADT,EACSA,OAEd,OADmBD,EAAX4E,OAGA,yBAAKoD,UAAU,UACX,kBAAC,GAAD,CAAiB/H,OAAQA,EAAQsH,MAAOvH,IACxC,yBAAKgI,UAAU,sBACX,kBAAC,GAAD,CAAWhI,KAAMA,EAAMwJ,MAAM,MAC7B,kBAAC,GAAD,CAAgBxJ,KAAMA,KAE1B,kBAAC,GAAD,CAAMI,KAAMJ,EAAK8G,UAKrB,kBAAC,EAAD,U,GA7BKiC,IAAMC,WA2CZC,gBARS,SAACzJ,GACrB,MAAO,CACHO,IAAKP,EAAMO,IACXC,KAAMR,EAAMQ,KACZC,OAAQT,EAAMS,UAIkB,CACpCyH,UACAJ,WAFW2B,CAGZ6C,IC9CGC,I,wLAEE7D,KAAKX,MAAMyE,mB,+BAIX,OAAGvG,OAAOoD,KAAKX,KAAKX,MAAMnH,MAAMwC,QAAUsF,KAAKX,MAAMoD,UAE7C,kBAAC,GAAD,CAAMvK,KAAM8H,KAAKX,MAAMnH,OAIvB,kBAAC,EAAD,U,GAZU2I,IAAMC,YA0BjBC,gBARS,SAACzJ,GACrB,MAAO,CACHY,KAAMZ,EAAMY,KACZH,OAAQT,EAAMS,OACd0K,UAAYnL,EAAMmL,aAIc,CACpCqB,eT2O0B,WAC1B,OAAO,SAAAxE,GFvOAlF,IAAMC,IAAI,gDAAiD,CAC9DC,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,iBEqO1B2L,MAAM,YAAa,IAAXrG,EAAU,EAAVA,KA6BvB4B,EAAS,CACL9H,KAAO,mBACPC,QAAU,CACNuM,YAzBmB,SAAC5C,GACxB,IAAI1E,EAAS0E,EAASzD,MAAM7B,KAAI,SAAA9C,GAAI,OAAIA,EAAK4E,SAa7C,OAZAlB,EAASA,EAAOZ,KAAI,SAAA9C,GAEhB,OADAA,EAAKyE,OAASzE,EAAKmF,MAAMV,OAClB,CACHA,OAASzE,EAAKmF,MAAMV,OACpBnB,KAAOtD,EAAKsD,KACZzE,IAAMmB,EAAKnB,IACXsG,MAAQ,CACJtG,IAAMmB,EAAKmF,MAAMtG,KAErBuG,QAAUpF,EAAKoF,YAGhB,CACH5C,KAAO4F,EAAS5F,KAChB8F,MAAQF,EAASE,MACjBvC,QAAU,eACVpB,MAAQjB,EACRlF,KAAO,gBAMOyM,CAAmBvG,WS5QjD0B,WAFW2B,CAGZ8C,IC/BGK,I,yLAGElE,KAAKX,MAAMG,QAAQ,CACf3H,IAAKmI,KAAKX,MAAMxH,Q,+BAId,IACE6E,EAAWsD,KAAKX,MAAMvH,KAAtB4E,OADH,EAKDsD,KAAKX,MAFLvH,EAHC,EAGDA,KACA2K,EAJC,EAIDA,UAGJ,OAAI/F,EAEI,yBAAKoD,UAAU,YACX,kBAAC,GAAD,CACIT,MAAOvH,IAEX,kBAAC,GAAD,CACIA,KAAMA,EACN2K,UAAWA,KAMnB,kBAAC,EAAD,U,GA7BI5B,IAAMC,YA2CXC,gBARS,SAACzJ,GACrB,MAAO,CACHO,IAAKP,EAAMO,IACXC,KAAMR,EAAMQ,KACZ2K,UAAWnL,EAAMmL,aAIe,CACpCjD,UACAJ,WAFW2B,CAGZmD,IC5BYC,GAtBF,SAAC9E,GAAW,IACbxH,EAAQwH,EAARxH,IACR,OACQ,oCACKwH,EAAMxH,IAAIsB,QAAQ,UAAY,EAC3B,kBAAC,GAAD,MACAtB,EAAIsB,QAAQ,WAAa,EACzB,kBAAC,GAAD,MACAtB,EAAIsB,QAAQ,aAAe,EAC3B,kBAAC,GAAD,MACAtB,EAAIsB,QAAQ,SAAW,EACvB,kBAAC,EAAD,MACAtB,EAAIsB,QAAQ,iBAAmB,EAC/B,kBAAC,GAAD,MAEA,W,ktBCbpB,IAAMiL,GAAcC,KAAOzC,IAAV,KAGE0C,KA8BbC,G,wKACQnD,GACNpB,KAAKX,MAAMmF,MAAMpD,K,gCAEX9F,GACNW,QAAQC,IAAI,OAAOZ,K,+BAGnB0E,KAAKX,MAAMK,W,+BAEL,IAAD,OACL,OACI,kBAAC0E,GAAD,CAAajE,MAAO,CAACC,gBAAe,eAAWkE,IAAX,4BAA6DhE,eAAiB,UAC9G,yBAAKR,UAAU,mBACX,kBAAC,KAAD,CACIA,UAAU,MACV2E,SC1DA,mCD2DAC,YCzDuE,wDD0DvEC,UAAW,SAACvD,GAAe,EAAKuD,UAAUvD,IAC1CwD,UAAW5E,KAAK4E,UAChBxB,MdtDH,gM,GckCDvC,IAAMC,WAkCXC,gBANS,SAACzJ,GACrB,MAAO,CACHD,KAAOC,EAAMD,QAImB,CAAEmN,MZ0YrB,SAACpD,GAClB,OAAO,SAAA9B,IHvde,SAAC,GAA0C,IAAzClH,EAAwC,EAAxCA,aAAaG,EAA2B,EAA3BA,WAAWsM,EAAgB,EAAhBA,WAC1CnM,GAAa,IAAIG,MAAOC,UAAY,KAC1CT,aAAakH,QAAQ,eAAgBnH,GACrCC,aAAakH,QAAQ,aAAchH,GACnCF,aAAakH,QAAQ,aAAcsF,GACnCxM,aAAakH,QAAQ,aAAc7G,GACnCuD,QAAQC,IAAI,cGkdR4I,CAAW1D,GACX9B,EAAS,CACL9H,KAAO,QACPC,QAAU,CACNmI,QAAS,EACTxH,aAAeD,IAAaC,kBYjZIsH,UAAjCqB,CAA2CwD,IE2B3CQ,I,MAlGF,SAAC,GAAqD,IAApDpN,EAAmD,EAAnDA,UAAWyH,EAAwC,EAAxCA,QAASvH,EAA+B,EAA/BA,IAAamN,GAAkB,EAA1BtF,OAA0B,EAAlBsF,eAE3CzH,OAAOoD,KAAKhJ,GAAW+C,QAAUsK,GAAgBA,IAElD,IAAKC,EAAY,CACb,CACI3I,KAAM,OACNzE,IAAK,OACLqN,KAAM,uBAAGpF,UAAU,eAAb,SAOV,CACIqF,GAAI,wBAAIjM,IAAI,eAAe4G,UAAU,QAAjC,mBAER,CACIxD,KAAM,QACNzE,IAAK,gBAsBT,CACIsN,GAAI,oCAAE,wBAAIrF,UAAU,cAAiB,wBAAI5G,IAAI,iBAAiB4G,UAAU,QAAnC,kBAGvCuD,EAAa,SAACrK,GAChB,IAAMmJ,IAAiBnJ,GAAQ,IAAI+E,OAAS,IAAIoE,aAChD,OAAGnJ,EAAKmM,GACGnM,EAAKmM,GAGR,wBACIjM,IAAKF,EAAKnB,IACViI,UAAWjI,IAAQmB,EAAKnB,IAAM,SAAW,GACzCuN,aAAYjD,EAAY,gBAAYA,GAAgB,GACpD3H,GAAIxB,EAAKnB,IACTqI,QAAS,kBAAMd,EAAQ,CAAEvH,IAAKmB,EAAKnB,QAElCmB,EAAKkM,KAAOlM,EAAKkM,KAAO,GAP7B,IAOkClM,EAAKsD,OAKnD,OAAI3E,EAAUgG,OAAS,IAAIjD,OAEnB,wBAAIoF,UAAU,QACV,yBAAKA,UAAU,gBACX,yBAAKuF,QAAQ,eAAevF,UAAU,gBAAe,0BAAMwF,KAAK,eAAeC,EAAE,yuDACjF,0BAAMzF,UAAU,QAAO,uBAAGyB,KAAK,0DAAR,YAE3B,wBAAIzB,UAAU,cACd,yBAAKA,UAAU,eACVmF,EAAUnJ,KAAI,SAACrC,GAAD,OAAO4J,EAAW5J,OAErC,yBAAKqG,UAAU,qBACVnI,EAAUgG,MAAM7B,KAAI,SAACrC,GAAD,OAAO4J,EAAW5J,QAM/C,wBAAIqG,UAAU,QACV,yBAAKA,UAAU,eACVmF,EAAUnJ,KAAI,SAACrC,GAAD,OAAO4J,EAAW5J,UCpEtC+L,I,YAjBQ,SAAC,GAAyC,IAAtBC,EAAqB,EAAvCxN,cAAkBwN,cACjCC,MAAYD,GAAiB,IAAItH,OAAS,IAAIV,QAAU,IAAI,IAAM,IAAI4C,IACtEzC,GAAS6H,GAAiB,IAAInJ,KAC9BoC,KAAY+G,GAAiB,IAAIrH,SAAW,IAAI,IAAM,IAAI9B,KAChE,OACI,yBAAKwD,UAAU,oBACX,yBAAKA,UAAU,SACX,yBAAKgC,IAAK4D,EAAO3D,IAAK2D,KAE1B,yBAAK5F,UAAU,QACX,yBAAKA,UAAU,SAAQ,2BAAIlC,IAC3B,yBAAKkC,UAAU,kBAAkBpB,OCDlCiH,I,MARD,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,MAClB,OACI,yBAAK/F,UAAU,SACVlG,EAAoBiM,GAAgBD,MC6ClCE,GAlDQ,SAAC,GAA2B,IAA1B7N,EAAyB,EAAzBA,cAAc4N,EAAW,EAAXA,MAE/BE,EAGA9N,EAHA8N,OACAC,EAEA/N,EAFA+N,SACAP,EACAxN,EADAwN,cAJ0C,EAOtBQ,mBAAS,CAC7BL,MAAQ,EACRH,kBAT0C,mBAOzCnO,EAPyC,KAOlCsL,EAPkC,MAa1C6C,GAAiB,IAAIjL,MAAQlD,EAAMmO,eAAiB,IAAIjL,IACxDoI,EAAS,CACLgD,MAAO,EACPH,cAAgBA,IAIxB,IAAMS,EAAQ,SAACC,IACI,CACXC,MAAQ,kBAAMC,YAAW,WACrBzD,EAAS,CACLgD,MAAQtO,EAAMsO,MAAQ,IACtBH,oBAEL,MACHa,KAAO,YACS,IAAIF,OACZG,mB,GAAkBH,UAIvBD,MAWX,OARAK,qBAAU,WACFT,QAAuBrC,IAAbsC,EAEJD,GACNG,EAAM,QAFNA,EAAM,YAOV,kBAAC,GAAD,CAAON,MAAOtO,EAAMsO,MAAOC,MAAOA,KCvCpCY,G,mLAGMzG,KAAKX,MAAMtH,QACXiI,KAAKX,MAAMtH,OAAO2O,cACjB1G,KAAK2G,WACR3G,KAAK4G,gBAAgB5G,KAAKX,MAAMtH,U,+BAG7BT,GACL0I,KAAKX,MAAMwH,gBAAgBvP,K,sCASfS,GACRA,IAEJA,EAAO2O,YAAY,SAAS,mBrBTP,SAACjE,GAC1BxG,QAAQC,IAAI,mCAAoCuG,GAChDpK,aAAakH,QAAQ,YAAakD,GqBOeqE,CAAjB,EAAErE,cAE9B1K,EAAO2O,YAAY,uBAAwB1G,KAAKkD,SAASxC,KAAKV,OAE9DjI,EAAOgJ,UAEPf,KAAK2G,WAAY,K,yCAGD,IAAD,OACPZ,EAAW/F,KAAKX,MAAMpH,cAAtB8N,OACR,YAAcrC,IAAXqC,GAAwBA,EAEnB,4BACIjG,UAAU,gDACVI,QAAS,WACL,EAAKb,MAAMtH,OAAO2D,WAGtB,uBAAGoE,UAAU,iBAKjB,4BAAQA,UAAU,gDAAgDI,QAASF,KAAKX,MAAMtH,OAAO0D,OACzF,uBAAGqE,UAAU,eAAeI,QAASF,KAAKX,MAAMtH,OAAO0D,W,+BAM7D,IAAD,SAIDuE,KAAKX,MAFLtH,EAFC,EAEDA,OACAE,EAHC,EAGDA,cAGIwN,EAAkBxN,EAAlBwN,cAER,OACI,oCACI,yBAAK3F,UAAU,eACX,yBAAKA,UAAU,mBACX,kBAAC,GAAD,CAAS7H,cAAeA,KAE5B,yBAAK6H,UAAU,qBACX,yBAAKA,UAAU,oBACX,4BAAQA,UAAU,qBAAqBI,QAAS,WAAOnI,EAAOmD,SAAS,EAAK6L,SACxE,uBAAGjH,UAAU,qBAEhBE,KAAKgH,mBACN,4BAAQlH,UAAU,qBAAqBI,QAASnI,EAAOyD,MACnD,uBAAGsE,UAAU,qBAGrB,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CAAgB7H,cAAeA,IAC/B,yBAAK6H,UAAU,yBACX,yBAAKA,UAAU,yBAGd2F,GAAiB,IAAI3I,aAAe,kBAAC,GAAD,CAAO+I,OAAQJ,GAAiB,IAAI3I,sB,GAnFhF+D,IAAMC,WAoGhBC,gBARS,SAACzJ,GACrB,MAAO,CACHmL,UAAWnL,EAAMmL,UACjB1K,OAAST,EAAMS,OACfE,cAAgBX,EAAMW,iBAIU,CAAE4O,gBlBoYX,SAACvP,GAC5B,OAAO,SAAAgI,GAAa,IAEZ0G,EAUA1O,EAVA0O,SACArJ,EASArF,EATAqF,SACAoJ,EAQAzO,EARAyO,OACAkB,EAOA3P,EAPA2P,QACAC,EAMA5P,EANA4P,YANW,EAYX5P,EALA6P,aACI1B,EARO,EAQPA,cACA2B,EATO,EASPA,YACAC,EAVO,EAUPA,gBAIRpL,QAAQC,IAAI5E,GAEZgI,EAAS,CACL9H,KAAO,oBACPC,QAAU,CACNuO,WACArJ,WACAoJ,SACAkB,UACAC,cACAzB,gBACA2B,cACAC,wBkB/ZDtG,CAA8C0F,IC7FvD1G,G,kDACF,aAAe,IAAD,8BACV,gBAKKuH,WAAY,EANP,E,kDAcVtH,KAAKX,MAAMkI,YACXvH,KAAKsH,WAAY,I,oDAGhBtH,KAAKsH,YAA2C,IAA7BtH,KAAKX,MAAM3H,OAAOkI,QAAmBI,KAAKwH,Q,0CAE7C,IAAD,OAChBxQ,OAAOyQ,6BAA+B,WAClC,IAAMC,EAAW1Q,OAAOqB,aAAaC,QAAQ,YAE7C,EAAK+G,MAAMD,QAAQsI,EAAW,CAAE7P,IAAM6P,GAAY,O,qCAG3CnF,GACXtG,QAAQC,IAAIqG,K,+BAEN,IAAD,EASDvC,KAAKX,MAPL3H,EAFC,EAEDA,OACAG,EAHC,EAGDA,IACA6E,EAJC,EAIDA,OACAsI,EALC,EAKDA,aACAtF,EANC,EAMDA,OACAN,EAPC,EAODA,QACAzH,EARC,EAQDA,UAGJ,OAAID,EAAOkI,OAIH,yBAAKE,UAAU,QACX,yBAAKA,UAAU,gBACX,kBAAC,GAAD,CACIkF,aAAcA,EACdtF,OAAQA,EACRN,QAASA,EACTzH,UAAWA,EACXE,IAAKA,KAGb,yBAAKiI,UAAU,mBAIX,yBAAKA,UAAU,yBACX,kBAAC,GAAD,CACIjI,IAAKA,EACL6E,OAAQA,MAIpB,yBAAKoD,UAAU,uBACX,kBAAC,GAAD,QAzBL,kBAAC,GAAD,U,GA3CAe,IAAMC,WAsFVC,gBATS,SAACzJ,GACrB,MAAO,CACHD,KAAMC,EAAMD,KACZK,OAAQJ,EAAMI,OACdC,UAAWL,EAAMK,UACjBE,IAAKP,EAAMO,OAIqB,CACpC6H,SACAiI,QnBzEmB,WACnB,OAAO,SAAArI,GFHAlF,IAAMC,IAAI,gCAAiC,CAC9CC,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,iBEClC2L,MAAM,SAAArG,GACb4B,EAAS,CACL9H,KAAO,WACPC,QAAUiG,EAAKA,YmBqE3BsH,anByQwB,WACxB,OAAO,SAAA1F,GFpPAlF,IAAMC,IAAI,4DAA6D,CAC1EC,QAAU,CACN,eAAiB,mBACjB,+BAA4BnC,IAAaC,iBEkP7B2L,MAAK,YAAa,IAAXrG,EAAU,EAAVA,KACnB4B,EAAS,CACL9H,KAAO,gBACPC,QAAUiG,SmB7QtB0B,UACAmI,UnBsXqB,WACrB,OAAO,SAAAjI,GAEHA,EAAS,CACL9H,KAAO,aACPC,QAHW2E,SmB7XR2E,CAMZhB,ICrGG6H,G,kLAEE5H,KAAKX,MAAMwI,a,+BAGX,OACI,yBAAK/H,UAAU,OACX,kBAAC,GAAD,W,GAPEe,IAAMC,WAmBTC,gBANS,SAACzJ,GACrB,MAAO,CACHI,OAASJ,EAAMI,UAIiB,CAAEmQ,SpBwWlB,WACpB,OAAO,SAAAvI,GACHA,EAAS,CACL9H,KAAO,WACPC,QAAU,CACNmI,OAASnH,IACTL,aAAeD,IAAaC,mBoB9W7B2I,CAAuC6G,IClBtD,IAAME,GAAQC,YACZC,EAASC,YACPC,KCVG,YACH,OADiC,EAAZC,SACd,SAAA3M,GAAI,OAAI,SAAAjE,GASX,OANoBiE,EAAKjE,SDWjC6Q,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,OAEFQ,SAASC,eAAe,S1B8GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3E,MAAK,SAAA4E,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7M,QAAQ6M,MAAMA,EAAM/J,c","file":"static/js/main.da397b05.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst GET_USER = 'GET_USER';\nconst GET_PLAYLISTS = 'GET_PLAYLISTS';\nconst GET_HOME = 'GET_HOME';\nconst SET_VIEW = 'SET_VIEW';\nconst GET_VIEW = 'GET_VIEW';\nconst CLEAR_VIEW = 'CLEAR_VIEW';\nconst GET_PLAYER = 'GET_PLAYER';\nconst SET_CURRENT_STATE = 'SET_CURRENT_STATE';\nconst GET_SAVED_TRACKS = 'GET_SAVED_TRACKS';\nconst GET_FEATURED_PLAYLISTS = 'GET_FEATURED_PLAYLISTS';\nconst LOGIN = 'LOGIN';\nconst LOGOUT = 'LOGOUT';\nconst ISLOGGED = 'ISLOGGED';\n\nconst userReducer = (state={},action) => {\n    if(action.type === GET_USER) {\n        return { ...state , ...action.payload };\n    }\n    if(action.type === LOGOUT) {\n        return {};\n    }\n    return state;\n}\n\nconst homeReducer = (state={},action) => {\n    if(action.type === GET_HOME) {\n        return { ...state , ...action.payload };\n    }\n    return state;\n}\n\nconst featuredPaylistReducer = (state={},action) => {\n    if(action.type === GET_FEATURED_PLAYLISTS) {\n        return { ...state , ...action.payload };\n    }\n    return state;\n}\n\nconst playlistsReducer = (state={},action) => {\n    if(action.type === GET_PLAYLISTS) {\n        return { ...state , ...action.payload };\n    }\n    if(action.type === LOGOUT) {\n        return {};\n    }\n    return state;\n}\n\nconst loginReducer = (state={},action) => {\n    if(action.type === ISLOGGED) {\n        return action.payload;\n    }\n    if(action.type === LOGIN) {\n        return action.payload;\n    }\n    if(action.type === LOGOUT) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst uriReducer = (state='home',action) => {\n    if(action.type === SET_VIEW) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst viewReducer = (state=[],action) => {\n    if(action.type === GET_VIEW) {\n        return action.payload;\n    }\n    if(action.type === CLEAR_VIEW ) {\n        return [];\n    }\n    return state;\n}\n\nconst playerReducer = (state={},action) => {\n    if(action.type === GET_PLAYER) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst currentStateReducer = (state={},action) => {\n    if(action.type === SET_CURRENT_STATE) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst gridReducer = (state={},action) => {\n    if(action.type === GET_SAVED_TRACKS) {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    user : userReducer,\n    logged : loginReducer,\n    playlists : playlistsReducer,\n    home : homeReducer,\n    uri : uriReducer,\n    view : viewReducer,\n    player : playerReducer,\n    featured_paylists : featuredPaylistReducer,\n    current_state : currentStateReducer,\n    grid : gridReducer\n});\n","export const setSession = ({access_token,token_type,expires_in}) => {\n    const expires_at = new Date().valueOf() + 3600000;\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('expires_at', expires_at);\n    console.log('setsession')\n}\n\nexport const removeSession = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('expires_at');\n    console.log('removesession')\n}\n\nexport const getSession = () => {\n    return {\n        access_token : localStorage.getItem('access_token'),\n        token_type : localStorage.getItem('token_type')\n    }\n}\n\nexport const set_device_id = (device_id) => {\n    console.log('Ready - Device ID - Localstorage', device_id);\n    localStorage.setItem('device_id', device_id);\n}\n\nexport const get_device_id = () => {\n    return localStorage.getItem('device_id')\n}\n\nexport const isAuthenticated = () => {\n    let expires_at = JSON.parse(localStorage.getItem('expires_at'));\n    return expires_at && new Date().valueOf() < expires_at;\n}\n\nexport const orderList = (item,arr) => {\n    const key = arr.indexOf(item)\n    let before = [],newArr = [], found = false;\n    arr.forEach((n,i) => {\n        if(i === key) found = true;\n        if(!found) {\n            before.push(n);\n        } else {\n            if(!newArr.includes(n)) {\n                newArr.push(n);\n            }\n        }\n    });\n\n    before.forEach(i => {\n        newArr.push(i);\n    });\n\n    return newArr;\n}\n\nexport const formatTrackDuration = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n}\n\nexport const delay = async (time) => {\n    return new Promise((resolve) => {\n        setTimeout(resolve,time);\n    })\n}\n","import axios from 'axios';\n\nimport { getSession } from '../utils';\n\n/**\n * Scope to provide the right acess to information\n * @type scope\n */\nexport const scope = 'user-read-private user-library-read user-read-playback-state user-read-playback-position user-modify-playback-state user-top-read user-read-recently-played streaming user-read-email'\n\n/**\n * Basic request with the token provided\n * @function get\n * @param request url\n * @return {Promise}\n */\nexport const get = (url) => {\n    return axios.get(url, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user data\n * @function get_user\n * @return {Promise}\n */\nexport const get_user = () => {\n    return axios.get('https://api.spotify.com/v1/me', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request user's saved tracks\n * @function get_saved_tracks\n * @return {Promise}\n */\nexport const get_saved_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/tracks?limit=30', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_featured_playlist\n * @return {Promise}\n */\nexport const get_featured_playlist = () => {\n    return axios.get('https://api.spotify.com/v1/browse/featured-playlists?country=CA&limit=4', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const get_current_track = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the top artists list\n * @function top_artists\n * @return {Promise}\n */\nexport const top_artists = () => {\n    return axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the recently listened music of the user\n * @function get_recently_tracks\n * @return {Promise}\n */\nexport const get_recently_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Retrieves the devices avaiable\n * @function get_devices\n * @return {Promise}\n */\nexport const get_devices = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/devices', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user's playlists\n * @function get_playlists\n * @return {Promise}\n */\nexport const get_playlists = () => {\n    return axios.get('https://api.spotify.com/v1/me/playlists?limit=30&offset=0', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a album\n * @function get_album\n * @return {Promise}\n */\nexport const get_album = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/albums/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist's albums\n * @function get_artists_albums\n * @return {Promise}\n */\nexport const get_artists_albums = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/albums`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_cover_image\n * @return {Promise}\n */\nexport const get_playlist_cover_image = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/images`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_items\n * @return {Promise}\n */\nexport const get_playlist_items = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/tracks`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_a_playlist\n * @return {Promise}\n */\nexport const get_a_playlist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/playlists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n/**\n * Request for a get_artist_top_tracks\n * @function get_artist_top_tracks\n * @return {Promise}\n */\nexport const get_artist_top_tracks = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/top-tracks?country=BR`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist\n * @function get_artist\n * @return {Promise}\n */\nexport const get_artist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a artist related artists\n * @function get_related_artists\n * @return {Promise}\n */\nexport const get_related_artists = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1] + '/related-artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_track\n * @return {Promise}\n */\nexport const get_track = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/tracks/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n","import { orderList, getSession, get_device_id } from \"../utils\";\n\nconst init = () => {\n    console.log('____init___');\n    const player = new window.Spotify.Player({\n        playerInstance: new window.Spotify.Player({ name: 'Kenjicas Player' }),\n        name: 'Kenjicas Player',\n        getOAuthToken: callback => callback(getSession().access_token)\n    });\n\n    player.play = play;\n    player.next = next;\n    player.previous = previous;\n    player.pause = pause;\n    player.resume = resume;\n\n    return player;\n}\n\nconst previous = (lastUri) => {\n    try {\n        fetch('https://api.spotify.com/v1/me/player/previous',{\n            method : 'POST',\n            headers : {\n                'content-type' : 'application/json',\n                'authorization' : `${getSession().token_type} ${getSession().access_token}`\n            }\n        });\n    } catch(err) {\n        play({uri : lastUri})\n    }\n\n}\n\nconst next = () => {\n    fetch('https://api.spotify.com/v1/me/player/next',{\n        method : 'POST',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst pause = () => {\n    fetch('https://api.spotify.com/v1/me/player/pause',{\n        method : 'PUT',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst resume = async () => {\n   fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n       method: 'PUT',\n       headers: {\n           'Content-Type': 'application/json',\n           'Authorization': `Bearer ${getSession().access_token}`\n       }\n   });\n}\n\nconst play = async ({uri,uris}) => {\n    let queue = orderList(uri,(uris || []).map(({uri}) => uri));\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${get_device_id()}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris : queue.length ? queue : [uri] }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\nexport default {\n    init\n}\n","import {\n    setSession,getSession,\n    removeSession,\n    isAuthenticated,\n    formatTrackDuration\n} from '../utils';\n\nimport {\n    get_user,\n    get_saved_tracks,\n    get_devices,\n    get_playlists,\n    get_recently_tracks,\n    get_a_playlist,\n    get_featured_playlist,\n    top_artists,\n    get_album,\n    get_playlist_items,\n    get_artist,\n    get_related_artists,\n    get_artists_albums,\n    get_playlist_cover_image,\n    get_artist_top_tracks,\n} from '../api';\n\nimport Player from '../api/player';\n\n/**\n * Retrieves user information\n *\n * @function getUser\n * @return {Void}\n */\nexport const getUser = () => {\n    return dispatch => {\n        get_user().then( data => {\n            dispatch({\n                type : 'GET_USER',\n                payload : data.data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves home data\n *\n * @function getHome\n * @return {Void}\n */\nexport const getHome = () => {\n    return async dispatch => {\n        const promises = [get_recently_tracks(),get_featured_playlist(),top_artists()];\n        const [ { data : recentlyTracks }, { data : featuredPlaylists }, { data : topArtists } ] = await Promise.all(Object.values(promises));\n        /**\n         * Model array of recently tracks to albums for the homepage view\n         *\n         * @function factoryRecentlyTracks\n         * @return {Void}\n         */\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                next : response.next,\n                limit : response.limit,\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (response) => {\n            return {\n                message : response.message,\n                items : response.playlists.items,\n                type : 'playlists'\n            }\n        }\n        /**\n         * Model user's top artists response for the homepage view\n         *\n         * @function factoryTopArtists\n         * @return {Void}\n         */\n        const factoryTopArtists = (response) => {\n            return {\n                message : 'Top Artists',\n                items : response.items,\n                type : 'top-artists'\n            };\n        }\n\n        dispatch({\n            type : 'GET_HOME',\n            payload : {\n                recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n                featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                top_artists : factoryTopArtists(topArtists)\n            }\n        });\n    }\n}\n\nconst totalDuration = (tracks) => {\n    if(!tracks) return false;\n    let initialValue = 0;\n    const duration = tracks.reduce((total,{duration_ms}) => total + duration_ms,initialValue);\n\n    return formatTrackDuration(Math.floor(duration / 60));\n}\n\nconst fetchPlaylist = async (uri) => {\n    let playlistData = {};\n    const promises = {\n        playlist : get_playlist_items({uri}),\n        playlistInfo : get_a_playlist({uri}),\n        playlistCover : get_playlist_cover_image({uri}),\n    }\n    const [ playlist, playlistInfo, playlistCover ] = await Promise.all(Object.values(promises));\n\n    playlistData.type = 'playlist';\n    playlistData.images = playlistCover.data;\n    playlistData.id = playlist.data.id;\n    playlistData.tracks = playlist.data.items.map((i) => i.track).filter((i) => i);\n\n    playlistData.total_duration = totalDuration(playlistData.tracks);\n    playlistData.owner = playlistInfo.data.owner;\n    playlistData.followers = playlistInfo.data.followers.total;\n    playlistData.name = playlistInfo.data.name;\n    playlistData.description = playlistInfo.data.description;\n    playlistData.public = playlistInfo.data.public;\n\n\n    playlistData.tracks = playlistData.tracks.map(i => {\n        return {\n            id : i.id,\n            name : i.name,\n            duration_ms : formatTrackDuration(i.duration_ms),\n            album : i.album,\n            artists : i.artists,\n            uri : i.uri,\n        }\n    });\n\n    playlistData.table = {\n        head :  ['name','artist','album','duration'],\n        body  : playlistData.tracks\n    }\n\n    return playlistData;\n}\n\nconst fetchAlbum = async (uri) => {\n    let album = {};\n    const {data} = await get_album({uri});\n\n    album.type = 'album';\n    album.name = data.name;\n    album.total_duration = totalDuration(data.tracks.items);\n\n    album.tracks = data.tracks.items.map((i) => {\n        return {\n            id : i.id,\n            name : i.name,\n            duration_ms : formatTrackDuration(i.duration_ms),\n            uri : i.uri,\n            artists : i.artists\n        }\n    });\n\n\n    album.images = data.images;\n\n    album.table = {\n        head :  ['name','artist','duration'],\n        body  : album.tracks\n    }\n\n\n    return album;\n}\n\nconst fetchArtist = async (uri) => {\n    const ids = [];\n    let artist = {};\n    const { data } = await get_artist({uri});\n    const { data : topTracks } = await get_artist_top_tracks({uri});\n    const { data : albums } = await get_artists_albums({uri});\n    const { data : relatedArtists } = await get_related_artists({uri});\n\n    artist.type = 'artist';\n    artist.name = data.name;\n    artist.images = data.images;\n\n    if(!artist.tracks) {\n        artist.tracks = topTracks.tracks;\n    }\n\n    artist.tracks = artist.tracks.map(i => {\n        return {\n            id : i.id,\n            name : i.name,\n            duration_ms : formatTrackDuration(i.duration_ms),\n            uri : i.uri\n        }\n    });\n\n    artist.albums = {\n        artistAlbums : {\n            message : 'Albums',\n            type : 'artist',\n            items : albums.items.filter(i => {\n                if(!ids.includes(i.name) && i.album_type === 'album') {\n                    ids.push(i.name);\n                    return true;\n                }\n                return false;\n            })\n        },\n        artistSingles : {\n            message : 'Singles',\n            type : 'artist',\n            items : albums.items.filter(i => {\n                if(!ids.includes(i.name) && i.album_type === 'single') {\n                    ids.push(i.name);\n                    return true;\n                }\n                return false;\n            })\n        }\n    };\n\n    artist.table = {\n        head :  ['Popular'],\n        body  : artist.tracks\n    }\n\n    artist.relatedArtists = relatedArtists;\n\n    return artist;\n}\n\nconst getViewRoute = async ({uri}) => {\n    let content;\n    if(uri.split(':').indexOf('album') >= 0) {\n        content = await fetchAlbum(uri);\n    } else if(uri.split(':').indexOf('playlist') >= 0) {\n        content = await fetchPlaylist(uri);\n    } else if(uri.split(':').indexOf('artist') >= 0) {\n        content = await fetchArtist(uri);\n    }\n\n    return content;\n}\n\n/**\n * Retrieves user's saved tracks\n *\n * @function getSavedTracks\n * @return {Void}\n */\nexport const getSavedTracks = () => {\n    return dispatch => {\n        get_saved_tracks().then( ({data}) => {\n            /**\n             * Model array of recently tracks to albums for the saved tracks\n             *\n             * @function factorySavedTracks\n             * @return {Void}\n             */\n            const factorySavedTracks = (response) => {\n                let tracks = response.items.map(item => item.track);\n                tracks = tracks.map(item => {\n                    item.images = item.album.images;\n                    return {\n                        images : item.album.images,\n                        name : item.name,\n                        uri : item.uri,\n                        album : {\n                            uri : item.album.uri\n                        },\n                        artists : item.artists\n                    };\n                });\n                return {\n                    next : response.next,\n                    limit : response.limit,\n                    message : 'Saved Tracks',\n                    items : tracks,\n                    type : 'saved-tracks'\n                }\n            }\n            dispatch({\n                type : 'GET_SAVED_TRACKS',\n                payload : {\n                    savedTracks : factorySavedTracks(data)\n                }\n            });\n        })\n    }\n}\n\n/**\n * Retrieves featured playlists from a country\n *\n * @function getFeaturedPlaylist\n * @return {Void}\n */\nexport const getFeaturedPlaylist = () => {\n    return dispatch => {\n        get_featured_playlist().then( data => {\n            dispatch({\n                type : 'GET_FEATURED_PLAYLISTS',\n                payload : data.data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves a playlist\n *\n * @function getPlaylist\n * @return {Void}\n */\nexport const getPlaylist = (id) => {\n    return async dispatch => {\n        let {data} = await get_a_playlist(id);\n        dispatch({\n            type : 'GET_PLAYLIST',\n            payload : data\n        });\n    }\n}\n\n/**\n * Retrieves devices avaiable\n *\n * @function getDevices\n * @return {Void}\n */\nexport const getDevices = () => {\n    return dispatch => {\n        get_devices().then(({data}) => {\n            dispatch({\n                type : 'GET_DEVICES',\n                payload : data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves user's playlists\n *\n * @function getPlay    lists\n * @return {Void}\n */\nexport const getPlaylists = () => {\n    return dispatch => {\n        get_playlists().then(({data}) => {\n            dispatch({\n                type : 'GET_PLAYLISTS',\n                payload : data\n            });\n        })\n    }\n}\n\n/**\n * Verifies if the user is logged\n * @function isLogged\n * @return {Void}\n */\nexport const isLogged = () => {\n    return dispatch => {\n        dispatch({\n            type : 'ISLOGGED',\n            payload : {\n                status : isAuthenticated(),\n                access_token : getSession().access_token\n            }\n        });\n    }\n}\n\n/**\n * Sets the app's view ( browse,home,playlists,album )\n * @function setView\n * @param props contains the uri of a song or playlist\n * @return {Void}\n */\nexport const setView = (props) => {\n    return async dispatch => {\n        // salve o ultimo tpl acessado\n        (props || {}).uri && window.localStorage.setItem('last_uri',props.uri);\n        dispatch({\n            type : 'SET_VIEW',\n            payload : (props || {}).uri || 'home'\n        });\n    }\n}\n\n/**\n * Return object for a template\n * @function getView\n * @return {Void}\n */\nexport const getView = ({uri}) => {\n    return async dispatch => {\n        const view = await getViewRoute({uri});\n        dispatch({\n            type : 'GET_VIEW',\n            payload : view\n        });\n    }\n}\n\n/**\n * Return a empty array\n * @function clearView\n * @return {Void}\n */\nexport const clearView = () => {\n    return dispatch => {\n        dispatch({\n            type : 'CLEAR_VIEW',\n            payload : []\n        });\n    }\n}\n\n/**\n * Clear the authorization data\n * @function logout\n * @return {Void}\n */\nexport const logout = () => {\n    return dispatch => {\n        removeSession();\n        dispatch({\n            type : 'LOGOUT',\n            payload : {\n                status : false,\n                access_token : false\n            }\n        });\n    }\n}\n\n/**\n * Sets token for the logged user\n * @function login\n * @param response authentication\n * @return {Void}\n */\nexport const login = (response) => {\n    return dispatch => {\n        setSession(response);\n        dispatch({\n            type : 'LOGIN',\n            payload : {\n                status : true,\n                access_token : getSession().access_token\n            }\n        });\n    }\n}\n\nexport const getPlayer = () => {\n    return dispatch => {\n        const player = Player.init();\n        dispatch({\n            type : 'GET_PLAYER',\n            payload : player\n        });\n    }\n}\n\n/**\n * Set current track and context data\n * @function setCurrentState\n * @param response changed state\n * @return {Void}\n */\nexport const setCurrentState = (state) => {\n    return dispatch => {\n        const {\n            position,\n            duration,\n            paused,\n            shuffle,\n            repeat_mode,\n            track_window : {\n                current_track,\n                next_tracks,\n                previous_tracks\n            }\n        } = state;\n\n        console.log(state);\n\n        dispatch({\n            type : 'SET_CURRENT_STATE',\n            payload : {\n                position,\n                duration,\n                paused,\n                shuffle,\n                repeat_mode,\n                current_track,\n                next_tracks,\n                previous_tracks\n            }\n        });\n    }\n}\n\n","import React from 'react';\n\nimport './style.scss';\n\nconst Loading = () => {\n    return (\n        <>\n            <div className=\"loading\">\n                <p>Loading...</p>\n            </div>\n        </>\n    )\n}\n\nexport default Loading;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport {\n    getHome,\n    setView\n} from \"../../actions\";\nimport Loading from \"../../components/loading\";\n\nclass Main extends React.Component {\n\n    componentDidMount() {\n        this.props.getHome();\n    }\n\n    renderAlbums(playlist) {\n        return (\n            <div className=\"album col-sm-3\" onClick={() => { this.props.setView({uri : playlist.uri}) }} key={playlist.id}>\n                <div className=\"image\" style={\n                    { backgroundImage: `url(${playlist.images.length && playlist.images[0].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                }></div>\n                <div className=\"card-body\">\n                    <p className=\"card-title\">{playlist.name}</p>\n                    <small className=\"card-text\">{playlist.description}</small>\n                </div>\n            </div>\n        )\n    }\n\n    renderRow(row) {\n        return (\n            <>\n                <h2> {row.message} </h2>\n                <div className=\"albums-row\" key={row.type}>\n                    {row.items.map(this.renderAlbums.bind(this))}\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        if(Object.keys(this.props.home).length) {\n            return (\n                <div className=\"home\">\n                    {Object.values(this.props.home).map(this.renderRow.bind(this))}\n                </div>\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        home: state.home\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getHome,\n    setView\n})(Main);\n","import React from 'react';\nimport Styled from 'styled-components';\n\nconst StyledHeader = Styled.div`\n        padding: 0 32px 24px;\n        margin-bottom: 15px;\n        display: flex;\n        align-items: center;\n        img {\n            width: 220px;\n        }\n\n        .info {\n            align-self: flex-end;\n            padding: 0 10px;\n            p { margin: 0; }\n            .info-type {\n                position: relative;\n                top: 5px;\n                text-transform: uppercase;\n                font-weight: 300;\n                font-size: 15px;\n            }\n            .info-name {\n                font-size: 82px;\n                line-height: 82px;\n                padding: 0.08em 0px;\n                font-weight: 600;\n                margin-bottom: 0;\n            }\n            .info-description {\n                max-width: 500px;\n            }\n            .info-details {\n                padding: 14px 0;\n            }\n            .info-tracks {\n                margin-right: 4px;\n            }\n            .info-owner {\n                &:after {\n                    content:\"*\";\n                    padding: 0 6px;\n                }\n            }\n        }\n\n        .info-interactive {\n            .play {\n                cursor: pointer;\n                background: #1DB954;\n                border-radius: 15px;\n                font-size: 11px;\n                letter-spacing: 2px;\n                font-weight: bold;\n                width: 106px;\n                padding: 4px;\n                text-align: center;\n            }\n        }\n`\n\n\nconst TracklistHeader = ({props,player}) => {\n    const {\n        tracks,\n        images,\n        name,\n        description,\n        owner,\n        total_duration,\n        type\n    } = props;\n\n    const getDescription = (description) => {\n        return (\n            <>\n                <div dangerouslySetInnerHTML={{__html: description }} />\n            </>\n        )\n    }\n\n    const tracksDuration = () => {\n        return (\n            <span className=\"info-duration\">\n                {`- ${total_duration} hrs`}\n            </span>\n        )\n    }\n\n    const getSongsLenght = () => {\n        return (\n            <span className=\"info-tracks\">\n                {`${(tracks || []).length} songs`}\n            </span>\n        )\n    }\n\n    return (\n        <StyledHeader className=\"tracklist-header\">\n            {(images.length && images[0].url &&\n                <div className=\"artwork col-auto d-none d-lg-block\">\n                    <img src={images[0].url} alt={name || ''}/>\n                </div>\n            )}\n            <div className=\"col info d-flex flex-column\">\n                <strong className=\"info-type\">{type}</strong>\n                <h3 className=\"info-name\">{name}</h3>\n                    {getDescription(description)}\n                <div className=\"info-details\">\n                    {\n                        (owner || {}).display_name && (\n                            <span className=\"info-owner\">\n                                Created by <strong>{(owner || {}).display_name}</strong>\n                            </span>\n                        )\n                    }\n                        {type !== 'artist' && getSongsLenght() }\n                        { total_duration && tracksDuration() }\n                </div>\n                <div className=\"info-interactive\">\n                    <div className=\"play\" onClick={ () => { player.play({uris : (tracks || []) })}}> PLAY </div>\n                </div>\n            </div>\n        </StyledHeader>\n    )\n}\n\nexport default TracklistHeader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { setView,clearView } from './../../actions';\n\nclass Tracklist extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filteredItems : [],\n            limit : props.limit || null\n        }\n    }\n\n    componentWillUnmount() {\n        this.props.clearView();\n    }\n\n    setArtist ({ artist, total, index }) {\n        const { id, uri, name } = artist;\n        return (\n            <span\n                key={id+'#'+index}\n                onClick={(ev) => {\n                    ev.stopPropagation();\n                    this.props.setView({ uri });\n                }}\n            >\n                {total > 1 && index !== total - 1 ? `${name}, ` : name}\n            </span>\n        );\n    }\n\n    setAlbum(ev,item) {\n        ev.stopPropagation();\n        this.props.setView({ uri: item.album.uri });\n    }\n\n    renderList(item,index) {\n        return (\n            <tr\n                key={item.id+'#'+index}\n                onClick={() => {\n                    this.props.player.play({\n                        uri: item.uri,\n                        uris: this.props.view.tracks,\n                        device_id: this.props.device_id,\n                    });\n                }}\n            >\n                <td>\n                    <span><i className=\"play fas fa-play\"></i></span>\n                </td>\n                {\n                    item.name &&\n                    <td>\n                        <span>{item.name}</span>\n                    </td>\n                }\n                {\n                    item.artists &&\n                    <td>\n                        <span className=\"link\">{item.artists && Object.values(item.artists).map((artist, index) => this.setArtist({ artist,total: (item.artists || []).length, index }))}</span>\n                    </td>\n                }\n                {\n                    item.album &&\n                    <td>\n                        <span className=\"link\" onClick={(ev) => this.setAlbum(ev,item)}> {item.album.name} </span>\n                    </td>\n                }\n                {\n                item.duration_ms &&\n                <td>\n                    <span> {item.duration_ms} </span>\n                </td>\n                }\n            </tr>\n        );\n    }\n\n    onFilter(ev) {\n        this.setState({\n            filteredItems : this.props.view.table.body.filter(({name}) => name.toLowerCase().replace('ã','a').indexOf(ev.target.value.toLowerCase()) > -1 )\n        })\n    }\n\n    showMore() {\n        this.setState({ limit : +this.state.limit === 5 ? 10 : 5 });\n    }\n\n    render() {\n        const { view } = this.props;\n        if (view.tracks) {\n            return (\n                <>\n                    <div className=\"tracklist\">\n                        <div className=\"filter\">\n                            <input type=\"text\" placeholder=\"Filter\" onChange={(ev) => { this.onFilter(ev) }} />\n                        </div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className=\"header\">\n                                    <th scope=\"col\"></th>\n                                    {view.table.head.map(i => (<th key={i}>{i}</th>))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {((this.state.filteredItems || []).length > 0 ? this.state.filteredItems : view.table.body).map((i,index) => {\n                                    if((this.state.limit)) {\n                                        return (index < +this.state.limit) && this.renderList(i,index);\n                                    } else {\n                                        return this.renderList(i,index);\n                                    }\n                                })}\n                            </tbody>\n                        </table>\n                        { this.props.limit && <button className=\"toggleShow\" onClick={this.showMore.bind(this)}>show {+this.state.limit === 5 ? 'more' : 'less' }</button>}\n                    </div>\n                </>\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps,{ setView,clearView })(Tracklist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { getView, setView } from \"../../actions\";\n\nimport TracklistHeader from \"../../components/tracklist-header\";\nimport Tracklist from \"../../components/tracklist\";\nimport Loading from \"../../components/loading\";\n\nclass Playlist extends React.Component {\n\n    componentWillMount() {\n        this.props.getView({\n            uri: this.props.uri\n        });\n    }\n\n    UNSAFE_componentWillUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).tracks || []).length &&\n            ((this.props.view || {}).tracks || []).length &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n\n    render() {\n        const { tracks } = this.props.view;\n        const {\n            view,\n            device_id,\n            player\n        } = this.props;\n\n        if (tracks) {\n            return (\n                <div className=\"playlist\">\n                    <TracklistHeader\n                        props={view}\n                        player={player}\n                        device_id={device_id}\n                    />\n                    <Tracklist\n                        view={view}\n                        device_id={device_id}\n                    />\n                </div>\n            );\n        } else {\n            return (\n                <Loading />\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        player: state.player,\n        device_id: state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView,\n})(Playlist);\n","import React from 'react';\n\nconst RelatedArtists = ({view}) => {\n    const {\n        relatedArtists\n    } = view;\n\n    const renderArtist = (artist) => {\n        return (\n            <li key={artist.id}>\n                {artist.name}\n            </li>\n        )\n    }\n\n    return (\n        <div className=\"related-artists\">\n            <ul>\n                {relatedArtists !== undefined && relatedArtists.artists.map(renderArtist)}\n            </ul>\n        </div>\n    )\n}\n\nexport default RelatedArtists;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport {\n    setView,\n    clearView\n} from \"../../actions\";\n\nimport Loading from \"./../loading\";\n\nclass Grid extends React.Component {\n\n    componentWillUnmount() {\n        this.props.clearView();\n    }\n\n    renderAlbums({ uri, name, images, artists, id }) {\n        return (\n            <div className=\"album col-sm-3\" onClick={(ev) => { ev.stopPropagation(); this.props.setView({uri : uri}) }} key={id}>\n                <div className=\"image\" style={\n                    { backgroundImage: `url(${images.length && images[0].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                }></div>\n                <div className=\"card-body\" onClick={(ev) => { ev.stopPropagation(); this.props.player.play({ uri : uri }) }}>\n                    <p>PLAY</p>\n                    <p className=\"card-title\">{name}</p>\n                    <small className=\"card-text\" onClick={(ev) => { ev.stopPropagation(); this.props.setView({uri : artists[0].uri}) }}>{artists[0].name}</small>\n                </div>\n            </div>\n        )\n    }\n\n    renderRow({message,type,items}) {\n        return (\n            <>\n                <h2> {message} </h2>\n                <div className=\"albums-row\" key={type}>\n                    {items.map(this.renderAlbums.bind(this))}\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        const { grid } = this.props;\n        if(grid && Object.keys(grid).length) {\n            return (\n                <div className=\"grid\">\n                    {Object.values(grid).map(this.renderRow.bind(this))}\n                </div>\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps, {\n    setView,\n    clearView\n})(Grid);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { getView, setView } from \"../../actions\";\n\nimport TracklistHeader from \"../../components/tracklist-header\";\nimport RelatedArtists from \"../../components/relatedArtists\";\nimport Tracklist from \"../../components/tracklist\";\nimport Loading from \"../../components/loading\";\nimport Grid from \"../../components/grid\";\n\nclass Artist extends React.Component {\n    componentWillMount() {\n        this.props.getView({ uri: this.props.uri });\n    }\n    componentDidUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).tracks || []).length &&\n            ((this.props.view || {}).tracks || []).length &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n    render() {\n        const { view, player } = this.props;\n        const { tracks } = view;\n        if (tracks) {\n            return (\n                <div className=\"artist\">\n                    <TracklistHeader player={player} props={view} />\n                    <div className=\"artist-top-related\">\n                        <Tracklist view={view} limit=\"5\" />\n                        <RelatedArtists view={view} />\n                    </div>\n                    <Grid grid={view.albums} />\n                </div>\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView\n})(Artist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport {\n    getSavedTracks,\n    setView\n} from \"../../actions\";\n\nimport Grid from \"../../components/grid\";\nimport Loading from \"../../components/loading\";\n\nclass SavedTracks extends React.Component {\n    componentDidMount() {\n        this.props.getSavedTracks();\n    }\n\n    render() {\n        if(Object.keys(this.props.grid).length && this.props.device_id) {\n            return (\n                <Grid grid={this.props.grid} />\n            );\n        } else {\n            return (\n                <Loading />\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        grid: state.grid,\n        player: state.player,\n        device_id : state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getSavedTracks,\n    setView\n})(SavedTracks);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { getView, setView } from \"../../actions\";\n\nimport TracklistHeader from \"../../components/tracklist-header\";\nimport Tracklist from \"../../components/tracklist\";\nimport Loading from \"../../components/loading\";\n\nclass Album extends React.Component {\n\n    componentWillMount() {\n        this.props.getView({\n            uri: this.props.uri\n        });\n    }\n\n    render() {\n        const { tracks } = this.props.view;\n        const {\n            view,\n            device_id\n        } = this.props;\n\n        if (tracks) {\n            return (\n                <div className=\"playlist\">\n                    <TracklistHeader\n                        props={view}\n                    />\n                    <Tracklist\n                        view={view}\n                        device_id={device_id}\n                    />\n                </div>\n            );\n        } else {\n            return (\n                <Loading />\n            );\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        device_id: state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView,\n})(Album);\n","import React from \"react\";\nimport Home from \"../../pages/home\";\nimport Playlist from \"../../pages/playlist\";\nimport Artist from \"../../pages/artist\";\nimport SavedTracks from \"../../pages/saved-tracks\";\nimport Album from \"../../pages/album\";\n\nconst View = (props) => {\n    const { uri } = props;\n    return (\n            <>\n                {props.uri.indexOf('album') >= 0 ? (\n                    <Album />\n                ) : uri.indexOf('artist') >= 0 ? (\n                    <Artist />\n                ) : uri.indexOf('playlist') >= 0 ? (\n                    <Playlist />\n                ) : uri.indexOf('home') >= 0 ? (\n                    <Home />\n                ) : uri.indexOf('saved-tracks') >= 0 ? (\n                    <SavedTracks />\n                ) : (\n                    'TRISTE'\n                )}\n            </>\n    );\n\n}\n\nexport default View;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SpotifyLogin from 'react-spotify-login';\nimport styled from 'styled-components';\n\nimport { clientId, redirectUri } from './../../config';\nimport { logout, login } from './../../actions';\nimport { scope } from './../../api';\n\nconst StyledLogin = styled.div`\n    @font-face {\n        font-family: 'Cooper Black';\n        src: url(${process.env.PUBLIC_URL}/assets/cooper_black.ttf);\n    }\n\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    font-family: \"Cooper Black\";\n    background: rgba(28,28,28);\n    border: 2em solid #ffffff;\n    color: #fff;\n    overflow: none;\n    height: 100vh;\n    text-align: center;\n\n    .title {\n        padding: 20px;\n        font-size: 2em;\n        p {\n            font-size: 22px;\n        }\n    }\n\n    .btn {\n        border: 1px solid #ffffff;\n        font-size: 17px;\n        color: #ffffff;\n    }\n`\n\nclass Login extends React.Component {\n    onSuccess(response) {\n        this.props.login(response);\n    }\n    onFailure(err) {\n        console.log('fail',err);\n    }\n    logout() {\n        this.props.logout();\n    }\n    render() {\n        return (\n            <StyledLogin style={{backgroundImage : `url('${process.env.PUBLIC_URL}/assets/background.jpg')`, backgroundSize : 'cover'}}>\n                <div className=\"login container\">\n                    <SpotifyLogin\n                        className=\"btn\"\n                        clientId={clientId}\n                        redirectUri={redirectUri}\n                        onSuccess={(response) => { this.onSuccess(response) }}\n                        onFailure={this.onFailure}\n                        scope={scope}\n                    />\n                </div>\n            </StyledLogin>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user : state.user\n    };\n}\n\nexport default connect(mapStateToProps, { login,logout })(Login);\n","export const clientId = '38a9d82012ce4dcc81269de4479a74fa'; // NOCOMMIT\nexport const clientSecret  = '31cafd8a23394dbfa3bc848199a97bfd'; // NOCOMMIT\nexport const redirectUri = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://kenjikatahira.github.io/react-spotify-player/';\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\n\nconst Menu = ({playlists, setView, uri, logout, getPlaylists}) => {\n    // Retorna a playlist do usuario\n    !Object.keys(playlists).length && getPlaylists && getPlaylists();\n    // Menu de itens fixos\n    let  menuItems = [\n        {\n            name: \"Home\",\n            uri: \"home\",\n            icon: <i className=\"fas fa-home\">home</i>,\n        },\n        // {\n        //     name: \"Browse\",\n        //     uri: \"browse\",\n        //     icon: <i className=\"fa fa-folder-open\" aria-hidden=\"true\"></i>,\n        // },\n        {\n            el: <li key=\"your-library\" className=\"lead\"> Your Library </li>\n        },\n        {\n            name: \"Saved\",\n            uri: \"saved-tracks\"\n        },\n        // {\n        //     name: \"Recently Played\",\n        //     uri: \"recently-played\"\n        // },\n        // {\n        //     name: \"Liked Songs\",\n        //     uri: \"liked-songs\"\n        // },\n        // {\n        //     name: \"Albums\",\n        //     uri: \"albums\"\n        // },\n        // {\n        //     name: \"Bands\",\n        //     uri: \"bands\"\n        // },\n        // {\n        //     name: \"Podcasts\",\n        //     uri: \"podcasts\"\n        // },\n        {\n            el: <><hr className=\"separator\"></hr><li key=\"lead-playlists\" className=\"lead\"> Playlists </li></>\n        }\n    ];\n    const renderList = (item) => {\n        const display_name = ((item || {}).owner || {}).display_name\n        if(item.el) {\n            return item.el;\n        } else {\n            return (\n                <li\n                    key={item.uri}\n                    className={uri === item.uri ? \"active\" : \"\"}\n                    data-owner={display_name ? ` * by ${display_name}`: \"\" }\n                    id={item.uri}\n                    onClick={() => setView({ uri: item.uri })}\n                >\n                    {item.icon ? item.icon : ''} {item.name}\n                </li>\n            );\n        }\n    }\n    if((playlists.items || []).length) {\n        return (\n            <ul className=\"menu\">\n                <div className=\"logo-wrapper\">\n                    <svg viewBox=\"0 0 1134 340\" className=\"spotify-logo\"><path fill=\"currentColor\" d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"></path></svg>\n                    <span className=\"made\"><a href=\"https://github.com/kenjikatahira/react-spotify-player/\">github</a></span>\n                </div>\n                <hr className=\"separator\"></hr>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n                <div className=\"playlists-wrapper\">\n                    {playlists.items.map((i) => renderList(i))}\n                </div>\n            </ul>\n        );\n    } else {\n        return (\n            <ul className=\"menu\">\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n            </ul>\n        );\n    }\n}\n\nMenu.propTypes = {\n    playlists : PropTypes.object,\n    uri : PropTypes.string,\n    setView : PropTypes.func,\n    logout : PropTypes.func\n}\n\nexport default Menu;\n","import React from 'react';\n\nimport './style.scss';\n\nconst NowPlayingInfo = ({current_state : { current_track }}) => {\n    const image = ((((current_track || {}).album || {}).images || [])[0] || {}).url;\n    const track = (current_track || {}).name;\n    const artist = (((current_track || {}).artists || [])[0] || {}).name;\n    return (\n        <div className=\"now-playing-info\">\n            <div className=\"image\">\n                <img src={image} alt={image} />\n            </div>\n            <div className=\"info\">\n                <div className=\"track\"><b>{track}</b></div>\n                <div className=\"playing-artist\">{artist}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default NowPlayingInfo;\n\n","import React from 'react';\n\nimport {formatTrackDuration} from './../../utils';\n\nimport './style.scss';\n\nconst Timer = ({count,fixed}) => {\n    return (\n        <div className=\"timer\">\n            {formatTrackDuration(fixed ? fixed : count)}\n        </div>\n    )\n}\n\nexport default Timer;\n\n","import React, { useState, useEffect } from 'react';\n\nimport Timer from '../timer';\n\nconst TimerContainer = ({current_state,fixed}) => {\n    const {\n        paused,\n        position,\n        current_track\n    } = current_state;\n\n    let [state, setState] = useState({\n        count : 0,\n        current_track\n    });\n\n    // se trocar a musica, zera a contagem\n    if((current_track || {}).id !== (state.current_track || {}).id) {\n        setState({\n            count: 0,\n            current_track : current_track\n        });\n    }\n\n    const timer = (cb) => {\n        const _timer = {\n            start : () => setTimeout(() => {\n                setState({\n                    count : state.count + 1000,\n                    current_track\n                });\n            }, 1000),\n            stop : () => {\n                if((this || {}).start) {\n                    clearTimeout(this.start);\n                }\n            }\n        }\n        _timer[cb]();\n    }\n\n    useEffect(() => {\n        if(!paused && position !== undefined)  {\n            timer('start');\n        } else if(paused){\n            timer('stop');\n        }\n    });\n\n    return (\n        <Timer count={state.count} fixed={fixed} />\n    )\n}\n\nexport default TimerContainer;\n\n","import React from 'react';\nimport './style.scss';\nimport { connect } from \"react-redux\";\nimport { setCurrentState } from '../../actions';\n\nimport Playing from '../nowPlayingInfo';\nimport TimerContainer from '../timerContainer';\nimport Timer from '../timer';\n\nimport { set_device_id } from './../../utils';\n\nclass NowPlaying extends React.Component {\n    componentDidUpdate() {\n        if(\n            this.props.player &&\n            this.props.player.addListener &&\n            !this.connected\n        ) this.configurePlayer(this.props.player);\n    }\n\n    onChange(state) {\n        this.props.setCurrentState(state);\n    }\n\n    /**\n     * Configure spotify player listeners\n     * @function configurePlayer\n     * @param player Spotify Player Instance\n     * @return {Void}\n     */\n    configurePlayer(player) {\n        if(!player) return;\n        // player -> instancia do spotify player\n        player.addListener('ready', ({device_id}) => set_device_id(device_id));\n        // update status - action\n        player.addListener('player_state_changed', this.onChange.bind(this));\n        // player connected\n        player.connect();\n        // connected\n        this.connected = true;\n    }\n\n    togglePlayButton() {\n        const { paused } = this.props.current_state;\n        if(paused === undefined || paused) {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary control-button play\"\n                    onClick={() => {\n                        this.props.player.resume()\n                    }}\n                >\n                    <i className=\"fas fa-play\"></i>\n                </button>\n            )\n        } else {\n            return (\n                <button className=\"btn btn-outline-secondary control-button play\" onClick={this.props.player.pause}>\n                    <i className=\"fas fa-pause\" onClick={this.props.player.pause}></i>\n                </button>\n            )\n        }\n    }\n\n    render() {\n        const {\n            player,\n            current_state\n        } = this.props;\n\n        const { current_track } = current_state;\n\n        return(\n            <>\n                <div className=\"now-playing\">\n                    <div className=\"playing-wrapper\">\n                        <Playing current_state={current_state} />\n                    </div>\n                    <div className=\"inner-now-playing\">\n                        <div className=\"controls-buttons\">\n                            <button className=\"btn control-button\" onClick={() => {player.previous(this.teste)}}>\n                                <i className=\"fas fa-backward\"></i>\n                            </button>\n                            {this.togglePlayButton()}\n                            <button className=\"btn control-button\" onClick={player.next}>\n                                <i className=\"fas fa-forward\"></i>\n                            </button>\n                        </div>\n                        <div className=\"playback-bar\">\n                            <TimerContainer current_state={current_state} />\n                            <div className=\"playback-progress-bar\">\n                                <div className=\"progress-bar-inner\"></div>\n                            </div>\n                            {\n                                (current_track || {}).duration_ms && <Timer fixed={(current_track || {}).duration_ms} />\n                            }\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        device_id: state.device_id,\n        player : state.player,\n        current_state : state.current_state\n    };\n};\n\nexport default connect(mapStateToProps, { setCurrentState })(NowPlaying);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport {\n    logout,\n    getUser,\n    getPlaylists,\n    setView,\n    getPlayer\n} from \"../../actions\";\n\nimport View from \"../view\";\nimport Login from \"../login\";\nimport Menu from \"../menu\";\nimport NowPlayingBar from \"../nowPlayingBar\";\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n        /**\n         * Aplication Initiated Flag\n         * @type {Boolean}\n         */\n        this.initiated = false;\n    }\n    /**\n     * Initial configuration\n     * @function run\n     * @return {Void}\n     */\n    run() {\n        this.props.getPlayer();\n        this.initiated = true;\n    }\n    UNSAFE_componentWillUpdate() {\n        !this.initiated  && this.props.logged.status === true && this.run();\n    }\n    componentDidMount() {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            const lastPage = window.localStorage.getItem('last_uri');\n            // Seta a primeira view\n            this.props.setView(lastPage ? { uri : lastPage} : '');\n        };\n    }\n    onSearchChange(ev) {\n        console.log(ev);\n    }\n    render() {\n        const {\n            logged,\n            uri,\n            tracks,\n            getPlaylists,\n            logout,\n            setView,\n            playlists\n        } = this.props;\n\n        if(!logged.status) {\n            return <Login />;\n        } else {\n            return (\n                <div className=\"main\">\n                    <div className=\"menu-wrapper\">\n                        <Menu\n                            getPlaylists={getPlaylists}\n                            logout={logout}\n                            setView={setView}\n                            playlists={playlists}\n                            uri={uri}\n                        />\n                    </div>\n                    <div className=\"browser-wrapper\">\n                        {/* <a class=\"github\" href=\"https://github.com/kenjikatahira/react-spotify-player\" target=\"_blank\" rel=\"noopener noreferrer\" >\n                            <img loading=\"lazy\" width=\"149\" height=\"149\" src=\"https://github.blog/wp-content/uploads/2008/12/forkme_right_white_ffffff.png?resize=149%2C149\" class=\"attachment-full size-full\" alt=\"Fork me on GitHub\" data-recalc-dims=\"1\" />\n                        </a> */}\n                        <div className=\"browser-inner-wrapper\">\n                            <View\n                                uri={uri}\n                                tracks={tracks}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"now-playing-wrapper\">\n                        <NowPlayingBar />\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        logged: state.logged,\n        playlists: state.playlists,\n        uri: state.uri\n    };\n};\n\nexport default connect(mapStateToProps, {\n    logout,\n    getUser,\n    getPlaylists,\n    setView,\n    getPlayer\n})(Main);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\n\nimport { isLogged } from './actions';\n\nimport Main from './components/main';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.isLogged();\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <Main></Main>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        logged : state.logged\n    };\n}\n\nexport default connect(mapStateToProps, { isLogged })(App);\n","import React from 'react';\nimport thunk from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport App from './App';\nimport {logger} from './middlewares';\n\nconst store = createStore(\n  reducers,applyMiddleware(\n    thunk,\n    logger\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { delay } from \"../utils\"\n\nexport function logger({ getState }) {\n    return next => action => {\n        // console.log('will dispatch', action)\n        // Call the next dispatch method in the middleware chain.\n        const returnValue = next(action)\n\n        // console.log('state after dispatch', getState())\n\n        // This will likely be the action itself, unless\n        // a middleware further in chain changed it.\n        return returnValue\n    }\n}\n"],"sourceRoot":""}