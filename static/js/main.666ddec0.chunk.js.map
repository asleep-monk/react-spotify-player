{"version":3,"sources":["logo.svg","serviceWorker.js","reducers/index.js","utils/index.js","api/index.js","api/player.js","actions/index.js","components/home/index.js","components/tracklist-header/index.js","components/tracklist/index.js","components/playlist/index.js","components/artist/index.js","components/view/index.js","components/login/index.js","config.js","components/menu/index.js","components/playing/index.js","components/timer/index.js","components/timerContainer/index.js","components/controls/index.js","components/main/index.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","combineReducers","user","state","action","type","payload","logged","playlists","device_id","home","uri","view","player","featured_paylists","current_state","getSession","access_token","localStorage","getItem","token_type","isAuthenticated","expires_at","JSON","parse","Date","valueOf","orderList","item","arr","key","indexOf","before","newArr","found","forEach","n","i","includes","push","formatTrackDuration","millis","minutes","Math","floor","seconds","toFixed","get_featured_playlist","axios","get","headers","get_album","id","split","length","get_playlist_cover_image","get_playlist_items","get_a_playlist","get_artist_top_tracks","get_artist","totalDuration","tracks","duration","reduce","total","duration_ms","fetchPlaylist","a","playlistData","promises","playlist","playlistInfo","playlistCover","Promise","all","Object","values","images","data","items","map","track","filter","total_duration","owner","followers","name","description","public","album","artists","table","head","body","fetchAlbum","fetchArtist","artist","topTracks","getView","content","previous","lastUri","console","log","fetch","method","err","play","next","pause","resume","uris","queue","stringify","init","setDeviceId","Spotify","Player","playerInstance","getOAuthToken","callback","setView","props","dispatch","setItem","Api","logout","removeItem","status","Main","this","getHome","className","onClick","style","backgroundImage","url","backgroundSize","backgroundPosition","row","message","renderAlbums","bind","keys","renderRow","React","Component","connect","recentlyTracks","featuredPlaylists","topArtists","factoryPlaylists","response","factoryTopArtists","ids","albums","limit","href","factoryRecentlyTracks","top_artists","StyledHeader","Styled","div","TracklistHeader","src","alt","display_name","Tracklist","filteredItems","index","ev","stopPropagation","setArtist","setAlbum","setState","toLowerCase","replace","target","value","placeholder","onChange","onFilter","scope","renderList","Playlist","nextProps","Artist","View","StyledLogin","styled","process","Login","login","clientId","redirectUri","onSuccess","onFailure","expires_in","setSession","Menu","getPlaylists","menuItems","icon","aria-hidden","el","data-owner","viewBox","class","fill","d","Playing","current_track","image","Timer","count","fixed","TimerContainer","paused","position","useState","timer","cb","start","setTimeout","stop","clearTimeout","useEffect","undefined","millisToMinutesAndSeconds","Controls","addListener","connected","configurePlayer","setCurrentState","teste","togglePlayButton","shuffle","repeat_mode","track_window","next_tracks","previous_tracks","initiated","currentTrack","getPlayer","run","onSpotifyWebPlaybackSDKReady","lastPage","getUser","then","App","isLogged","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.666ddec0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\n\nconst GET_USER = 'GET_USER';\nconst GET_PLAYLISTS = 'GET_PLAYLISTS';\nconst SET_DEVICE_ID = 'SET_DEVICE_ID';\nconst GET_HOME = 'GET_HOME';\nconst SET_VIEW = 'SET_VIEW';\nconst GET_FEATURED_PLAYLISTS = 'GET_FEATURED_PLAYLISTS';\nconst GET_VIEW = 'GET_VIEW';\nconst GET_PLAYER = 'GET_PLAYER';\nconst SET_CURRENT_STATE = 'SET_CURRENT_STATE';\n\nconst LOGIN = 'LOGIN';\nconst LOGOUT = 'LOGOUT';\nconst ISLOGGED = 'ISLOGGED';\n\nconst userReducer = (state={},action) => {\n    if(action.type === GET_USER) {\n        return { ...state , ...action.payload };\n    }\n    if(action.type === LOGOUT) {\n        return {};\n    }\n    return state;\n}\n\nconst homeReducer = (state={},action) => {\n    if(action.type === GET_HOME) {\n        return { ...state , ...action.payload };\n    }\n    return state;\n}\n\nconst featuredPaylistReducer = (state={},action) => {\n    if(action.type === GET_FEATURED_PLAYLISTS) {\n        return { ...state , ...action.payload };\n    }\n    return state;\n}\n\nconst playlistsReducer = (state={},action) => {\n    if(action.type === GET_PLAYLISTS) {\n        return { ...state , ...action.payload };\n    }\n    if(action.type === LOGOUT) {\n        return {};\n    }\n    return state;\n}\n\nconst loginReducer = (state={},action) => {\n    if(action.type === ISLOGGED) {\n        return action.payload;\n    }\n    if(action.type === LOGIN) {\n        return action.payload;\n    }\n    if(action.type === LOGOUT) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst uriReducer = (state='home',action) => {\n    if(action.type === SET_VIEW) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst deviceIdReducer = (state={},action) => {\n    if(action.type === SET_DEVICE_ID) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst viewReducer = (state=[],action) => {\n    if(action.type === GET_VIEW) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst playerReducer = (state={},action) => {\n    if(action.type === GET_PLAYER) {\n        return action.payload;\n    }\n    return state;\n}\n\nconst currentStateReducer = (state={},action) => {\n    if(action.type === SET_CURRENT_STATE) {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    user : userReducer,\n    logged : loginReducer,\n    playlists : playlistsReducer,\n    device_id : deviceIdReducer,\n    home : homeReducer,\n    uri : uriReducer,\n    view : viewReducer,\n    player : playerReducer,\n    featured_paylists : featuredPaylistReducer,\n    current_state : currentStateReducer\n});\n","export const setSession = ({access_token,token_type,expires_in}) => {\n    const expires_at = new Date().valueOf() + 3600000;\n    localStorage.setItem('access_token', access_token);\n    localStorage.setItem('token_type', token_type);\n    localStorage.setItem('expires_in', expires_in);\n    localStorage.setItem('expires_at', expires_at);\n    console.log('setsession')\n}\n\nexport const removeSession = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('token_type');\n    localStorage.removeItem('expires_in');\n    localStorage.removeItem('expires_at');\n    console.log('removesession')\n}\n\nexport const getSession = () => {\n    return {\n        access_token : localStorage.getItem('access_token'),\n        token_type : localStorage.getItem('token_type')\n    }\n}\n\nexport const isAuthenticated = () => {\n    let expires_at = JSON.parse(localStorage.getItem('expires_at'));\n    return expires_at && new Date().valueOf() < expires_at;\n}\n\nexport const orderList = (item,arr) => {\n    const key = arr.indexOf(item)\n    let before = [],newArr = [], found = false;\n    arr.forEach((n,i) => {\n        if(i === key) found = true;\n        if(!found) {\n            before.push(n);\n        } else {\n            if(!newArr.includes(n)) {\n                newArr.push(n);\n            }\n        }\n    });\n\n    before.forEach(i => {\n        newArr.push(i);\n    });\n\n    return newArr;\n}\n\nexport const formatTrackDuration = (millis) => {\n    var minutes = Math.floor(millis / 60000);\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\n    return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n}\n","import axios from 'axios';\n\nimport { getSession } from '../utils';\n\n/**\n * Scope to provide the right acess to information\n * @type scope\n */\nexport const scope = 'user-read-private user-library-read user-read-playback-state user-read-playback-position user-modify-playback-state user-top-read user-read-recently-played streaming user-read-email'\n\n/**\n * Basic request with the token provided\n * @function get\n * @param request url\n * @return {Promise}\n */\nexport const get = (url) => {\n    return axios.get(url, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user data\n * @function get_user\n * @return {Promise}\n */\nexport const get_user = () => {\n    return axios.get('https://api.spotify.com/v1/me', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_featured_playlist\n * @return {Promise}\n */\nexport const get_featured_playlist = () => {\n    return axios.get('https://api.spotify.com/v1/browse/featured-playlists?country=JP&limit=12', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the current track data\n * @function get_current_track\n * @return {Promise}\n */\nexport const get_current_track = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/currently-playing', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the top artists list\n * @function top_artists\n * @return {Promise}\n */\nexport const top_artists = () => {\n    return axios.get('https://api.spotify.com/v1/me/top/artists', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the recently listened music of the user\n * @function get_recently_tracks\n * @return {Promise}\n */\nexport const get_recently_tracks = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/recently-played', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Retrieves the devices avaiable\n * @function get_devices\n * @return {Promise}\n */\nexport const get_devices = () => {\n    return axios.get('https://api.spotify.com/v1/me/player/devices', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for the user's playlists\n * @function get_playlists\n * @return {Promise}\n */\nexport const get_playlists = () => {\n    return axios.get('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a album\n * @function get_album\n * @return {Promise}\n */\nexport const get_album = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/albums/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_cover_image\n * @return {Promise}\n */\nexport const get_playlist_cover_image = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/images`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_playlist_items\n * @return {Promise}\n */\nexport const get_playlist_items = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/playlists/${id[id.length-1]}/tracks`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_a_playlist\n * @return {Promise}\n */\nexport const get_a_playlist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/playlists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n/**\n * Request for a get_artist_top_tracks\n * @function get_artist_top_tracks\n * @return {Promise}\n */\nexport const get_artist_top_tracks = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get(`https://api.spotify.com/v1/artists/${id[id.length-1]}/top-tracks?country=BR`, {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n/**\n * Request for a playlist\n * @function get_artist\n * @return {Promise}\n */\nexport const get_artist = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/artists/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\n\n\n/**\n * Request for a playlist\n * @function get_track\n * @return {Promise}\n */\nexport const get_track = ({uri}) => {\n    const id = uri.split(':');\n    return axios.get('https://api.spotify.com/v1/tracks/' + id[id.length-1], {\n        headers : {\n            'content-type' : 'application/json',\n            'Authorization' : `Bearer ${getSession().access_token}`\n        }\n    });\n}\n","import {\n    get_album,\n    get_playlist_items,\n    get_artist,\n    get_playlist_cover_image,\n    get_artist_top_tracks,\n    get_a_playlist\n} from \"./index\";\n\nimport { orderList, getSession, formatTrackDuration } from \"../utils\";\n\nconst totalDuration = (tracks) => {\n    if(!tracks) return false;\n    let initialValue = 0;\n    const duration = tracks.reduce((total,{duration_ms}) => total + duration_ms,initialValue);\n\n    return formatTrackDuration(duration);\n}\n\nconst fetchPlaylist = async (uri) => {\n    let playlistData = {};\n    const promises = {\n        playlist : get_playlist_items({uri}),\n        playlistInfo : get_a_playlist({uri}),\n        playlistCover : get_playlist_cover_image({uri}),\n    }\n    const [ playlist, playlistInfo, playlistCover ] = await Promise.all(Object.values(promises));\n\n    playlistData.type = 'playlist';\n    playlistData.images = playlistCover.data;\n    playlistData.id = playlist.data.id;\n    playlistData.tracks = playlist.data.items.map((i) => i.track).filter((i) => i);\n\n    playlistData.total_duration = totalDuration(playlistData.tracks);\n    playlistData.owner = playlistInfo.data.owner;\n    playlistData.followers = playlistInfo.data.followers.total;\n    playlistData.name = playlistInfo.data.name;\n    playlistData.description = playlistInfo.data.description;\n    playlistData.public = playlistInfo.data.public;\n\n\n    playlistData.tracks = playlistData.tracks.map(i => {\n        return {\n            id : i.id,\n            name : i.name,\n            duration_ms : formatTrackDuration(i.duration_ms),\n            album : i.album,\n            artists : i.artists,\n            uri : i.uri,\n        }\n    });\n\n    playlistData.table = {\n        head :  ['name','artist','album','duration'],\n        body  : playlistData.tracks\n    }\n\n    return playlistData;\n}\n\nconst fetchAlbum = async (uri) => {\n    let album = {};\n    const {data} = await get_album({uri});\n    album.type = 'album';\n    album.tracks = data.tracks.items.filter((i) => i);\n    return album;\n}\n\nconst fetchArtist = async (uri) => {\n    let artist = {};\n    const { data } = await get_artist({uri});\n    const { data : topTracks } = await get_artist_top_tracks({uri});\n    artist.type = 'artist';\n    artist.name = data.name;\n    artist.images = data.images;\n    if(!artist.tracks) {\n        artist.tracks = topTracks.tracks;\n        artist.total_duration = totalDuration(artist.tracks);\n    }\n\n    artist.tracks = artist.tracks.map(i => {\n        return {\n            id : i.id,\n            name : i.name,\n            duration_ms : formatTrackDuration(i.duration_ms),\n            uri : i.uri,\n        }\n    });\n\n    artist.table = {\n        head :  ['name','duration'],\n        body  : artist.tracks\n    }\n\n    return artist;\n}\n\nconst getView = async ({uri}) => {\n    let content;\n    if(uri.split(':').indexOf('album') >= 0) {\n        content = await fetchAlbum(uri);\n    } else if(uri.split(':').indexOf('playlist') >= 0) {\n\n        content = await fetchPlaylist(uri);\n\n    } else if(uri.split(':').indexOf('artist') >= 0) {\n        content = await fetchArtist(uri);\n    }\n\n    return content;\n}\n\nconst init = ({setDeviceId}) => {\n    console.log('____init___');\n\n    const player = new window.Spotify.Player({\n        playerInstance: new window.Spotify.Player({ name: 'Kenjicas Player' }),\n        name: 'Kenjicas Player',\n        getOAuthToken: callback => callback(getSession().access_token)\n    });\n\n    player.setDeviceId = setDeviceId;\n    player.play = play;\n    player.next = next;\n    player.previous = previous;\n    player.pause = pause;\n    player.resume = resume;\n\n    return player;\n}\n\nconst previous = (lastUri) => {\n    console.log(lastUri)\n    try {\n        fetch('https://api.spotify.com/v1/me/player/previous',{\n            method : 'POST',\n            headers : {\n                'content-type' : 'application/json',\n                'authorization' : `${getSession().token_type} ${getSession().access_token}`\n            }\n        });\n    } catch(err) {\n        play({uri : lastUri})\n    }\n\n}\n\nconst next = () => {\n    fetch('https://api.spotify.com/v1/me/player/next',{\n        method : 'POST',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst pause = () => {\n    fetch('https://api.spotify.com/v1/me/player/pause',{\n        method : 'PUT',\n        headers : {\n            'content-type' : 'application/json',\n            'authorization' : `${getSession().token_type} ${getSession().access_token}`\n        }\n    });\n}\n\nconst resume = async ({device_id}) => {\n    console.log(device_id)\n   fetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\n       method: 'PUT',\n       headers: {\n           'Content-Type': 'application/json',\n           'Authorization': `Bearer ${getSession().access_token}`\n       }\n   });\n}\n\n\nconst play = async ({uri,uris,device_id}) => {\n    let queue = orderList(uri,(uris || []).map(({uri}) => uri));\n\n    fetch(`https://api.spotify.com/v1/me/player/play?device_id=${device_id}`, {\n        method: 'PUT',\n        body: JSON.stringify({ uris : queue || [uri] }),\n        headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${getSession().access_token}`\n        }\n    });\n}\n\nexport default {\n    init,\n    getView\n}\n","import { setSession,getSession, removeSession,isAuthenticated } from '../utils';\nimport {\n    get_user,\n    get_devices,get_playlists,\n    get_recently_tracks,\n    get_a_playlist,\n    get_featured_playlist,\n    top_artists\n} from '../api';\n\nimport Api from '../api/player';\n\n/**\n * Retrieves user information\n *\n * @function getUser\n * @return {Void}\n */\nexport const getUser = () => {\n    return dispatch => {\n        get_user().then( data => {\n            dispatch({\n                type : 'GET_USER',\n                payload : data.data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves home data\n *\n * @function getHome\n * @return {Void}\n */\nexport const getHome = () => {\n    return async dispatch => {\n        const promises = [get_recently_tracks(),get_featured_playlist(),top_artists()];\n        const [ { data : recentlyTracks }, { data : featuredPlaylists }, { data : topArtists } ] = await Promise.all(Object.values(promises));\n        /**\n         * Model array of recently tracks to albums for the homepage view\n         *\n         * @function factoryRecentlyTracks\n         * @return {Void}\n         */\n        const factoryRecentlyTracks = (response) => {\n            let  ids = [];\n            let albums = response.items.map(item => item.track.album);\n\n            albums = albums.filter(item => {\n                if(ids.includes(item.id)) return false;\n                ids.push(item.id);\n                return item;\n            });\n\n            return {\n                next : response.next,\n                limit : response.limit,\n                href : response.href,\n                message : 'Recently Played',\n                items : albums,\n                type : 'recently-played'\n            }\n        }\n        /**\n         * Model the playlist response for the homepage view\n         *\n         * @function factoryPlaylists\n         * @return {Void}\n         */\n        const factoryPlaylists = (response) => {\n            return {\n                message : response.message,\n                items : response.playlists.items,\n                type : 'playlists'\n            }\n        }\n        /**\n         * Model user's top artists response for the homepage view\n         *\n         * @function factoryTopArtists\n         * @return {Void}\n         */\n        const factoryTopArtists = (response) => {\n            return {\n                message : 'Top Artists',\n                items : response.items,\n                type : 'top-artists'\n            };\n        }\n\n        dispatch({\n            type : 'GET_HOME',\n            payload : {\n                recentlyTracks : factoryRecentlyTracks(recentlyTracks),\n                featuredPlaylists : factoryPlaylists(featuredPlaylists),\n                top_artists : factoryTopArtists(topArtists)\n            }\n        });\n    }\n}\n\n/**\n * Retrieves featured playlists from a country\n *\n * @function getFeaturedPlaylist\n * @return {Void}\n */\nexport const getFeaturedPlaylist = () => {\n    return dispatch => {\n        get_featured_playlist().then( data => {\n            dispatch({\n                type : 'GET_FEATURED_PLAYLISTS',\n                payload : data.data\n            });\n        })\n    }\n}\n\n/**\n * Retrieves a playlist\n *\n * @function getPlaylist\n * @return {Void}\n */\nexport const getPlaylist = (id) => {\n    return async dispatch => {\n        let {data} = await get_a_playlist(id);\n        dispatch({\n            type : 'GET_PLAYLIST',\n            payload : data\n        });\n    }\n}\n\n/**\n * Retrieves devices avaiable\n *\n * @function getDevices\n * @return {Void}\n */\nexport const getDevices = () => {\n    return dispatch => {\n        get_devices().then(({data}) => {\n            dispatch({\n                type : 'GET_DEVICES',\n                payload : data\n            });\n        })\n    }\n}\n\n/**\n * Sets a deviceId\n *\n * @function setDeviceId\n * @return {Void}\n */\nexport const setDeviceId = (data) => {\n    return dispatch => {\n        dispatch({\n            type : 'SET_DEVICE_ID',\n            payload : data\n        });\n    }\n}\n\n/**\n * Retrieves user's playlists\n *\n * @function getPlay    lists\n * @return {Void}\n */\nexport const getPlaylists = () => {\n    return dispatch => {\n        get_playlists().then(({data}) => {\n            dispatch({\n                type : 'GET_PLAYLISTS',\n                payload : data\n            });\n        })\n    }\n}\n\n/**\n * Verifies if the user is logged\n * @function isLogged\n * @return {Void}\n */\nexport const isLogged = () => {\n    return dispatch => {\n        dispatch({\n            type : 'ISLOGGED',\n            payload : {\n                status : isAuthenticated(),\n                access_token : getSession().access_token\n            }\n        });\n    }\n}\n\n/**\n * Sets the app's view ( browse,home,playlists,album )\n * @function setView\n * @param props contains the uri of a song or playlist\n * @return {Void}\n */\nexport const setView = (props) => {\n    return async dispatch => {\n        // salve o ultimo tpl acessado\n        (props || {}).uri && window.localStorage.setItem('last_uri',props.uri);\n        dispatch({\n            type : 'SET_VIEW',\n            payload : (props || {}).uri || 'home'\n        });\n    }\n}\n\n/**\n * Return the instance of the Player\n * @function getView\n * @return {Void}\n */\nexport const getView = ({uri}) => {\n    return async dispatch => {\n        const view = await Api.getView({uri});\n        dispatch({\n            type : 'GET_VIEW',\n            payload : view\n        });\n    }\n}\n\n/**\n * Clear the authorization data\n * @function logout\n * @return {Void}\n */\nexport const logout = () => {\n    return dispatch => {\n        removeSession();\n        dispatch({\n            type : 'LOGOUT',\n            payload : {\n                status : false,\n                access_token : false\n            }\n        });\n    }\n}\n\n/**\n * Sets token for the logged user\n * @function login\n * @param response authentication\n * @return {Void}\n */\nexport const login = (response) => {\n    return dispatch => {\n        setSession(response);\n        dispatch({\n            type : 'LOGIN',\n            payload : {\n                status : true,\n                access_token : getSession().access_token\n            }\n        });\n    }\n}\n\nexport const getPlayer = ({ currentTrack, setDeviceId }) => {\n    return dispatch => {\n        const player = Api.init({ currentTrack, setDeviceId });\n        dispatch({\n            type : 'GET_PLAYER',\n            payload : player\n        });\n    }\n}\n\n/**\n * Set current track and context data\n * @function setCurrentState\n * @param response changed state\n * @return {Void}\n */\nexport const setCurrentState = (state) => {\n    return dispatch => {\n        const {\n            position,\n            duration,\n            paused,\n            shuffle,\n            repeat_mode,\n            track_window : {\n                current_track,\n                next_tracks,\n                previous_tracks\n            }\n        } = state;\n\n        console.log(state);\n\n        dispatch({\n            type : 'SET_CURRENT_STATE',\n            payload : {\n                position,\n                duration,\n                paused,\n                shuffle,\n                repeat_mode,\n                current_track,\n                next_tracks,\n                previous_tracks\n            }\n        });\n    }\n}\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport {\n    getHome,\n    setView\n} from \"../../actions\";\n\nclass Main extends React.Component {\n\n    componentDidMount() {\n        this.props.getHome();\n    }\n\n    renderAlbums(playlist) {\n        return (\n            <div className=\"album col-sm-3\" onClick={() => { this.props.setView({uri : playlist.uri}) }} key={playlist.id}>\n                <div className=\"image\" style={\n                    { backgroundImage: `url(${playlist.images.length && playlist.images[0].url})`, backgroundSize :'cover', backgroundPosition:'center center' }\n                }></div>\n                <div className=\"card-body\">\n                    <p className=\"card-title\">{playlist.name}</p>\n                    <small className=\"card-text\">{playlist.description}</small>\n                </div>\n            </div>\n        )\n    }\n\n    renderRow(row) {\n        return (\n            <>\n                <h2> {row.message} </h2>\n                <div className=\"albums-row\" key={row.type}>\n                    {row.items.map(this.renderAlbums.bind(this))}\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        if(Object.keys(this.props.home).length) {\n            return (\n                <div className=\"home\">\n                    {Object.values(this.props.home).map(this.renderRow.bind(this))}\n                </div>\n            );\n        } else {\n            return (\n                <div className=\"home\">\n                    Loading...\n                </div>\n            )\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        home: state.home\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getHome,\n    setView\n})(Main);\n","import React from 'react';\nimport Styled from 'styled-components';\n\nconst StyledHeader = Styled.div`\n        padding: 10px 0;\n        margin-bottom: 15px;\n\n        img {\n            width: 220px;\n        }\n\n        .info {\n            align-self: flex-end;\n            padding: 0 10px;\n            p { margin: 0; }\n            .info-type {\n                position: relative;\n                top: 5px;\n                text-transform: uppercase;\n                font-weight: 300;\n                font-size: 15px;\n            }\n            .info-name {\n                font-size: 48px;\n                font-weight: 600;\n                margin-bottom: 0;\n            }\n            .info-description {\n                max-width: 500px;\n            }\n            .info-details {\n                padding: 14px 0;\n            }\n            .info-tracks {\n                margin-right: 4px;\n            }\n            .info-owner {\n                &:after {\n                    content:\"*\";\n                    padding: 0 6px;\n                }\n            }\n        }\n\n        .info-interactive {\n            .play {\n                cursor: pointer;\n                background: #1DB954;\n                border-radius: 15px;\n                font-size: 11px;\n                letter-spacing: 2px;\n                font-weight: bold;\n                width: 106px;\n                padding: 4px;\n                text-align: center;\n            }\n        }\n`\n\n\nconst TracklistHeader = ({props}) => {\n    const {\n        tracks,\n        images,\n        name,\n        description,\n        owner,\n        total_duration,\n        type\n    } = props;\n\n    return (\n        <StyledHeader className=\"row\">\n            {(images.length && images[0].url &&\n                <div className=\"artwork col-auto d-none d-lg-block\">\n                    <img src={images[0].url} alt={name || ''}/>\n                </div>\n            )}\n            <div className=\"col info d-flex flex-column\">\n                <strong className=\"info-type\">{type}</strong>\n                <h3 className=\"info-name\">{name}</h3>\n                <span className=\"info-description\">\n                    {description}\n                </span>\n                <div className=\"info-details\">\n                    <span className=\"info-owner\">\n                        Created by <strong>{(owner || {}).display_name}</strong>\n                    </span>\n                    <span className=\"info-tracks\">\n                        {(tracks || []).length} songs,\n                    </span>\n                    <span className=\"info-duration\">\n                        {total_duration}\n                    </span>\n                </div>\n                <div className=\"info-interactive\">\n                    <div className=\"play\"> PLAY </div>\n                </div>\n            </div>\n        </StyledHeader>\n    )\n}\n\nexport default TracklistHeader;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { setView } from './../../actions';\n\nclass Tracklist extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filteredItems : []\n        }\n    }\n    setArtist ({ artist, total, index }) {\n        const { id, uri, name } = artist;\n        return (\n            <span\n                key={id+'#'+index}\n                onClick={(ev) => {\n                    ev.stopPropagation();\n                    this.props.setView({ uri });\n                }}\n            >\n                {total > 1 && index !== total - 1 ? `${name}, ` : name}\n            </span>\n        );\n    }\n\n    setAlbum(ev,item) {\n        ev.stopPropagation();\n        this.props.setView({ uri: item.album.uri });\n    }\n\n    renderList(item,index) {\n        return (\n            <tr\n                key={item.id+'#'+index}\n                onClick={() => {\n                    if (this.props.device_id) {\n                        this.props.player.play({\n                            uri: item.uri,\n                            uris: this.props.view.tracks,\n                            device_id: this.props.device_id,\n                        });\n                    }\n                }}\n            >\n                <td>\n                    <span><i className=\"play fas fa-play\"></i></span>\n                </td>\n                {\n                    item.name &&\n                    <td>\n                        <span>{item.name}</span>\n                    </td>\n                }\n                {\n                    item.artists &&\n                    <td>\n                        <span className=\"link\">{item.artists && Object.values(item.artists).map((artist, index) => this.setArtist({ artist,total: (item.artists || []).length, index }))}</span>\n                    </td>\n                }\n                {\n                    item.album &&\n                    <td>\n                        <span className=\"link\" onClick={(ev) => this.setAlbum(ev,item)}> {item.album.name} </span>\n                    </td>\n                }\n                {\n                item.duration_ms &&\n                <td>\n                    <span> {item.duration_ms} </span>\n                </td>\n                }\n            </tr>\n        );\n    }\n\n    onFilter(ev) {\n            this.setState({\n            filteredItems : this.props.view.table.body.filter(({name}) => name.toLowerCase().replace('ã','a').indexOf(ev.target.value.toLowerCase()) > -1 )\n        })\n    }\n\n    render() {\n        if (this.props.view.tracks) {\n            return (\n                <>\n                    <div className=\"tracklist\">\n                        <div className=\"filter\">\n                            <input type=\"text\" placeholder=\"Filter\" onChange={(ev) => { this.onFilter(ev) }} />\n                        </div>\n                        <table className=\"table\">\n                            <thead>\n                                <tr className=\"header\">\n                                    <th scope=\"col\"></th>\n                                    {this.props.view.table.head.map(i => (<th key={i}>{i}</th>))}\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {((this.state.filteredItems || []).length > 0 ? this.state.filteredItems : this.props.view.table.body).map((i,index) => this.renderList(i,index))}\n                            </tbody>\n                        </table>\n                    </div>\n                </>\n            );\n        } else {\n            return <> Loading... </>;\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.player\n    };\n};\n\nexport default connect(mapStateToProps,{ setView })(Tracklist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { getView, setView } from \"../../actions\";\n\nimport TracklistHeader from \"../tracklist-header\";\nimport Tracklist from \"../tracklist\";\n\nclass Playlist extends React.Component {\n\n    componentWillMount() {\n        this.props.getView({\n            uri: this.props.uri\n        });\n    }\n\n    UNSAFE_componentWillUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).tracks || []).length &&\n            ((this.props.view || {}).tracks || []).length &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n\n    render() {\n        const { tracks } = this.props.view;\n        const {\n            view,\n            device_id\n        } = this.props;\n\n        if (tracks) {\n            return (\n                <div className=\"playlist\">\n                    <TracklistHeader\n                        props={view}\n                    />\n                    <Tracklist\n                        view={view}\n                        device_id={device_id}\n                    />\n                </div>\n            );\n        } else {\n            return <>loading</>;\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        device_id: state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView,\n})(Playlist);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport { getView, setView } from \"../../actions\";\n\nimport TracklistHeader from \"../tracklist-header\";\nimport Tracklist from \"../tracklist\";\n\nclass Artist extends React.Component {\n    componentWillMount() {\n        this.props.getView({ uri: this.props.uri });\n    }\n    componentDidUpdate(nextProps) {\n        if (\n            ((nextProps.view || {}).tracks || []).length &&\n            ((this.props.view || {}).tracks || []).length &&\n            this.props.uri !== nextProps.uri\n        ) {\n            this.props.getView({ uri: nextProps.uri });\n        }\n    }\n    render() {\n        const { tracks } = this.props.view;\n        const { view,device_id } = this.props;\n        if (tracks) {\n            return (\n                <div className=\"artist\">\n                    <TracklistHeader props={view} />\n                    <Tracklist view={view} limit=\"5\" device_id={device_id} />\n                    <button>show more</button>\n                </div>\n            );\n        } else {\n            return <>loading</>;\n        }\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        uri: state.uri,\n        view: state.view,\n        device_id: state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    getView,\n    setView\n})(Artist);\n","import React from \"react\";\nimport Home from \"../home\";\nimport Playlist from \"../playlist\";\nimport Artist from \"../artist\";\n\nconst View = (props) => {\n    const { uri } = props;\n    return (\n            <>\n                {props.uri.indexOf('album') >= 0 ? (\n                    'album'\n                ) : uri.indexOf('artist') >= 0 ? (\n                    <Artist />\n                ) : uri.indexOf('playlist') >= 0 ? (\n                    <Playlist />\n                ) : uri.indexOf('home') >= 0 ? (\n                    <Home />\n                ) : (\n                    'sem tpl'\n                )}\n            </>\n    );\n\n}\n\nexport default View;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport SpotifyLogin from 'react-spotify-login';\nimport styled from 'styled-components';\n\nimport { clientId, redirectUri } from './../../config';\nimport { logout, login } from './../../actions';\nimport { scope } from './../../api';\n\nconst StyledLogin = styled.div`\n    @font-face {\n        font-family: 'Cooper Black';\n        src: url(${process.env.PUBLIC_URL}/assets/cooper_black.ttf);\n    }\n\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    font-family: \"Cooper Black\";\n    background: rgba(28,28,28);\n    border: 2em solid #ffffff;\n    color: #fff;\n    overflow: none;\n    height: 100vh;\n    text-align: center;\n\n    .title {\n        padding: 20px;\n        font-size: 2em;\n        p {\n            font-size: 22px;\n        }\n    }\n\n    .btn {\n        border: 1px solid #ffffff;\n        font-size: 17px;\n        color: #ffffff;\n    }\n`\n\nclass Login extends React.Component {\n    onSuccess(response) {\n        this.props.login(response);\n    }\n    onFailure(err) {\n        console.log('fail',err);\n    }\n    logout() {\n        this.props.logout();\n    }\n    render() {\n        return (\n            <StyledLogin style={{backgroundImage : `url('${process.env.PUBLIC_URL}/assets/background.jpg')`, backgroundSize : 'cover'}}>\n                <div className=\"login container\">\n                    <SpotifyLogin\n                        className=\"btn\"\n                        clientId={clientId}\n                        redirectUri={redirectUri}\n                        onSuccess={(response) => { this.onSuccess(response) }}\n                        onFailure={this.onFailure}\n                        scope={scope}\n                    />\n                </div>\n            </StyledLogin>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user : state.user\n    };\n}\n\nexport default connect(mapStateToProps, { login,logout })(Login);\n","export const clientId = '38a9d82012ce4dcc81269de4479a74fa'; // NOCOMMIT\nexport const clientSecret  = '31cafd8a23394dbfa3bc848199a97bfd'; // NOCOMMIT\nexport const redirectUri = process.env.NODE_ENV === 'development' ? 'http://localhost:3000/' : 'https://kenjikatahira.github.io/react-spotify-player/';\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nimport './style.scss';\nimport logo from './../../logo.svg';\n\nconst Menu = ({playlists, setView, uri, logout, getPlaylists}) => {\n    // Retorna a playlist do usuario\n    !Object.keys(playlists).length && getPlaylists && getPlaylists();\n    // Menu de itens fixos\n    let  menuItems = [\n        {\n            name: \"Home\",\n            uri: \"home\",\n            icon: <i className=\"home fas fa-home\">home</i>,\n        },\n        {\n            name: \"Browse\",\n            uri: \"browse\",\n            icon: <i className=\"fa fa-folder-open\" aria-hidden=\"true\"></i>,\n        },\n        {\n            el: <li key=\"your-library\" className=\"lead\"> Your Library </li>\n        },\n        {\n            name: \"Recently Played\",\n            uri: \"recently-played\"\n        },\n        {\n            name: \"Liked Songs\",\n            uri: \"liked-songs\"\n        },\n        {\n            name: \"Albums\",\n            uri: \"albums\"\n        },\n        {\n            name: \"Bands\",\n            uri: \"bands\"\n        },\n        {\n            name: \"Podcasts\",\n            uri: \"podcasts\"\n        },\n        {\n            el: <li key=\"lead-playlists\" className=\"lead\"> Playlists </li>\n        }\n    ];\n    const renderList = (item) => {\n        const { display_name } = (item || {}.owner)\n        if(item.el) {\n            return item.el;\n        } else {\n            return (\n                <li\n                    key={item.uri}\n                    className={uri === item.uri ? \"active\" : \"\"}\n                    data-owner={display_name ? `* by ${display_name}`: \"\" }\n                    id={item.uri}\n                    onClick={() => setView({ uri: item.uri })}\n                >\n                    {item.icon ? item.icon : ''} {item.name}\n                </li>\n            );\n        }\n    }\n    if((playlists.items || []).length) {\n        return (\n            <ul className=\"menu\">\n                <svg viewBox=\"0 0 1134 340\" class=\"spotify-logo\"><path fill=\"currentColor\" d=\"M8 171c0 92 76 168 168 168s168-76 168-168S268 4 176 4 8 79 8 171zm230 78c-39-24-89-30-147-17-14 2-16-18-4-20 64-15 118-8 162 19 11 7 0 24-11 18zm17-45c-45-28-114-36-167-20-17 5-23-21-7-25 61-18 136-9 188 23 14 9 0 31-14 22zM80 133c-17 6-28-23-9-30 59-18 159-15 221 22 17 9 1 37-17 27-54-32-144-35-195-19zm379 91c-17 0-33-6-47-20-1 0-1 1-1 1l-16 19c-1 1-1 2 0 3 18 16 40 24 64 24 34 0 55-19 55-47 0-24-15-37-50-46-29-7-34-12-34-22s10-16 23-16 25 5 39 15c0 0 1 1 2 1s1-1 1-1l14-20c1-1 1-1 0-2-16-13-35-20-56-20-31 0-53 19-53 46 0 29 20 38 52 46 28 6 32 12 32 22 0 11-10 17-25 17zm95-77v-13c0-1-1-2-2-2h-26c-1 0-2 1-2 2v147c0 1 1 2 2 2h26c1 0 2-1 2-2v-46c10 11 21 16 36 16 27 0 54-21 54-61s-27-60-54-60c-15 0-26 5-36 17zm30 78c-18 0-31-15-31-35s13-34 31-34 30 14 30 34-12 35-30 35zm68-34c0 34 27 60 62 60s62-27 62-61-26-60-61-60-63 27-63 61zm30-1c0-20 13-34 32-34s33 15 33 35-13 34-32 34-33-15-33-35zm140-58v-29c0-1 0-2-1-2h-26c-1 0-2 1-2 2v29h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v58c0 23 11 35 34 35 9 0 18-2 25-6 1 0 1-1 1-2v-21c0-1 0-2-1-2h-2c-5 3-11 4-16 4-8 0-12-4-12-12v-54h30c1 0 2-1 2-2v-22c0-1-1-2-2-2h-30zm129-3c0-11 4-15 13-15 5 0 10 0 15 2h1s1-1 1-2V93c0-1 0-2-1-2-5-2-12-3-22-3-24 0-36 14-36 39v5h-13c-1 0-2 1-2 2v22c0 1 1 2 2 2h13v89c0 1 1 2 2 2h26c1 0 1-1 1-2v-89h25l37 89c-4 9-8 11-14 11-5 0-10-1-15-4h-1l-1 1-9 19c0 1 0 3 1 3 9 5 17 7 27 7 19 0 30-9 39-33l45-116v-2c0-1-1-1-2-1h-27c-1 0-1 1-1 2l-28 78-30-78c0-1-1-2-2-2h-44v-3zm-83 3c-1 0-2 1-2 2v113c0 1 1 2 2 2h26c1 0 1-1 1-2V134c0-1 0-2-1-2h-26zm-6-33c0 10 9 19 19 19s18-9 18-19-8-18-18-18-19 8-19 18zm245 69c10 0 19-8 19-18s-9-18-19-18-18 8-18 18 8 18 18 18zm0-34c9 0 17 7 17 16s-8 16-17 16-16-7-16-16 7-16 16-16zm4 18c3-1 5-3 5-6 0-4-4-6-8-6h-8v19h4v-6h4l4 6h5zm-3-9c2 0 4 1 4 3s-2 3-4 3h-4v-6h4z\"></path></svg>\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n                {playlists.items.map((i) => renderList(i))}\n            </ul>\n        );\n    } else {\n        return (\n            <ul className=\"menu\">\n                <div className=\"fixed-pages\">\n                    {menuItems.map((i) => renderList(i))}\n                </div>\n            </ul>\n        );\n    }\n}\n\nMenu.propTypes = {\n    playlists : PropTypes.object,\n    uri : PropTypes.string,\n    setView : PropTypes.func,\n    logout : PropTypes.func\n}\n\nexport default Menu;\n","import React from 'react';\n\nimport './style.scss';\n\nconst Playing = ({current_state : { current_track }}) => {\n    const image = ((((current_track || {}).album || {}).images || [])[0] || {}).url;\n    const track = (current_track || {}).name;\n    const artist = (((current_track || {}).artists || [])[0] || {}).name;\n    return (\n        <div className=\"playing\">\n            <div className=\"image\">\n                <img src={image} alt={image} />\n            </div>\n            <div className=\"info\">\n                <div className=\"track\"><b>{track}</b></div>\n                <div className=\"playing-artist\">{artist}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Playing;\n\n","import React from 'react';\nimport './style.scss';\n\nconst Timer = ({count,fixed}) => {\n    return (\n        <div className=\"timer\">\n            {fixed ? fixed : count}\n        </div>\n    )\n}\n\nexport default Timer;\n\n","import React, { useState, useEffect } from 'react';\nimport Timer from '../timer';\n\nconst TimerContainer = ({current_state,fixed}) => {\n    const {\n        paused,\n        position,\n        current_track\n    } = current_state;\n\n    let [state, setState] = useState({\n        count : 0,\n        current_track\n    });\n\n    // se trocar a musica, zera a contagem\n    if((current_track || {}).id !== (state.current_track || {}).id) {\n        setState({\n            count: 0,\n            current_track : current_track\n        });\n    }\n\n    const millisToMinutesAndSeconds = (millis) => {\n        var minutes = Math.floor(millis / 60000);\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\n        return `${minutes}:${(seconds < 10 ? \"0\" : \"\")}${seconds}`;\n    }\n\n    const timer = (cb) => {\n        const _timer = {\n            start : () => setTimeout(() => {\n                setState({\n                    count : state.count + 1000,\n                    current_track\n                });\n            }, 1000),\n            stop : () => {\n                if((this || {}).start) {\n                    clearTimeout(this.start);\n                }\n            }\n        }\n        _timer[cb]();\n    }\n\n    useEffect(() => {\n        if(!paused && position !== undefined)  {\n            timer('start');\n        } else if(paused){\n            timer('stop');\n        }\n    });\n\n    return (\n        <Timer count={millisToMinutesAndSeconds(state.count)} fixed={fixed} />\n    )\n}\n\nexport default TimerContainer;\n\n","import React from 'react';\nimport './style.scss';\nimport { connect } from \"react-redux\";\nimport { setCurrentState } from './../../actions';\n\nimport Playing from './../playing';\nimport TimerContainer from '../timerContainer';\n\nclass Controls extends React.Component {\n\n    componentDidUpdate() {\n        if(\n            this.props.player &&\n            this.props.player.addListener &&\n            !this.connected\n        ) this.configurePlayer(this.props.player);\n    }\n\n    onChange(state) {\n        this.props.setCurrentState(state);\n    }\n\n    /**\n     * Configure spotify player listeners\n     * @function configurePlayer\n     * @param player Spotify Player Instance\n     * @return {Void}\n     */\n    configurePlayer(player) {\n        if(!player) return;\n        // player -> instancia do spotify player\n        player.addListener('ready', ({device_id}) => {\n            console.log('Ready - Device ID', device_id);\n            player.setDeviceId(device_id);\n        });\n        // update status - action\n        player.addListener('player_state_changed', this.onChange.bind(this));\n        // player connected\n        player.connect();\n        this.connected = true;\n    }\n\n    togglePlayButton() {\n        const { paused } = this.props.current_state;\n        if(paused === undefined || paused) {\n            return (\n                <button\n                    className=\"btn btn-outline-secondary\"\n                    onClick={() => {\n                        this.props.player.resume({device_id : this.props.device_id || ''})\n                    }}\n                >\n                    <i className=\"fas fa-play\"></i>\n                </button>\n            )\n        } else {\n            return (\n                <button className=\"btn btn-outline-secondary\" onClick={this.props.player.pause}>\n                    <i className=\"fas fa-pause\" onClick={this.props.player.pause}></i>\n                </button>\n            )\n        }\n    }\n\n    render() {\n        const {\n            player,\n            current_state\n        } = this.props;\n\n        // verify if player device_id is ready to take commands\n        if(this.props.device_id) {\n            return(\n                <>\n                    <div className=\"controls\">\n                        <div className=\"playing-wrapper\">\n                            <Playing current_state={current_state} />\n                        </div>\n                        <div className=\"inner-controls\">\n                            <TimerContainer current_state={current_state} />\n                            <button className=\"btn btn-outline-secondary\" onClick={() => {player.previous(this.teste)}}>\n                                <i className=\"fas fa-backward\"></i>\n                            </button>\n                            {this.togglePlayButton()}\n                            <button className=\"btn btn-outline-secondary\" onClick={player.next}>\n                                <i className=\"fas fa-forward\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </>\n            )\n        } else {\n            return(\n                <div>Loading...</div>\n            )\n        }\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        device_id: state.device_id,\n        player : state.player,\n        current_state : state.current_state\n    };\n};\n\nexport default connect(mapStateToProps, { setCurrentState })(Controls);\n\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport './style.scss';\n\nimport {\n    logout,\n    getUser,\n    getPlaylists,\n    setView,\n    setDeviceId,\n    getPlayer\n} from \"../../actions\";\n\nimport View from \"../view\";\nimport Login from \"../login\";\nimport Menu from \"../menu\";\nimport Controls from \"../controls\";\n\nclass Main extends React.Component {\n    constructor() {\n        super();\n        /**\n         * Aplication Initiated Flag\n         * @type {Boolean}\n         */\n        this.initiated = false;\n    }\n    /**\n     * Initial configuration\n     * @function run\n     * @return {Void}\n     */\n    run() {\n        const { currentTrack, setDeviceId } = this.props;\n        this.props.getPlayer({ currentTrack, setDeviceId })\n        this.initiated = true;\n    }\n    UNSAFE_componentWillUpdate() {\n        !this.initiated  && this.props.logged.status === true && this.run();\n    }\n    componentDidMount() {\n        window.onSpotifyWebPlaybackSDKReady = () => {\n            const lastPage = window.localStorage.getItem('last_uri');\n            // Seta a primeira view\n            this.props.setView(lastPage ? { uri : lastPage} : '');\n        };\n    }\n    onSearchChange(ev) {\n        console.log(ev);\n    }\n    render() {\n        const {\n            logged,\n            uri,\n            tracks,\n            getPlaylists,\n            logout,\n            setView,\n            playlists\n        } = this.props;\n\n        if(!logged.status) {\n            return <Login />;\n        } else {\n            return (\n                <div className=\"main\">\n                    <div className=\"menu-wrapper\">\n                        <Menu\n                            getPlaylists={getPlaylists}\n                            logout={logout}\n                            setView={setView}\n                            playlists={playlists}\n                            uri={uri}\n                        />\n                    </div>\n                    <div className=\"browser-wrapper\">\n                        <div className=\"browser-inner-wrapper\">\n                            <View\n                                uri={uri}\n                                tracks={tracks}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"controls-wrapper\">\n                        <Controls />\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user,\n        logged: state.logged,\n        playlists: state.playlists,\n        uri: state.uri,\n        device_id: state.device_id\n    };\n};\n\nexport default connect(mapStateToProps, {\n    logout,\n    getUser,\n    getPlaylists,\n    setView,\n    setDeviceId,\n    getPlayer\n})(Main);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './style.scss';\n\nimport { isLogged } from './actions';\n\nimport Main from './components/main';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.isLogged();\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <Main></Main>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        logged : state.logged\n    };\n}\n\nexport default connect(mapStateToProps, { isLogged })(App);\n","import React from 'react';\nimport thunk from 'redux-thunk';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport App from './App';\n\nconst store = createStore(\n  reducers,applyMiddleware(\n    thunk\n  )\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}